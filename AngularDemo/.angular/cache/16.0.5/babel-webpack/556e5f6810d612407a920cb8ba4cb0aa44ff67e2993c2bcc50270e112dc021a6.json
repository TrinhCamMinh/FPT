{"ast":null,"code":"import _asyncToGenerator from \"D:/Workspace/FPT/AngularDemo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from 'src/environments/environment.development';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nlet map;\nconst VietNamCor = {\n  lat: 15.9031,\n  lng: 105.8067\n};\nconst Ganivo = [{\n  name: 'HCMU00020.001/G',\n  type: 'G',\n  XCor: 10.789538365455055,\n  YCor: 106.63355331689347\n}, {\n  name: 'HCMU00020.002/G',\n  type: 'G',\n  XCor: 10.790382019066472,\n  YCor: 106.63369793039553\n}];\nconst TilePipe = [{\n  name: 'HCMU00001.001/O',\n  type: 'O',\n  XCor: 10.835144728045616,\n  YCor: 106.66329563558202\n}, {\n  name: 'HCMU00001.002/O',\n  type: 'O',\n  XCor: 10.835263001921522,\n  YCor: 106.66372920705183\n}];\nconst Tank = [{\n  name: 'HCMU00001.002/B',\n  type: 'B',\n  XCor: 10.835000478970937,\n  YCor: 106.66365127116387\n}, {\n  name: 'HCMU00001.003/B',\n  type: 'B',\n  XCor: 10.835297724069841,\n  YCor: 106.66463990032798\n}];\nlet loader = new Loader({\n  apiKey: environment.apiKey,\n  version: 'weekly'\n});\nlet currentInfoWindow = null;\nlet isOpenDetectWater = false;\nconst circles = [];\nconst markers = [];\nconst rectangles = [];\nconst ganivos = [];\nconst tanks = [];\nconst TilePines = [];\nclass AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.successMarkers = [];\n    this.coordinate = [{\n      lat: Number,\n      lng: Number\n    }];\n    this.readFile = () => {\n      this.http.get('assets/Book1.csv', {\n        responseType: 'text'\n      }).subscribe(data => {\n        this.result = data.split('\\n');\n        this.result.map((item, index) => {\n          this.coordinate.push({\n            lat: item.split(',')[0],\n            lng: item.split(',')[1]\n          });\n          const marker = new google.maps.Marker({\n            position: {\n              lat: Number(item.split(',')[0]),\n              lng: Number(item.split(',')[1])\n            },\n            map,\n            title: `Item index ${index}`\n          });\n          return marker;\n        });\n      }, error => console.log(error.error));\n    };\n    this.handleWaterCheckBox = event => {\n      if (event.target.checked) {\n        isOpenDetectWater = true;\n      } else {\n        isOpenDetectWater = false;\n      }\n    };\n  }\n  ngOnInit() {\n    this.demo();\n  }\n  demo() {\n    loader.load().then( /*#__PURE__*/_asyncToGenerator(function* () {\n      //* initial map element\n      const {\n        Map\n      } = yield google.maps.importLibrary('maps');\n      map = new Map(document.getElementById('map'), {\n        center: VietNamCor,\n        zoom: 8\n      });\n      Ganivo.forEach((item, index) => {\n        const marker = new google.maps.Marker({\n          position: {\n            lat: item.XCor,\n            lng: item.YCor\n          },\n          icon: 'https://img.icons8.com/ios-filled/50/marker-g.png',\n          map,\n          title: `Item at index ${index}`\n        });\n        marker.addListener('rightclick', event => {\n          if (currentInfoWindow) {\n            currentInfoWindow.close();\n          }\n          const infowindow = new google.maps.InfoWindow({\n            content: '<div><input type=\"checkbox\" id=\"ICON1\">ðŸ¤ž</div>' + '<div><input type=\"checkbox\" id=\"ICON2\">ðŸ‘Œ</div>'\n          });\n          infowindow.setPosition(event.latLng);\n          infowindow.open(map);\n          currentInfoWindow = infowindow;\n          infowindow.addListener('domready', () => {\n            const firstIconCheckbox = document.getElementById('ICON1');\n            const removeCheckbox = document.getElementById('remove');\n            firstIconCheckbox?.addEventListener('change', () => {});\n          });\n          removeCheckbox?.addEventListener('change', () => {\n            rectangle.setMap(null);\n            infowindow.close();\n          });\n        });\n      });\n      ganivos.push(marker);\n    }));\n    TilePipe.forEach((item, index) => {\n      const marker = new google.maps.Marker({\n        position: {\n          lat: item.XCor,\n          lng: item.YCor\n        },\n        icon: 'https://img.icons8.com/ios-filled/50/marker-t.png',\n        map,\n        title: `Item at index ${index}`\n      });\n      TilePines.push(marker);\n    });\n    Tank.forEach((item, index) => {\n      const marker = new google.maps.Marker({\n        position: {\n          lat: item.XCor,\n          lng: item.YCor\n        },\n        icon: 'https://img.icons8.com/ios/50/box--v1.png',\n        map,\n        title: `Item at index ${index}`\n      });\n      tanks.push(marker);\n    });\n    this.drawingManager = new google.maps.drawing.DrawingManager({\n      drawingMode: null,\n      drawingControl: false,\n      circleOptions: {\n        fillColor: '#ffff00',\n        fillOpacity: 1,\n        strokeWeight: 5,\n        clickable: false,\n        editable: true,\n        zIndex: 1\n      }\n    });\n    this.drawingManager.setMap(map);\n  }\n}\nAppComponent.Éµfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ÉµÉµdirectiveInject(i1.HttpClient));\n};\nAppComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 61,\n  vars: 0,\n  consts: [[1, \"ms-4\", \"d-flex\", \"gap-3\"], [1, \"d-flex\", \"flex-column\", \"gap-3\"], [1, \"menu-item\", \"d-flex\", \"align-items-center\", \"gap-2\", \"ms-2\", 3, \"click\"], [1, \"oval-yellow\"], [1, \"dropdown\", \"d-flex\", \"align-items-center\"], [\"width\", \"20\", \"height\", \"20\", \"src\", \"https://img.icons8.com/external-flat-andi-nur-abdillah/20/external-Option-survey-(flat)-flat-andi-nur-abdillah.png\", \"alt\", \"shapes icon\"], [\"data-bs-toggle\", \"dropdown\", \"data-bs-auto-close\", \"outside\", \"aria-expanded\", \"false\", \"role\", \"button\", \"data-bs-toggle\", \"dropdown\", \"aria-expanded\", \"false\", 1, \"dropdown-toggle\", \"text-decoration-none\", \"ms-2\"], [1, \"dropdown-menu\"], [1, \"oval\"], [1, \"oval-lime\"], [1, \"oval-teal\"], [1, \"oval-purple\"], [\"width\", \"20\", \"height\", \"20\", \"src\", \"https://img.icons8.com/external-kmg-design-outline-color-kmg-design/20/external-option-ui-essential-kmg-design-outline-color-kmg-design.png\", \"alt\", \"options icon\"], [1, \"d-flex\", \"align-items-center\", \"gap-2\", \"ms-2\"], [1, \"checkbox-wrapper-3\"], [\"type\", \"checkbox\", \"id\", \"cbx-3\", 1, \"waterCheckbox\", 3, \"change\"], [\"for\", \"cbx-3\", 1, \"toggle\"], [\"id\", \"map\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ÉµÉµlistener(\"click\", function AppComponent_Template_div_click_2_listener() {\n        return ctx.handleDrawHandClick();\n      });\n      i0.ÉµÉµelement(3, \"span\", 3);\n      i0.ÉµÉµelementStart(4, \"span\");\n      i0.ÉµÉµtext(5, \"Hand\");\n      i0.ÉµÉµelementEnd()();\n      i0.ÉµÉµelementStart(6, \"div\", 4);\n      i0.ÉµÉµelement(7, \"img\", 5);\n      i0.ÉµÉµelementStart(8, \"a\", 6);\n      i0.ÉµÉµtext(9, \" Shapes \");\n      i0.ÉµÉµelementEnd();\n      i0.ÉµÉµelementStart(10, \"ul\", 7)(11, \"div\", 2);\n      i0.ÉµÉµlistener(\"click\", function AppComponent_Template_div_click_11_listener() {\n        return ctx.handleDrawMarkerClick();\n      });\n      i0.ÉµÉµelement(12, \"span\", 8);\n      i0.ÉµÉµelementStart(13, \"span\");\n      i0.ÉµÉµtext(14, \"Markers\");\n      i0.ÉµÉµelementEnd()();\n      i0.ÉµÉµelementStart(15, \"div\", 2);\n      i0.ÉµÉµlistener(\"click\", function AppComponent_Template_div_click_15_listener() {\n        return ctx.handleDrawCircleClick();\n      });\n      i0.ÉµÉµelement(16, \"span\", 3);\n      i0.ÉµÉµelementStart(17, \"span\");\n      i0.ÉµÉµtext(18, \"Circles\");\n      i0.ÉµÉµelementEnd()();\n      i0.ÉµÉµelementStart(19, \"div\", 2);\n      i0.ÉµÉµlistener(\"click\", function AppComponent_Template_div_click_19_listener() {\n        return ctx.handleDrawShapeClick();\n      });\n      i0.ÉµÉµelement(20, \"span\", 9);\n      i0.ÉµÉµelementStart(21, \"span\");\n      i0.ÉµÉµtext(22, \"Polygon\");\n      i0.ÉµÉµelementEnd()();\n      i0.ÉµÉµelementStart(23, \"div\", 2);\n      i0.ÉµÉµlistener(\"click\", function AppComponent_Template_div_click_23_listener() {\n        return ctx.handleDrawLineClick();\n      });\n      i0.ÉµÉµelement(24, \"span\", 10);\n      i0.ÉµÉµelementStart(25, \"span\");\n      i0.ÉµÉµtext(26, \"Polyline\");\n      i0.ÉµÉµelementEnd()();\n      i0.ÉµÉµelementStart(27, \"div\", 2);\n      i0.ÉµÉµlistener(\"click\", function AppComponent_Template_div_click_27_listener() {\n        return ctx.handleDrawRectangleClick();\n      });\n      i0.ÉµÉµelement(28, \"span\", 11);\n      i0.ÉµÉµelementStart(29, \"span\");\n      i0.ÉµÉµtext(30, \"Rectangle\");\n      i0.ÉµÉµelementEnd()()()();\n      i0.ÉµÉµelementStart(31, \"div\", 4);\n      i0.ÉµÉµelement(32, \"img\", 5);\n      i0.ÉµÉµelementStart(33, \"a\", 6);\n      i0.ÉµÉµtext(34, \" Icon \");\n      i0.ÉµÉµelementEnd();\n      i0.ÉµÉµelementStart(35, \"ul\", 7)(36, \"div\", 2);\n      i0.ÉµÉµlistener(\"click\", function AppComponent_Template_div_click_36_listener() {\n        return ctx.handleChangeGanivoIcon();\n      });\n      i0.ÉµÉµelement(37, \"span\", 8);\n      i0.ÉµÉµelementStart(38, \"span\");\n      i0.ÉµÉµtext(39, \"Ganivo Icons\");\n      i0.ÉµÉµelementEnd()();\n      i0.ÉµÉµelementStart(40, \"div\", 2);\n      i0.ÉµÉµlistener(\"click\", function AppComponent_Template_div_click_40_listener() {\n        return ctx.handleChangeTilePineIcon();\n      });\n      i0.ÉµÉµelement(41, \"span\", 8);\n      i0.ÉµÉµelementStart(42, \"span\");\n      i0.ÉµÉµtext(43, \"TilePine Icons\");\n      i0.ÉµÉµelementEnd()();\n      i0.ÉµÉµelementStart(44, \"div\", 2);\n      i0.ÉµÉµlistener(\"click\", function AppComponent_Template_div_click_44_listener() {\n        return ctx.handleChangeTankIcon();\n      });\n      i0.ÉµÉµelement(45, \"span\", 8);\n      i0.ÉµÉµelementStart(46, \"span\");\n      i0.ÉµÉµtext(47, \"Tank Icons\");\n      i0.ÉµÉµelementEnd()()()();\n      i0.ÉµÉµelementStart(48, \"div\", 4);\n      i0.ÉµÉµelement(49, \"img\", 12);\n      i0.ÉµÉµelementStart(50, \"a\", 6);\n      i0.ÉµÉµtext(51, \" Options \");\n      i0.ÉµÉµelementEnd();\n      i0.ÉµÉµelementStart(52, \"ul\", 7)(53, \"div\", 13)(54, \"div\", 14)(55, \"input\", 15);\n      i0.ÉµÉµlistener(\"change\", function AppComponent_Template_input_change_55_listener($event) {\n        return ctx.handleWaterCheckBox($event);\n      });\n      i0.ÉµÉµelementEnd();\n      i0.ÉµÉµelementStart(56, \"label\", 16);\n      i0.ÉµÉµelement(57, \"span\");\n      i0.ÉµÉµelementEnd()();\n      i0.ÉµÉµelementStart(58, \"span\");\n      i0.ÉµÉµtext(59, \"Detect Water\");\n      i0.ÉµÉµelementEnd()()()()();\n      i0.ÉµÉµelement(60, \"div\", 17);\n      i0.ÉµÉµelementEnd();\n    }\n  },\n  styles: [\"#map[_ngcontent-%COMP%] {\\r\\n    height: 100vh;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.oval[_ngcontent-%COMP%] {\\r\\n    width: 10px;\\r\\n    height: 10px;\\r\\n    border-radius: 50%;\\r\\n    background: #333;\\r\\n}\\r\\n\\r\\n.oval-yellow[_ngcontent-%COMP%] {\\r\\n    width: 10px;\\r\\n    height: 10px;\\r\\n    border-radius: 50%;\\r\\n    background: #ffd700;\\r\\n}\\r\\n\\r\\n.oval-lime[_ngcontent-%COMP%] {\\r\\n    width: 10px;\\r\\n    height: 10px;\\r\\n    border-radius: 50%;\\r\\n    background: #00ff00;\\r\\n}\\r\\n\\r\\n.oval-teal[_ngcontent-%COMP%] {\\r\\n    width: 10px;\\r\\n    height: 10px;\\r\\n    border-radius: 50%;\\r\\n    background: #7fffd4;\\r\\n}\\r\\n\\r\\n.oval-purple[_ngcontent-%COMP%] {\\r\\n    width: 10px;\\r\\n    height: 10px;\\r\\n    border-radius: 50%;\\r\\n    background: #6a5acd;\\r\\n}\\r\\n\\r\\n.menu-item[_ngcontent-%COMP%]:hover {\\r\\n    color: blue;\\r\\n    transition: all;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   input[type=\\\"checkbox\\\"][_ngcontent-%COMP%] {\\r\\n    visibility: hidden;\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   .toggle[_ngcontent-%COMP%] {\\r\\n    position: relative;\\r\\n    display: block;\\r\\n    width: 40px;\\r\\n    height: 20px;\\r\\n    cursor: pointer;\\r\\n    -webkit-tap-highlight-color: transparent;\\r\\n    transform: translate3d(0, 0, 0);\\r\\n}\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   .toggle[_ngcontent-%COMP%]:before {\\r\\n    content: \\\"\\\";\\r\\n    position: relative;\\r\\n    top: 3px;\\r\\n    left: 3px;\\r\\n    width: 34px;\\r\\n    height: 14px;\\r\\n    display: block;\\r\\n    background: #9a9999;\\r\\n    border-radius: 8px;\\r\\n    transition: background 0.2s ease;\\r\\n}\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   .toggle[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n    display: block;\\r\\n    background: white;\\r\\n    border-radius: 10px;\\r\\n    box-shadow: 0 3px 8px rgba(154, 153, 153, 0.5);\\r\\n    transition: all 0.2s ease;\\r\\n}\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   .toggle[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:before {\\r\\n    content: \\\"\\\";\\r\\n    position: absolute;\\r\\n    display: block;\\r\\n    margin: -18px;\\r\\n    width: 56px;\\r\\n    height: 56px;\\r\\n    background: rgba(79, 46, 220, 0.5);\\r\\n    border-radius: 50%;\\r\\n    transform: scale(0);\\r\\n    opacity: 1;\\r\\n    pointer-events: none;\\r\\n}\\r\\n\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   #cbx-3[_ngcontent-%COMP%]:checked    + .toggle[_ngcontent-%COMP%]:before {\\r\\n    background: #947ada;\\r\\n}\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   #cbx-3[_ngcontent-%COMP%]:checked    + .toggle[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\r\\n    background: #4f2edc;\\r\\n    transform: translateX(20px);\\r\\n    transition: all 0.2s cubic-bezier(0.8, 0.4, 0.3, 1.25),\\r\\n        background 0.15s ease;\\r\\n    box-shadow: 0 3px 8px rgba(79, 46, 220, 0.2);\\r\\n}\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   #cbx-3[_ngcontent-%COMP%]:checked    + .toggle[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:before {\\r\\n    transform: scale(1);\\r\\n    opacity: 0;\\r\\n    transition: all 0.4s ease;\\r\\n}\\r\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsV0FBVztBQUNmOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksV0FBVztJQUNYLGVBQWU7SUFDZixlQUFlO0FBQ25COztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsY0FBYztJQUNkLFdBQVc7SUFDWCxZQUFZO0lBQ1osZUFBZTtJQUNmLHdDQUF3QztJQUN4QywrQkFBK0I7QUFDbkM7QUFDQTtJQUNJLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFNBQVM7SUFDVCxXQUFXO0lBQ1gsWUFBWTtJQUNaLGNBQWM7SUFDZCxtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLGdDQUFnQztBQUNwQztBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLE1BQU07SUFDTixPQUFPO0lBQ1AsV0FBVztJQUNYLFlBQVk7SUFDWixjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLG1CQUFtQjtJQUNuQiw4Q0FBOEM7SUFDOUMseUJBQXlCO0FBQzdCO0FBQ0E7SUFDSSxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxhQUFhO0lBQ2IsV0FBVztJQUNYLFlBQVk7SUFDWixrQ0FBa0M7SUFDbEMsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixVQUFVO0lBQ1Ysb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsMkJBQTJCO0lBQzNCOzZCQUN5QjtJQUN6Qiw0Q0FBNEM7QUFDaEQ7QUFDQTtJQUNJLG1CQUFtQjtJQUNuQixVQUFVO0lBQ1YseUJBQXlCO0FBQzdCIiwic291cmNlc0NvbnRlbnQiOlsiI21hcCB7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5vdmFsIHtcclxuICAgIHdpZHRoOiAxMHB4O1xyXG4gICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYmFja2dyb3VuZDogIzMzMztcclxufVxyXG5cclxuLm92YWwteWVsbG93IHtcclxuICAgIHdpZHRoOiAxMHB4O1xyXG4gICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYmFja2dyb3VuZDogI2ZmZDcwMDtcclxufVxyXG5cclxuLm92YWwtbGltZSB7XHJcbiAgICB3aWR0aDogMTBweDtcclxuICAgIGhlaWdodDogMTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJhY2tncm91bmQ6ICMwMGZmMDA7XHJcbn1cclxuXHJcbi5vdmFsLXRlYWwge1xyXG4gICAgd2lkdGg6IDEwcHg7XHJcbiAgICBoZWlnaHQ6IDEwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBiYWNrZ3JvdW5kOiAjN2ZmZmQ0O1xyXG59XHJcblxyXG4ub3ZhbC1wdXJwbGUge1xyXG4gICAgd2lkdGg6IDEwcHg7XHJcbiAgICBoZWlnaHQ6IDEwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBiYWNrZ3JvdW5kOiAjNmE1YWNkO1xyXG59XHJcblxyXG4ubWVudS1pdGVtOmhvdmVyIHtcclxuICAgIGNvbG9yOiBibHVlO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uY2hlY2tib3gtd3JhcHBlci0zIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XHJcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4uY2hlY2tib3gtd3JhcHBlci0zIC50b2dnbGUge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogNDBweDtcclxuICAgIGhlaWdodDogMjBweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xyXG59XHJcbi5jaGVja2JveC13cmFwcGVyLTMgLnRvZ2dsZTpiZWZvcmUge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogM3B4O1xyXG4gICAgbGVmdDogM3B4O1xyXG4gICAgd2lkdGg6IDM0cHg7XHJcbiAgICBoZWlnaHQ6IDE0cHg7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGJhY2tncm91bmQ6ICM5YTk5OTk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMnMgZWFzZTtcclxufVxyXG4uY2hlY2tib3gtd3JhcHBlci0zIC50b2dnbGUgc3BhbiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgd2lkdGg6IDIwcHg7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIGJveC1zaGFkb3c6IDAgM3B4IDhweCByZ2JhKDE1NCwgMTUzLCAxNTMsIDAuNSk7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xyXG59XHJcbi5jaGVja2JveC13cmFwcGVyLTMgLnRvZ2dsZSBzcGFuOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW46IC0xOHB4O1xyXG4gICAgd2lkdGg6IDU2cHg7XHJcbiAgICBoZWlnaHQ6IDU2cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDc5LCA0NiwgMjIwLCAwLjUpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxufVxyXG5cclxuLmNoZWNrYm94LXdyYXBwZXItMyAjY2J4LTM6Y2hlY2tlZCArIC50b2dnbGU6YmVmb3JlIHtcclxuICAgIGJhY2tncm91bmQ6ICM5NDdhZGE7XHJcbn1cclxuLmNoZWNrYm94LXdyYXBwZXItMyAjY2J4LTM6Y2hlY2tlZCArIC50b2dnbGUgc3BhbiB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjNGYyZWRjO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuMnMgY3ViaWMtYmV6aWVyKDAuOCwgMC40LCAwLjMsIDEuMjUpLFxyXG4gICAgICAgIGJhY2tncm91bmQgMC4xNXMgZWFzZTtcclxuICAgIGJveC1zaGFkb3c6IDAgM3B4IDhweCByZ2JhKDc5LCA0NiwgMjIwLCAwLjIpO1xyXG59XHJcbi5jaGVja2JveC13cmFwcGVyLTMgI2NieC0zOmNoZWNrZWQgKyAudG9nZ2xlIHNwYW46YmVmb3JlIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { AppComponent };\nhandleDrawHandClick = () => {\n  this.drawingManager.setDrawingMode(null);\n};\nhandleDrawMarkerClick = () => {\n  function detectWater(_x, _x2) {\n    return _detectWater.apply(this, arguments);\n  }\n  function _detectWater() {\n    _detectWater = _asyncToGenerator(function* (lat, lng) {\n      try {\n        const url = `https://isitwater-com.p.rapidapi.com/?latitude=${lat}&longitude=${lng}`;\n        const options = {\n          method: 'GET',\n          headers: {\n            'X-RapidAPI-Key': '911f81d9e3msh5f705b8931d758cp13855bjsn19b3ba12960e',\n            'X-RapidAPI-Host': 'isitwater-com.p.rapidapi.com'\n          }\n        };\n        const response = yield fetch(url, options);\n        const result = yield response.json();\n        if (result.water) {\n          return true;\n        }\n        return false;\n      } catch (error) {\n        console.error(error);\n        return undefined;\n      }\n    });\n    return _detectWater.apply(this, arguments);\n  }\n  this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.MARKER);\n  google.maps.event.addListener(this.drawingManager, 'markercomplete', /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (marker) {\n      marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n      const lat = marker.getPosition()?.lat();\n      const lng = marker.getPosition()?.lng();\n      //Toggle check water functionality\n      if (isOpenDetectWater) {\n        const isWater = yield detectWater(lat, lng);\n        if (isWater) {\n          alert('You are placing marker on water');\n          return marker.setMap(null);\n        }\n      }\n      markers.push(marker);\n      if (circles.length > 0) {\n        circles.forEach(item => {\n          const circleCenter = item.getCenter();\n          const circleRadius = item.getRadius();\n          const markerPosition = marker.getPosition();\n          if (markerPosition && circleCenter) {\n            if (google.maps.geometry.spherical.computeDistanceBetween(circleCenter, markerPosition) <= circleRadius) {\n              marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n            } else {\n              marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n            }\n          }\n        });\n      }\n      if (rectangles.length > 0) {\n        const markerPosition = marker.getPosition();\n        rectangles.forEach(item => {\n          const rectangleBound = item.getBounds();\n          if (markerPosition && rectangleBound?.contains(markerPosition)) {\n            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n          } else {\n            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n          }\n        });\n      }\n      marker.addListener('rightclick', () => {\n        if (currentInfoWindow) {\n          currentInfoWindow.close();\n        }\n        const infowindow = new google.maps.InfoWindow({\n          content: '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' + '<div><input type=\"checkbox\" id=\"remove\">Remove</div>'\n        });\n        infowindow.open(map, marker);\n        currentInfoWindow = infowindow;\n        infowindow.addListener('domready', () => {\n          const editCheckbox = document.getElementById('edit');\n          const removeCheckbox = document.getElementById('remove');\n          if (marker.getDraggable()) {\n            editCheckbox?.setAttribute('checked', 'true');\n          } else {\n            editCheckbox?.removeAttribute('checked');\n          }\n          editCheckbox?.addEventListener('change', () => {\n            if (marker.getDraggable()) {\n              editCheckbox?.removeAttribute('checked');\n              marker.setDraggable(null);\n            } else {\n              editCheckbox.setAttribute('checked', 'true');\n              marker.setDraggable(true);\n            }\n          });\n          removeCheckbox?.addEventListener('change', () => {\n            marker.setMap(null);\n          });\n        });\n      });\n      marker.addListener('dragend', /*#__PURE__*/_asyncToGenerator(function* () {\n        const lat = marker.getPosition()?.lat();\n        const lng = marker.getPosition()?.lng();\n        const markerPosition = marker.getPosition();\n        if (isOpenDetectWater) {\n          const isWater = yield detectWater(lat, lng);\n          if (isWater) {\n            alert('You are placing marker on water');\n            return marker.setMap(null);\n          }\n        }\n        circles.forEach(item => {\n          const circleCenter = item.getCenter();\n          const circleRadius = item.getRadius();\n          if (markerPosition && circleCenter) {\n            if (google.maps.geometry.spherical.computeDistanceBetween(circleCenter, markerPosition) <= circleRadius) {\n              marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n            } else {\n              marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n            }\n          }\n        });\n        rectangles.forEach(item => {\n          const rectangleBound = item.getBounds();\n          if (markerPosition && rectangleBound?.contains(markerPosition)) {\n            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n          } else {\n            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n          }\n        });\n      }));\n    });\n    return function (_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n};\nhandleDrawCircleClick = () => {\n  this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.CIRCLE);\n  google.maps.event.addListener(this.drawingManager, 'circlecomplete', function (circle) {\n    circles.push(circle);\n    circle.addListener('bounds_changed', () => {\n      const circleCenter = circle.getCenter();\n      const circleRadius = circle.getRadius();\n      markers.forEach(item => {\n        const markerPosition = item.getPosition();\n        if (markerPosition && circleCenter) {\n          if (google.maps.geometry.spherical.computeDistanceBetween(circleCenter, markerPosition) <= circleRadius) {\n            item.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n          } else {\n            item.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n          }\n        }\n      });\n    });\n  });\n};\nhandleClearCircleClick = () => {\n  circles.forEach(circle => {\n    circle.setMap(null);\n  });\n  circles.length = 0;\n};\nhandleDrawShapeClick = () => {\n  this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYGON);\n  google.maps.event.addListener(this.drawingManager, 'polygoncomplete', function (polygon) {\n    polygon.addListener('rightclick', function (event) {\n      if (currentInfoWindow) {\n        currentInfoWindow.close();\n      }\n      const infowindow = new google.maps.InfoWindow({\n        content: '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' + '<div><input type=\"checkbox\" id=\"remove\">Remove</div>'\n      });\n      infowindow.setPosition(event.latLng);\n      infowindow.open(map);\n      currentInfoWindow = infowindow;\n      infowindow.addListener('domready', () => {\n        const editCheckbox = document.getElementById('edit');\n        const removeCheckbox = document.getElementById('remove');\n        if (polygon.getDraggable()) {\n          editCheckbox?.setAttribute('checked', 'true');\n        } else {\n          editCheckbox?.removeAttribute('checked');\n        }\n        editCheckbox?.addEventListener('change', () => {\n          if (polygon.getDraggable()) {\n            editCheckbox?.removeAttribute('checked');\n            polygon.setDraggable(null);\n          } else {\n            editCheckbox.setAttribute('checked', 'true');\n            polygon.setDraggable(true);\n          }\n        });\n        removeCheckbox?.addEventListener('change', () => {\n          polygon.setMap(null);\n          infowindow.close();\n        });\n      });\n    });\n  });\n};\nhandleDrawLineClick = () => {\n  this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYLINE);\n  google.maps.event.addListener(this.drawingManager, 'polylinecomplete', function (line) {\n    line.addListener('rightclick', function (event) {\n      if (currentInfoWindow) {\n        currentInfoWindow.close();\n      }\n      const infowindow = new google.maps.InfoWindow({\n        content: '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' + '<div><input type=\"checkbox\" id=\"remove\">Remove</div>'\n      });\n      infowindow.setPosition(event.latLng);\n      infowindow.open(map);\n      currentInfoWindow = infowindow;\n      infowindow.addListener('domready', () => {\n        const editCheckbox = document.getElementById('edit');\n        const removeCheckbox = document.getElementById('remove');\n        if (line.getDraggable()) {\n          editCheckbox?.setAttribute('checked', 'true');\n        } else {\n          editCheckbox?.removeAttribute('checked');\n        }\n        editCheckbox?.addEventListener('change', () => {\n          if (line.getDraggable()) {\n            editCheckbox?.removeAttribute('checked');\n            line.setDraggable(null);\n          } else {\n            editCheckbox.setAttribute('checked', 'true');\n            line.setDraggable(true);\n          }\n        });\n        removeCheckbox?.addEventListener('change', () => {\n          line.setMap(null);\n          infowindow.close();\n        });\n      });\n    });\n  });\n};\nhandleDrawRectangleClick = () => {\n  this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.RECTANGLE);\n  google.maps.event.addListener(this.drawingManager, 'rectanglecomplete', function (rectangle) {\n    rectangles.push(rectangle);\n    rectangle.addListener('rightclick', function (event) {\n      if (currentInfoWindow) {\n        currentInfoWindow.close();\n      }\n      const infowindow = new google.maps.InfoWindow({\n        content: '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' + '<div><input type=\"checkbox\" id=\"remove\">Remove</div>'\n      });\n      infowindow.setPosition(event.latLng);\n      infowindow.open(map);\n      currentInfoWindow = infowindow;\n      infowindow.addListener('domready', () => {\n        const editCheckbox = document.getElementById('edit');\n        const removeCheckbox = document.getElementById('remove');\n        if (rectangle.getDraggable()) {\n          editCheckbox?.setAttribute('checked', 'true');\n        } else {\n          editCheckbox?.removeAttribute('checked');\n        }\n        editCheckbox?.addEventListener('change', () => {\n          if (rectangle.getDraggable()) {\n            editCheckbox?.removeAttribute('checked');\n            rectangle.setDraggable(null);\n          } else {\n            editCheckbox.setAttribute('checked', 'true');\n            rectangle.setDraggable(true);\n          }\n        });\n        removeCheckbox?.addEventListener('change', () => {\n          rectangle.setMap(null);\n          infowindow.close();\n        });\n      });\n    });\n    rectangle.addListener('dragend', () => {\n      const rectangleBound = rectangle.getBounds();\n      markers.forEach(item => {\n        const itemPosition = item.getPosition();\n        if (itemPosition && rectangleBound?.contains(itemPosition)) {\n          item.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n        } else {\n          item.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n        }\n      });\n    });\n  });\n};\nhandleChangeGanivoIcon = () => {\n  ganivos.forEach(item => {\n    item.setIcon('https://img.icons8.com/external-others-pike-picture/50/external-building-church-christianity-others-pike-picture-3.png');\n  });\n};\nhandleChangeTilePineIcon = () => {\n  TilePines.forEach(item => {\n    item.setIcon('https://img.icons8.com/external-others-pike-picture/50/external-building-church-christianity-others-pike-picture-3.png');\n  });\n};\nhandleChangeTankIcon = () => {\n  tanks.forEach(item => {\n    item.setIcon('https://img.icons8.com/external-others-pike-picture/50/external-building-church-christianity-others-pike-picture-3.png');\n  });\n};","map":{"version":3,"names":["environment","Loader","map","VietNamCor","lat","lng","Ganivo","name","type","XCor","YCor","TilePipe","Tank","loader","apiKey","version","currentInfoWindow","isOpenDetectWater","circles","markers","rectangles","ganivos","tanks","TilePines","AppComponent","constructor","http","successMarkers","coordinate","Number","readFile","get","responseType","subscribe","data","result","split","item","index","push","marker","google","maps","Marker","position","title","error","console","log","handleWaterCheckBox","event","target","checked","ngOnInit","demo","load","then","_asyncToGenerator","Map","importLibrary","document","getElementById","center","zoom","forEach","icon","addListener","close","infowindow","InfoWindow","content","setPosition","latLng","open","firstIconCheckbox","removeCheckbox","addEventListener","rectangle","setMap","drawingManager","drawing","DrawingManager","drawingMode","drawingControl","circleOptions","fillColor","fillOpacity","strokeWeight","clickable","editable","zIndex","i0","ÉµÉµdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ÉµÉµelementStart","ÉµÉµlistener","AppComponent_Template_div_click_2_listener","handleDrawHandClick","ÉµÉµelement","ÉµÉµtext","ÉµÉµelementEnd","AppComponent_Template_div_click_11_listener","handleDrawMarkerClick","AppComponent_Template_div_click_15_listener","handleDrawCircleClick","AppComponent_Template_div_click_19_listener","handleDrawShapeClick","AppComponent_Template_div_click_23_listener","handleDrawLineClick","AppComponent_Template_div_click_27_listener","handleDrawRectangleClick","AppComponent_Template_div_click_36_listener","handleChangeGanivoIcon","AppComponent_Template_div_click_40_listener","handleChangeTilePineIcon","AppComponent_Template_div_click_44_listener","handleChangeTankIcon","AppComponent_Template_input_change_55_listener","$event","setDrawingMode","detectWater","_x","_x2","_detectWater","apply","arguments","url","options","method","headers","response","fetch","json","water","undefined","OverlayType","MARKER","_ref2","setIcon","getPosition","isWater","alert","length","circleCenter","getCenter","circleRadius","getRadius","markerPosition","geometry","spherical","computeDistanceBetween","rectangleBound","getBounds","contains","editCheckbox","getDraggable","setAttribute","removeAttribute","setDraggable","_x3","CIRCLE","circle","handleClearCircleClick","POLYGON","polygon","POLYLINE","line","RECTANGLE","itemPosition"],"sources":["D:\\Workspace\\FPT\\AngularDemo\\src\\app\\app.component.ts","D:\\Workspace\\FPT\\AngularDemo\\src\\app\\app.component.html"],"sourcesContent":["import { environment } from 'src/environments/environment.development';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Loader } from '@googlemaps/js-api-loader';\r\nimport * as _ from 'lodash';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nlet map: google.maps.Map;\r\nconst VietNamCor = { lat: 15.9031, lng: 105.8067 };\r\n\r\nconst Ganivo = [\r\n    {\r\n        name: 'HCMU00020.001/G',\r\n        type: 'G',\r\n        XCor: 10.789538365455055,\r\n        YCor: 106.63355331689347,\r\n    },\r\n    {\r\n        name: 'HCMU00020.002/G',\r\n        type: 'G',\r\n        XCor: 10.790382019066472,\r\n        YCor: 106.63369793039553,\r\n    },\r\n];\r\n\r\nconst TilePipe = [\r\n    {\r\n        name: 'HCMU00001.001/O',\r\n        type: 'O',\r\n        XCor: 10.835144728045616,\r\n        YCor: 106.66329563558202,\r\n    },\r\n    {\r\n        name: 'HCMU00001.002/O',\r\n        type: 'O',\r\n        XCor: 10.835263001921522,\r\n        YCor: 106.66372920705183,\r\n    },\r\n];\r\n\r\nconst Tank = [\r\n    {\r\n        name: 'HCMU00001.002/B',\r\n        type: 'B',\r\n        XCor: 10.835000478970937,\r\n        YCor: 106.66365127116387,\r\n    },\r\n    {\r\n        name: 'HCMU00001.003/B',\r\n        type: 'B',\r\n        XCor: 10.835297724069841,\r\n        YCor: 106.66463990032798,\r\n    },\r\n];\r\n\r\nlet loader = new Loader({\r\n    apiKey: environment.apiKey,\r\n    version: 'weekly',\r\n});\r\n\r\nlet currentInfoWindow: any = null;\r\nlet isOpenDetectWater: Boolean = false;\r\nconst circles: Array<any> = [];\r\nconst markers: Array<any> = [];\r\nconst rectangles: Array<any> = [];\r\nconst ganivos: Array<any> = [];\r\nconst tanks: Array<any> = [];\r\nconst TilePines: Array<any> = [];\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    result: any;\r\n    successMarkers: Array<Object> = [];\r\n    coordinate: Array<Object> = [\r\n        {\r\n            lat: Number,\r\n            lng: Number,\r\n        },\r\n    ];\r\n    drawingManager: any;\r\n\r\n    ngOnInit(): void {\r\n        this.demo();\r\n    }\r\n\r\n    readFile = () => {\r\n        this.http.get('assets/Book1.csv', { responseType: 'text' }).subscribe(\r\n            (data: any) => {\r\n                this.result = data.split('\\n');\r\n\r\n                this.result.map((item: any, index: number) => {\r\n                    this.coordinate.push({\r\n                        lat: item.split(',')[0],\r\n                        lng: item.split(',')[1],\r\n                    });\r\n\r\n                    const marker = new google.maps.Marker({\r\n                        position: {\r\n                            lat: Number(item.split(',')[0]),\r\n                            lng: Number(item.split(',')[1]),\r\n                        },\r\n                        map,\r\n                        title: `Item index ${index}`,\r\n                    });\r\n\r\n                    return marker;\r\n                });\r\n            },\r\n            (error: any) => console.log(error.error)\r\n        );\r\n    };\r\n\r\n    handleWaterCheckBox = (event: any) => {\r\n        if (event.target.checked) {\r\n            isOpenDetectWater = true;\r\n        } else {\r\n            isOpenDetectWater = false;\r\n        }\r\n    };\r\n\r\n    demo() {\r\n        loader.load().then(async () => {\r\n            //* initial map element\r\n            const { Map } = (await google.maps.importLibrary(\r\n                'maps'\r\n            )) as google.maps.MapsLibrary;\r\n            map = new Map(document.getElementById('map') as HTMLElement, {\r\n                center: VietNamCor,\r\n                zoom: 8,\r\n            });\r\n\r\n            Ganivo.forEach((item, index) => {\r\n                const marker = new google.maps.Marker({\r\n                    position: { lat: item.XCor, lng: item.YCor },\r\n                    icon: 'https://img.icons8.com/ios-filled/50/marker-g.png',\r\n                    map,\r\n                    title: `Item at index ${index}`,\r\n                });\r\n\r\n                marker.addListener('rightclick', (event: any) => {\r\n                    if (currentInfoWindow) {\r\n                        currentInfoWindow.close();\r\n                    }\r\n                    const infowindow = new google.maps.InfoWindow({\r\n                        content:\r\n                            '<div><input type=\"checkbox\" id=\"ICON1\">ðŸ¤ž</div>' +\r\n                            '<div><input type=\"checkbox\" id=\"ICON2\">ðŸ‘Œ</div>',\r\n                    });\r\n\r\n                    infowindow.setPosition(event.latLng);\r\n                    infowindow.open(map);\r\n                    currentInfoWindow = infowindow;\r\n\r\n                    infowindow.addListener('domready', () => {\r\n                        const firstIconCheckbox = document.getElementById('ICON1');\r\n                        const removeCheckbox =\r\n                            document.getElementById('remove');\r\n\r\n                            firstIconCheckbox?.addEventListener('change', () => {}\r\n                            \r\n                        });\r\n\r\n                        removeCheckbox?.addEventListener('change', () => {\r\n                            rectangle.setMap(null);\r\n                            infowindow.close();\r\n                        });\r\n                    });\r\n                });\r\n\r\n                ganivos.push(marker);\r\n            });\r\n\r\n            TilePipe.forEach((item, index) => {\r\n                const marker = new google.maps.Marker({\r\n                    position: { lat: item.XCor, lng: item.YCor },\r\n                    icon: 'https://img.icons8.com/ios-filled/50/marker-t.png',\r\n                    map,\r\n                    title: `Item at index ${index}`,\r\n                });\r\n\r\n                TilePines.push(marker);\r\n            });\r\n\r\n            Tank.forEach((item, index) => {\r\n                const marker = new google.maps.Marker({\r\n                    position: { lat: item.XCor, lng: item.YCor },\r\n                    icon: 'https://img.icons8.com/ios/50/box--v1.png',\r\n                    map,\r\n                    title: `Item at index ${index}`,\r\n                });\r\n\r\n                tanks.push(marker);\r\n            });\r\n\r\n            this.drawingManager = new google.maps.drawing.DrawingManager({\r\n                drawingMode: null,\r\n                drawingControl: false,\r\n                circleOptions: {\r\n                    fillColor: '#ffff00',\r\n                    fillOpacity: 1,\r\n                    strokeWeight: 5,\r\n                    clickable: false,\r\n                    editable: true,\r\n                    zIndex: 1,\r\n                },\r\n            });\r\n            this.drawingManager.setMap(map);\r\n        });\r\n    }\r\n\r\n    handleDrawHandClick = () => {\r\n        this.drawingManager.setDrawingMode(null);\r\n    };\r\n\r\n    handleDrawMarkerClick = () => {\r\n        async function detectWater(lat?: number, lng?: number) {\r\n            try {\r\n                const url = `https://isitwater-com.p.rapidapi.com/?latitude=${lat}&longitude=${lng}`;\r\n                const options = {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'X-RapidAPI-Key':\r\n                            '911f81d9e3msh5f705b8931d758cp13855bjsn19b3ba12960e',\r\n                        'X-RapidAPI-Host': 'isitwater-com.p.rapidapi.com',\r\n                    },\r\n                };\r\n                const response = await fetch(url, options);\r\n                const result = await response.json();\r\n                if (result.water) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            } catch (error) {\r\n                console.error(error);\r\n                return undefined;\r\n            }\r\n        }\r\n\r\n        this.drawingManager.setDrawingMode(\r\n            google.maps.drawing.OverlayType.MARKER\r\n        );\r\n\r\n        google.maps.event.addListener(\r\n            this.drawingManager,\r\n            'markercomplete',\r\n            async function (marker: any) {\r\n                marker.setIcon(\r\n                    'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\r\n                );\r\n\r\n                const lat = marker.getPosition()?.lat();\r\n                const lng = marker.getPosition()?.lng();\r\n\r\n                //Toggle check water functionality\r\n                if (isOpenDetectWater) {\r\n                    const isWater = await detectWater(lat, lng);\r\n\r\n                    if (isWater) {\r\n                        alert('You are placing marker on water');\r\n                        return marker.setMap(null);\r\n                    }\r\n                }\r\n\r\n                markers.push(marker);\r\n\r\n                if (circles.length > 0) {\r\n                    circles.forEach((item) => {\r\n                        const circleCenter = item.getCenter();\r\n                        const circleRadius = item.getRadius();\r\n                        const markerPosition = marker.getPosition();\r\n\r\n                        if (markerPosition && circleCenter) {\r\n                            if (\r\n                                google.maps.geometry.spherical.computeDistanceBetween(\r\n                                    circleCenter,\r\n                                    markerPosition\r\n                                ) <= circleRadius\r\n                            ) {\r\n                                marker.setIcon(\r\n                                    'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\r\n                                );\r\n                            } else {\r\n                                marker.setIcon(\r\n                                    'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                if (rectangles.length > 0) {\r\n                    const markerPosition = marker.getPosition();\r\n                    rectangles.forEach((item) => {\r\n                        const rectangleBound = item.getBounds();\r\n                        if (\r\n                            markerPosition &&\r\n                            rectangleBound?.contains(markerPosition)\r\n                        ) {\r\n                            marker.setIcon(\r\n                                'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\r\n                            );\r\n                        } else {\r\n                            marker.setIcon(\r\n                                'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\r\n                            );\r\n                        }\r\n                    });\r\n                }\r\n\r\n                marker.addListener('rightclick', () => {\r\n                    if (currentInfoWindow) {\r\n                        currentInfoWindow.close();\r\n                    }\r\n                    const infowindow = new google.maps.InfoWindow({\r\n                        content:\r\n                            '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' +\r\n                            '<div><input type=\"checkbox\" id=\"remove\">Remove</div>',\r\n                    });\r\n\r\n                    infowindow.open(map, marker);\r\n                    currentInfoWindow = infowindow;\r\n\r\n                    infowindow.addListener('domready', () => {\r\n                        const editCheckbox = document.getElementById('edit');\r\n                        const removeCheckbox =\r\n                            document.getElementById('remove');\r\n\r\n                        if (marker.getDraggable()) {\r\n                            editCheckbox?.setAttribute('checked', 'true');\r\n                        } else {\r\n                            editCheckbox?.removeAttribute('checked');\r\n                        }\r\n\r\n                        editCheckbox?.addEventListener('change', () => {\r\n                            if (marker.getDraggable()) {\r\n                                editCheckbox?.removeAttribute('checked');\r\n                                marker.setDraggable(null);\r\n                            } else {\r\n                                editCheckbox.setAttribute('checked', 'true');\r\n                                marker.setDraggable(true);\r\n                            }\r\n                        });\r\n\r\n                        removeCheckbox?.addEventListener('change', () => {\r\n                            marker.setMap(null);\r\n                        });\r\n                    });\r\n                });\r\n\r\n                marker.addListener('dragend', async () => {\r\n                    const lat = marker.getPosition()?.lat();\r\n                    const lng = marker.getPosition()?.lng();\r\n                    const markerPosition = marker.getPosition();\r\n\r\n                    if (isOpenDetectWater) {\r\n                        const isWater = await detectWater(lat, lng);\r\n                        if (isWater) {\r\n                            alert('You are placing marker on water');\r\n                            return marker.setMap(null);\r\n                        }\r\n                    }\r\n\r\n                    circles.forEach((item) => {\r\n                        const circleCenter = item.getCenter();\r\n                        const circleRadius = item.getRadius();\r\n\r\n                        if (markerPosition && circleCenter) {\r\n                            if (\r\n                                google.maps.geometry.spherical.computeDistanceBetween(\r\n                                    circleCenter,\r\n                                    markerPosition\r\n                                ) <= circleRadius\r\n                            ) {\r\n                                marker.setIcon(\r\n                                    'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\r\n                                );\r\n                            } else {\r\n                                marker.setIcon(\r\n                                    'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    rectangles.forEach((item) => {\r\n                        const rectangleBound = item.getBounds();\r\n                        if (\r\n                            markerPosition &&\r\n                            rectangleBound?.contains(markerPosition)\r\n                        ) {\r\n                            marker.setIcon(\r\n                                'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\r\n                            );\r\n                        } else {\r\n                            marker.setIcon(\r\n                                'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\r\n                            );\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleDrawCircleClick = () => {\r\n        this.drawingManager.setDrawingMode(\r\n            google.maps.drawing.OverlayType.CIRCLE\r\n        );\r\n\r\n        google.maps.event.addListener(\r\n            this.drawingManager,\r\n            'circlecomplete',\r\n            function (circle: any) {\r\n                circles.push(circle);\r\n\r\n                circle.addListener('bounds_changed', () => {\r\n                    const circleCenter = circle.getCenter();\r\n                    const circleRadius = circle.getRadius();\r\n\r\n                    markers.forEach((item) => {\r\n                        const markerPosition = item.getPosition();\r\n\r\n                        if (markerPosition && circleCenter) {\r\n                            if (\r\n                                google.maps.geometry.spherical.computeDistanceBetween(\r\n                                    circleCenter,\r\n                                    markerPosition\r\n                                ) <= circleRadius\r\n                            ) {\r\n                                item.setIcon(\r\n                                    'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\r\n                                );\r\n                            } else {\r\n                                item.setIcon(\r\n                                    'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleClearCircleClick = () => {\r\n        circles.forEach((circle) => {\r\n            circle.setMap(null);\r\n        });\r\n\r\n        circles.length = 0;\r\n    };\r\n\r\n    handleDrawShapeClick = () => {\r\n        this.drawingManager.setDrawingMode(\r\n            google.maps.drawing.OverlayType.POLYGON\r\n        );\r\n\r\n        google.maps.event.addListener(\r\n            this.drawingManager,\r\n            'polygoncomplete',\r\n            function (polygon: any) {\r\n                polygon.addListener('rightclick', function (event: any) {\r\n                    if (currentInfoWindow) {\r\n                        currentInfoWindow.close();\r\n                    }\r\n                    const infowindow = new google.maps.InfoWindow({\r\n                        content:\r\n                            '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' +\r\n                            '<div><input type=\"checkbox\" id=\"remove\">Remove</div>',\r\n                    });\r\n\r\n                    infowindow.setPosition(event.latLng);\r\n                    infowindow.open(map);\r\n                    currentInfoWindow = infowindow;\r\n\r\n                    infowindow.addListener('domready', () => {\r\n                        const editCheckbox = document.getElementById('edit');\r\n                        const removeCheckbox =\r\n                            document.getElementById('remove');\r\n\r\n                        if (polygon.getDraggable()) {\r\n                            editCheckbox?.setAttribute('checked', 'true');\r\n                        } else {\r\n                            editCheckbox?.removeAttribute('checked');\r\n                        }\r\n\r\n                        editCheckbox?.addEventListener('change', () => {\r\n                            if (polygon.getDraggable()) {\r\n                                editCheckbox?.removeAttribute('checked');\r\n                                polygon.setDraggable(null);\r\n                            } else {\r\n                                editCheckbox.setAttribute('checked', 'true');\r\n                                polygon.setDraggable(true);\r\n                            }\r\n                        });\r\n\r\n                        removeCheckbox?.addEventListener('change', () => {\r\n                            polygon.setMap(null);\r\n                            infowindow.close();\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n        );\r\n    };\r\n    handleDrawLineClick = () => {\r\n        this.drawingManager.setDrawingMode(\r\n            google.maps.drawing.OverlayType.POLYLINE\r\n        );\r\n\r\n        google.maps.event.addListener(\r\n            this.drawingManager,\r\n            'polylinecomplete',\r\n            function (line: any) {\r\n                line.addListener('rightclick', function (event: any) {\r\n                    if (currentInfoWindow) {\r\n                        currentInfoWindow.close();\r\n                    }\r\n                    const infowindow = new google.maps.InfoWindow({\r\n                        content:\r\n                            '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' +\r\n                            '<div><input type=\"checkbox\" id=\"remove\">Remove</div>',\r\n                    });\r\n\r\n                    infowindow.setPosition(event.latLng);\r\n                    infowindow.open(map);\r\n                    currentInfoWindow = infowindow;\r\n\r\n                    infowindow.addListener('domready', () => {\r\n                        const editCheckbox = document.getElementById('edit');\r\n                        const removeCheckbox =\r\n                            document.getElementById('remove');\r\n\r\n                        if (line.getDraggable()) {\r\n                            editCheckbox?.setAttribute('checked', 'true');\r\n                        } else {\r\n                            editCheckbox?.removeAttribute('checked');\r\n                        }\r\n\r\n                        editCheckbox?.addEventListener('change', () => {\r\n                            if (line.getDraggable()) {\r\n                                editCheckbox?.removeAttribute('checked');\r\n                                line.setDraggable(null);\r\n                            } else {\r\n                                editCheckbox.setAttribute('checked', 'true');\r\n                                line.setDraggable(true);\r\n                            }\r\n                        });\r\n\r\n                        removeCheckbox?.addEventListener('change', () => {\r\n                            line.setMap(null);\r\n                            infowindow.close();\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleDrawRectangleClick = () => {\r\n        this.drawingManager.setDrawingMode(\r\n            google.maps.drawing.OverlayType.RECTANGLE\r\n        );\r\n\r\n        google.maps.event.addListener(\r\n            this.drawingManager,\r\n            'rectanglecomplete',\r\n            function (rectangle: any) {\r\n                rectangles.push(rectangle);\r\n\r\n                rectangle.addListener('rightclick', function (event: any) {\r\n                    if (currentInfoWindow) {\r\n                        currentInfoWindow.close();\r\n                    }\r\n                    const infowindow = new google.maps.InfoWindow({\r\n                        content:\r\n                            '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' +\r\n                            '<div><input type=\"checkbox\" id=\"remove\">Remove</div>',\r\n                    });\r\n\r\n                    infowindow.setPosition(event.latLng);\r\n                    infowindow.open(map);\r\n                    currentInfoWindow = infowindow;\r\n\r\n                    infowindow.addListener('domready', () => {\r\n                        const editCheckbox = document.getElementById('edit');\r\n                        const removeCheckbox =\r\n                            document.getElementById('remove');\r\n\r\n                        if (rectangle.getDraggable()) {\r\n                            editCheckbox?.setAttribute('checked', 'true');\r\n                        } else {\r\n                            editCheckbox?.removeAttribute('checked');\r\n                        }\r\n\r\n                        editCheckbox?.addEventListener('change', () => {\r\n                            if (rectangle.getDraggable()) {\r\n                                editCheckbox?.removeAttribute('checked');\r\n                                rectangle.setDraggable(null);\r\n                            } else {\r\n                                editCheckbox.setAttribute('checked', 'true');\r\n                                rectangle.setDraggable(true);\r\n                            }\r\n                        });\r\n\r\n                        removeCheckbox?.addEventListener('change', () => {\r\n                            rectangle.setMap(null);\r\n                            infowindow.close();\r\n                        });\r\n                    });\r\n                });\r\n\r\n                rectangle.addListener('dragend', () => {\r\n                    const rectangleBound = rectangle.getBounds();\r\n                    markers.forEach((item) => {\r\n                        const itemPosition = item.getPosition();\r\n                        if (\r\n                            itemPosition &&\r\n                            rectangleBound?.contains(itemPosition)\r\n                        ) {\r\n                            item.setIcon(\r\n                                'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\r\n                            );\r\n                        } else {\r\n                            item.setIcon(\r\n                                'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\r\n                            );\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleChangeGanivoIcon = () => {\r\n        ganivos.forEach((item) => {\r\n            item.setIcon(\r\n                'https://img.icons8.com/external-others-pike-picture/50/external-building-church-christianity-others-pike-picture-3.png'\r\n            );\r\n        });\r\n    };\r\n\r\n    handleChangeTilePineIcon = () => {\r\n        TilePines.forEach((item) => {\r\n            item.setIcon(\r\n                'https://img.icons8.com/external-others-pike-picture/50/external-building-church-christianity-others-pike-picture-3.png'\r\n            );\r\n        });\r\n    };\r\n\r\n    handleChangeTankIcon = () => {\r\n        tanks.forEach((item) => {\r\n            item.setIcon(\r\n                'https://img.icons8.com/external-others-pike-picture/50/external-building-church-christianity-others-pike-picture-3.png'\r\n            );\r\n        });\r\n    };\r\n}\r\n","<div class=\"ms-4 d-flex gap-3\">\r\n    <div class=\"d-flex flex-column gap-3\">\r\n        <div\r\n            class=\"menu-item d-flex align-items-center gap-2 ms-2\"\r\n            (click)=\"handleDrawHandClick()\"\r\n        >\r\n            <span class=\"oval-yellow\"></span>\r\n            <span>Hand</span>\r\n        </div>\r\n        <!--* Shapes Menu  -->\r\n        <div class=\"dropdown d-flex align-items-center\">\r\n            <img\r\n                width=\"20\"\r\n                height=\"20\"\r\n                src=\"https://img.icons8.com/external-flat-andi-nur-abdillah/20/external-Option-survey-(flat)-flat-andi-nur-abdillah.png\"\r\n                alt=\"shapes icon\"\r\n            />\r\n            <a\r\n                class=\"dropdown-toggle text-decoration-none ms-2\"\r\n                data-bs-toggle=\"dropdown\"\r\n                data-bs-auto-close=\"outside\"\r\n                aria-expanded=\"false\"\r\n                role=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n            >\r\n                Shapes\r\n            </a>\r\n\r\n            <ul class=\"dropdown-menu\">\r\n                <div\r\n                    class=\"menu-item d-flex align-items-center gap-2 ms-2\"\r\n                    (click)=\"handleDrawMarkerClick()\"\r\n                >\r\n                    <span class=\"oval\"></span>\r\n                    <span>Markers</span>\r\n                </div>\r\n                <div\r\n                    class=\"menu-item d-flex align-items-center gap-2 ms-2\"\r\n                    (click)=\"handleDrawCircleClick()\"\r\n                >\r\n                    <span class=\"oval-yellow\"></span>\r\n                    <span>Circles</span>\r\n                </div>\r\n                <div\r\n                    class=\"menu-item d-flex align-items-center gap-2 ms-2\"\r\n                    (click)=\"handleDrawShapeClick()\"\r\n                >\r\n                    <span class=\"oval-lime\"></span>\r\n                    <span>Polygon</span>\r\n                </div>\r\n                <div\r\n                    class=\"menu-item d-flex align-items-center gap-2 ms-2\"\r\n                    (click)=\"handleDrawLineClick()\"\r\n                >\r\n                    <span class=\"oval-teal\"></span>\r\n                    <span>Polyline</span>\r\n                </div>\r\n                <div\r\n                    class=\"menu-item d-flex align-items-center gap-2 ms-2\"\r\n                    (click)=\"handleDrawRectangleClick()\"\r\n                >\r\n                    <span class=\"oval-purple\"></span>\r\n                    <span>Rectangle</span>\r\n                </div>\r\n            </ul>\r\n        </div>\r\n\r\n        <div class=\"dropdown d-flex align-items-center\">\r\n            <img\r\n                width=\"20\"\r\n                height=\"20\"\r\n                src=\"https://img.icons8.com/external-flat-andi-nur-abdillah/20/external-Option-survey-(flat)-flat-andi-nur-abdillah.png\"\r\n                alt=\"shapes icon\"\r\n            />\r\n            <a\r\n                class=\"dropdown-toggle text-decoration-none ms-2\"\r\n                data-bs-toggle=\"dropdown\"\r\n                data-bs-auto-close=\"outside\"\r\n                aria-expanded=\"false\"\r\n                role=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n            >\r\n                Icon\r\n            </a>\r\n\r\n            <ul class=\"dropdown-menu\">\r\n                <div\r\n                    class=\"menu-item d-flex align-items-center gap-2 ms-2\"\r\n                    (click)=\"handleChangeGanivoIcon()\"\r\n                >\r\n                    <span class=\"oval\"></span>\r\n                    <span>Ganivo Icons</span>\r\n                </div>\r\n                <div\r\n                    class=\"menu-item d-flex align-items-center gap-2 ms-2\"\r\n                    (click)=\"handleChangeTilePineIcon()\"\r\n                >\r\n                    <span class=\"oval\"></span>\r\n                    <span>TilePine Icons</span>\r\n                </div>\r\n                <div\r\n                    class=\"menu-item d-flex align-items-center gap-2 ms-2\"\r\n                    (click)=\"handleChangeTankIcon()\"\r\n                >\r\n                    <span class=\"oval\"></span>\r\n                    <span>Tank Icons</span>\r\n                </div>\r\n            </ul>\r\n        </div>\r\n\r\n        <!--* Option Menu  -->\r\n        <div class=\"dropdown d-flex align-items-center\">\r\n            <img\r\n                width=\"20\"\r\n                height=\"20\"\r\n                src=\"https://img.icons8.com/external-kmg-design-outline-color-kmg-design/20/external-option-ui-essential-kmg-design-outline-color-kmg-design.png\"\r\n                alt=\"options icon\"\r\n            />\r\n            <a\r\n                class=\"dropdown-toggle text-decoration-none ms-2\"\r\n                data-bs-toggle=\"dropdown\"\r\n                data-bs-auto-close=\"outside\"\r\n                aria-expanded=\"false\"\r\n                role=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n            >\r\n                Options\r\n            </a>\r\n\r\n            <ul class=\"dropdown-menu\">\r\n                <div class=\"d-flex align-items-center gap-2 ms-2\">\r\n                    <div class=\"checkbox-wrapper-3\">\r\n                        <input\r\n                            (change)=\"handleWaterCheckBox($event)\"\r\n                            type=\"checkbox\"\r\n                            id=\"cbx-3\"\r\n                            class=\"waterCheckbox\"\r\n                        />\r\n                        <label for=\"cbx-3\" class=\"toggle\"><span></span></label>\r\n                    </div>\r\n                    <span>Detect Water</span>\r\n                </div>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div id=\"map\"></div>\r\n</div>\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,0CAA0C;AAEtE,SAASC,MAAM,QAAQ,2BAA2B;;;AAIlD,IAAIC,GAAoB;AACxB,MAAMC,UAAU,GAAG;EAAEC,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE;AAElD,MAAMC,MAAM,GAAG,CACX;EACIC,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE;CACT,EACD;EACIH,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE;CACT,CACJ;AAED,MAAMC,QAAQ,GAAG,CACb;EACIJ,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE;CACT,EACD;EACIH,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE;CACT,CACJ;AAED,MAAME,IAAI,GAAG,CACT;EACIL,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE;CACT,EACD;EACIH,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE;CACT,CACJ;AAED,IAAIG,MAAM,GAAG,IAAIZ,MAAM,CAAC;EACpBa,MAAM,EAAEd,WAAW,CAACc,MAAM;EAC1BC,OAAO,EAAE;CACZ,CAAC;AAEF,IAAIC,iBAAiB,GAAQ,IAAI;AACjC,IAAIC,iBAAiB,GAAY,KAAK;AACtC,MAAMC,OAAO,GAAe,EAAE;AAC9B,MAAMC,OAAO,GAAe,EAAE;AAC9B,MAAMC,UAAU,GAAe,EAAE;AACjC,MAAMC,OAAO,GAAe,EAAE;AAC9B,MAAMC,KAAK,GAAe,EAAE;AAC5B,MAAMC,SAAS,GAAe,EAAE;AAChC,MAKaC,YAAY;EACrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAGxB,KAAAC,cAAc,GAAkB,EAAE;IAClC,KAAAC,UAAU,GAAkB,CACxB;MACIxB,GAAG,EAAEyB,MAAM;MACXxB,GAAG,EAAEwB;KACR,CACJ;IAOD,KAAAC,QAAQ,GAAG,MAAK;MACZ,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,kBAAkB,EAAE;QAAEC,YAAY,EAAE;MAAM,CAAE,CAAC,CAACC,SAAS,CAChEC,IAAS,IAAI;QACV,IAAI,CAACC,MAAM,GAAGD,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC;QAE9B,IAAI,CAACD,MAAM,CAACjC,GAAG,CAAC,CAACmC,IAAS,EAAEC,KAAa,KAAI;UACzC,IAAI,CAACV,UAAU,CAACW,IAAI,CAAC;YACjBnC,GAAG,EAAEiC,IAAI,CAACD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACvB/B,GAAG,EAAEgC,IAAI,CAACD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;WACzB,CAAC;UAEF,MAAMI,MAAM,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACC,MAAM,CAAC;YAClCC,QAAQ,EAAE;cACNxC,GAAG,EAAEyB,MAAM,CAACQ,IAAI,CAACD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;cAC/B/B,GAAG,EAAEwB,MAAM,CAACQ,IAAI,CAACD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aACjC;YACDlC,GAAG;YACH2C,KAAK,EAAE,cAAcP,KAAK;WAC7B,CAAC;UAEF,OAAOE,MAAM;QACjB,CAAC,CAAC;MACN,CAAC,EACAM,KAAU,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACA,KAAK,CAAC,CAC3C;IACL,CAAC;IAED,KAAAG,mBAAmB,GAAIC,KAAU,IAAI;MACjC,IAAIA,KAAK,CAACC,MAAM,CAACC,OAAO,EAAE;QACtBnC,iBAAiB,GAAG,IAAI;OAC3B,MAAM;QACHA,iBAAiB,GAAG,KAAK;;IAEjC,CAAC;EAjDsC;EAYvCoC,QAAQA,CAAA;IACJ,IAAI,CAACC,IAAI,EAAE;EACf;EAqCAA,IAAIA,CAAA;IACAzC,MAAM,CAAC0C,IAAI,EAAE,CAACC,IAAI,eAAAC,iBAAA,CAAC,aAAW;MAC1B;MACA,MAAM;QAAEC;MAAG,CAAE,SAAUjB,MAAM,CAACC,IAAI,CAACiB,aAAa,CAC5C,MAAM,CACmB;MAC7BzD,GAAG,GAAG,IAAIwD,GAAG,CAACE,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAgB,EAAE;QACzDC,MAAM,EAAE3D,UAAU;QAClB4D,IAAI,EAAE;OACT,CAAC;MAEFzD,MAAM,CAAC0D,OAAO,CAAC,CAAC3B,IAAI,EAAEC,KAAK,KAAI;QAC3B,MAAME,MAAM,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACC,MAAM,CAAC;UAClCC,QAAQ,EAAE;YAAExC,GAAG,EAAEiC,IAAI,CAAC5B,IAAI;YAAEJ,GAAG,EAAEgC,IAAI,CAAC3B;UAAI,CAAE;UAC5CuD,IAAI,EAAE,mDAAmD;UACzD/D,GAAG;UACH2C,KAAK,EAAE,iBAAiBP,KAAK;SAChC,CAAC;QAEFE,MAAM,CAAC0B,WAAW,CAAC,YAAY,EAAGhB,KAAU,IAAI;UAC5C,IAAIlC,iBAAiB,EAAE;YACnBA,iBAAiB,CAACmD,KAAK,EAAE;;UAE7B,MAAMC,UAAU,GAAG,IAAI3B,MAAM,CAACC,IAAI,CAAC2B,UAAU,CAAC;YAC1CC,OAAO,EACH,iDAAiD,GACjD;WACP,CAAC;UAEFF,UAAU,CAACG,WAAW,CAACrB,KAAK,CAACsB,MAAM,CAAC;UACpCJ,UAAU,CAACK,IAAI,CAACvE,GAAG,CAAC;UACpBc,iBAAiB,GAAGoD,UAAU;UAE9BA,UAAU,CAACF,WAAW,CAAC,UAAU,EAAE,MAAK;YACpC,MAAMQ,iBAAiB,GAAGd,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;YAC1D,MAAMc,cAAc,GAChBf,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;YAEjCa,iBAAiB,EAAEE,gBAAgB,CAAC,QAAQ,EAAE,MAAK,CAAE,CAAC;UAE1D,CAAC,CAAC;UAEFD,cAAc,EAAEC,gBAAgB,CAAC,QAAQ,EAAE,MAAK;YAC5CC,SAAS,CAACC,MAAM,CAAC,IAAI,CAAC;YACtBV,UAAU,CAACD,KAAK,EAAE;UACtB,CAAC,CAAC;QACN,CAAC,CAAC;MACN,CAAC,CAAC;MAEF9C,OAAO,CAACkB,IAAI,CAACC,MAAM,CAAC;IACxB,CAAC,EAAC;IAEF7B,QAAQ,CAACqD,OAAO,CAAC,CAAC3B,IAAI,EAAEC,KAAK,KAAI;MAC7B,MAAME,MAAM,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACC,MAAM,CAAC;QAClCC,QAAQ,EAAE;UAAExC,GAAG,EAAEiC,IAAI,CAAC5B,IAAI;UAAEJ,GAAG,EAAEgC,IAAI,CAAC3B;QAAI,CAAE;QAC5CuD,IAAI,EAAE,mDAAmD;QACzD/D,GAAG;QACH2C,KAAK,EAAE,iBAAiBP,KAAK;OAChC,CAAC;MAEFf,SAAS,CAACgB,IAAI,CAACC,MAAM,CAAC;IAC1B,CAAC,CAAC;IAEF5B,IAAI,CAACoD,OAAO,CAAC,CAAC3B,IAAI,EAAEC,KAAK,KAAI;MACzB,MAAME,MAAM,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACC,MAAM,CAAC;QAClCC,QAAQ,EAAE;UAAExC,GAAG,EAAEiC,IAAI,CAAC5B,IAAI;UAAEJ,GAAG,EAAEgC,IAAI,CAAC3B;QAAI,CAAE;QAC5CuD,IAAI,EAAE,2CAA2C;QACjD/D,GAAG;QACH2C,KAAK,EAAE,iBAAiBP,KAAK;OAChC,CAAC;MAEFhB,KAAK,CAACiB,IAAI,CAACC,MAAM,CAAC;IACtB,CAAC,CAAC;IAEF,IAAI,CAACuC,cAAc,GAAG,IAAItC,MAAM,CAACC,IAAI,CAACsC,OAAO,CAACC,cAAc,CAAC;MACzDC,WAAW,EAAE,IAAI;MACjBC,cAAc,EAAE,KAAK;MACrBC,aAAa,EAAE;QACXC,SAAS,EAAE,SAAS;QACpBC,WAAW,EAAE,CAAC;QACdC,YAAY,EAAE,CAAC;QACfC,SAAS,EAAE,KAAK;QAChBC,QAAQ,EAAE,IAAI;QACdC,MAAM,EAAE;;KAEf,CAAC;IACF,IAAI,CAACX,cAAc,CAACD,MAAM,CAAC5E,GAAG,CAAC;EACnC;;AA3IKsB,YAAY,C;mBAAZA,YAAY,EAAAmE,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZtE,YAAY,C;QAAZA,YAAY;EAAAuE,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCxEzBV,EAAA,CAAAY,cAAA,aAA+B;MAInBZ,EAAA,CAAAa,UAAA,mBAAAC,2CAAA;QAAA,OAASH,GAAA,CAAAI,mBAAA,EAAqB;MAAA,EAAC;MAE/Bf,EAAA,CAAAgB,SAAA,cAAiC;MACjChB,EAAA,CAAAY,cAAA,WAAM;MAAAZ,EAAA,CAAAiB,MAAA,WAAI;MAAAjB,EAAA,CAAAkB,YAAA,EAAO;MAGrBlB,EAAA,CAAAY,cAAA,aAAgD;MAC5CZ,EAAA,CAAAgB,SAAA,aAKE;MACFhB,EAAA,CAAAY,cAAA,WAQC;MACGZ,EAAA,CAAAiB,MAAA,eACJ;MAAAjB,EAAA,CAAAkB,YAAA,EAAI;MAEJlB,EAAA,CAAAY,cAAA,aAA0B;MAGlBZ,EAAA,CAAAa,UAAA,mBAAAM,4CAAA;QAAA,OAASR,GAAA,CAAAS,qBAAA,EAAuB;MAAA,EAAC;MAEjCpB,EAAA,CAAAgB,SAAA,eAA0B;MAC1BhB,EAAA,CAAAY,cAAA,YAAM;MAAAZ,EAAA,CAAAiB,MAAA,eAAO;MAAAjB,EAAA,CAAAkB,YAAA,EAAO;MAExBlB,EAAA,CAAAY,cAAA,cAGC;MADGZ,EAAA,CAAAa,UAAA,mBAAAQ,4CAAA;QAAA,OAASV,GAAA,CAAAW,qBAAA,EAAuB;MAAA,EAAC;MAEjCtB,EAAA,CAAAgB,SAAA,eAAiC;MACjChB,EAAA,CAAAY,cAAA,YAAM;MAAAZ,EAAA,CAAAiB,MAAA,eAAO;MAAAjB,EAAA,CAAAkB,YAAA,EAAO;MAExBlB,EAAA,CAAAY,cAAA,cAGC;MADGZ,EAAA,CAAAa,UAAA,mBAAAU,4CAAA;QAAA,OAASZ,GAAA,CAAAa,oBAAA,EAAsB;MAAA,EAAC;MAEhCxB,EAAA,CAAAgB,SAAA,eAA+B;MAC/BhB,EAAA,CAAAY,cAAA,YAAM;MAAAZ,EAAA,CAAAiB,MAAA,eAAO;MAAAjB,EAAA,CAAAkB,YAAA,EAAO;MAExBlB,EAAA,CAAAY,cAAA,cAGC;MADGZ,EAAA,CAAAa,UAAA,mBAAAY,4CAAA;QAAA,OAASd,GAAA,CAAAe,mBAAA,EAAqB;MAAA,EAAC;MAE/B1B,EAAA,CAAAgB,SAAA,gBAA+B;MAC/BhB,EAAA,CAAAY,cAAA,YAAM;MAAAZ,EAAA,CAAAiB,MAAA,gBAAQ;MAAAjB,EAAA,CAAAkB,YAAA,EAAO;MAEzBlB,EAAA,CAAAY,cAAA,cAGC;MADGZ,EAAA,CAAAa,UAAA,mBAAAc,4CAAA;QAAA,OAAShB,GAAA,CAAAiB,wBAAA,EAA0B;MAAA,EAAC;MAEpC5B,EAAA,CAAAgB,SAAA,gBAAiC;MACjChB,EAAA,CAAAY,cAAA,YAAM;MAAAZ,EAAA,CAAAiB,MAAA,iBAAS;MAAAjB,EAAA,CAAAkB,YAAA,EAAO;MAKlClB,EAAA,CAAAY,cAAA,cAAgD;MAC5CZ,EAAA,CAAAgB,SAAA,cAKE;MACFhB,EAAA,CAAAY,cAAA,YAQC;MACGZ,EAAA,CAAAiB,MAAA,cACJ;MAAAjB,EAAA,CAAAkB,YAAA,EAAI;MAEJlB,EAAA,CAAAY,cAAA,aAA0B;MAGlBZ,EAAA,CAAAa,UAAA,mBAAAgB,4CAAA;QAAA,OAASlB,GAAA,CAAAmB,sBAAA,EAAwB;MAAA,EAAC;MAElC9B,EAAA,CAAAgB,SAAA,eAA0B;MAC1BhB,EAAA,CAAAY,cAAA,YAAM;MAAAZ,EAAA,CAAAiB,MAAA,oBAAY;MAAAjB,EAAA,CAAAkB,YAAA,EAAO;MAE7BlB,EAAA,CAAAY,cAAA,cAGC;MADGZ,EAAA,CAAAa,UAAA,mBAAAkB,4CAAA;QAAA,OAASpB,GAAA,CAAAqB,wBAAA,EAA0B;MAAA,EAAC;MAEpChC,EAAA,CAAAgB,SAAA,eAA0B;MAC1BhB,EAAA,CAAAY,cAAA,YAAM;MAAAZ,EAAA,CAAAiB,MAAA,sBAAc;MAAAjB,EAAA,CAAAkB,YAAA,EAAO;MAE/BlB,EAAA,CAAAY,cAAA,cAGC;MADGZ,EAAA,CAAAa,UAAA,mBAAAoB,4CAAA;QAAA,OAAStB,GAAA,CAAAuB,oBAAA,EAAsB;MAAA,EAAC;MAEhClC,EAAA,CAAAgB,SAAA,eAA0B;MAC1BhB,EAAA,CAAAY,cAAA,YAAM;MAAAZ,EAAA,CAAAiB,MAAA,kBAAU;MAAAjB,EAAA,CAAAkB,YAAA,EAAO;MAMnClB,EAAA,CAAAY,cAAA,cAAgD;MAC5CZ,EAAA,CAAAgB,SAAA,eAKE;MACFhB,EAAA,CAAAY,cAAA,YAQC;MACGZ,EAAA,CAAAiB,MAAA,iBACJ;MAAAjB,EAAA,CAAAkB,YAAA,EAAI;MAEJlB,EAAA,CAAAY,cAAA,aAA0B;MAIVZ,EAAA,CAAAa,UAAA,oBAAAsB,+CAAAC,MAAA;QAAA,OAAUzB,GAAA,CAAArD,mBAAA,CAAA8E,MAAA,CAA2B;MAAA,EAAC;MAD1CpC,EAAA,CAAAkB,YAAA,EAKE;MACFlB,EAAA,CAAAY,cAAA,iBAAkC;MAAAZ,EAAA,CAAAgB,SAAA,YAAa;MAAAhB,EAAA,CAAAkB,YAAA,EAAQ;MAE3DlB,EAAA,CAAAY,cAAA,YAAM;MAAAZ,EAAA,CAAAiB,MAAA,oBAAY;MAAAjB,EAAA,CAAAkB,YAAA,EAAO;MAKzClB,EAAA,CAAAgB,SAAA,eAAoB;MACxBhB,EAAA,CAAAkB,YAAA,EAAM;;;;;SD7EOrF,YAAY;AA8IrBkF,mBAAmB,GAAGA,CAAA,KAAK;EACvB,IAAI,CAAC3B,cAAc,CAACiD,cAAc,CAAC,IAAI,CAAC;AAC5C,CAAC;AAEDjB,qBAAqB,GAAGA,CAAA,KAAK;EAAA,SACVkB,WAAWA,CAAAC,EAAA,EAAAC,GAAA;IAAA,OAAAC,YAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,aAAA;IAAAA,YAAA,GAAA3E,iBAAA,CAA1B,WAA2BrD,GAAY,EAAEC,GAAY;MACjD,IAAI;QACA,MAAMkI,GAAG,GAAG,kDAAkDnI,GAAG,cAAcC,GAAG,EAAE;QACpF,MAAMmI,OAAO,GAAG;UACZC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACL,gBAAgB,EACZ,oDAAoD;YACxD,iBAAiB,EAAE;;SAE1B;QACD,MAAMC,QAAQ,SAASC,KAAK,CAACL,GAAG,EAAEC,OAAO,CAAC;QAC1C,MAAMrG,MAAM,SAASwG,QAAQ,CAACE,IAAI,EAAE;QACpC,IAAI1G,MAAM,CAAC2G,KAAK,EAAE;UACd,OAAO,IAAI;;QAEf,OAAO,KAAK;OACf,CAAC,OAAOhG,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB,OAAOiG,SAAS;;IAExB,CAAC;IAAA,OAAAX,YAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,IAAI,CAACvD,cAAc,CAACiD,cAAc,CAC9BvF,MAAM,CAACC,IAAI,CAACsC,OAAO,CAACgE,WAAW,CAACC,MAAM,CACzC;EAEDxG,MAAM,CAACC,IAAI,CAACQ,KAAK,CAACgB,WAAW,CACzB,IAAI,CAACa,cAAc,EACnB,gBAAgB;IAAA,IAAAmE,KAAA,GAAAzF,iBAAA,CAChB,WAAgBjB,MAAW;MACvBA,MAAM,CAAC2G,OAAO,CACV,sDAAsD,CACzD;MAED,MAAM/I,GAAG,GAAGoC,MAAM,CAAC4G,WAAW,EAAE,EAAEhJ,GAAG,EAAE;MACvC,MAAMC,GAAG,GAAGmC,MAAM,CAAC4G,WAAW,EAAE,EAAE/I,GAAG,EAAE;MAEvC;MACA,IAAIY,iBAAiB,EAAE;QACnB,MAAMoI,OAAO,SAASpB,WAAW,CAAC7H,GAAG,EAAEC,GAAG,CAAC;QAE3C,IAAIgJ,OAAO,EAAE;UACTC,KAAK,CAAC,iCAAiC,CAAC;UACxC,OAAO9G,MAAM,CAACsC,MAAM,CAAC,IAAI,CAAC;;;MAIlC3D,OAAO,CAACoB,IAAI,CAACC,MAAM,CAAC;MAEpB,IAAItB,OAAO,CAACqI,MAAM,GAAG,CAAC,EAAE;QACpBrI,OAAO,CAAC8C,OAAO,CAAE3B,IAAI,IAAI;UACrB,MAAMmH,YAAY,GAAGnH,IAAI,CAACoH,SAAS,EAAE;UACrC,MAAMC,YAAY,GAAGrH,IAAI,CAACsH,SAAS,EAAE;UACrC,MAAMC,cAAc,GAAGpH,MAAM,CAAC4G,WAAW,EAAE;UAE3C,IAAIQ,cAAc,IAAIJ,YAAY,EAAE;YAChC,IACI/G,MAAM,CAACC,IAAI,CAACmH,QAAQ,CAACC,SAAS,CAACC,sBAAsB,CACjDP,YAAY,EACZI,cAAc,CACjB,IAAIF,YAAY,EACnB;cACElH,MAAM,CAAC2G,OAAO,CACV,uDAAuD,CAC1D;aACJ,MAAM;cACH3G,MAAM,CAAC2G,OAAO,CACV,sDAAsD,CACzD;;;QAGb,CAAC,CAAC;;MAGN,IAAI/H,UAAU,CAACmI,MAAM,GAAG,CAAC,EAAE;QACvB,MAAMK,cAAc,GAAGpH,MAAM,CAAC4G,WAAW,EAAE;QAC3ChI,UAAU,CAAC4C,OAAO,CAAE3B,IAAI,IAAI;UACxB,MAAM2H,cAAc,GAAG3H,IAAI,CAAC4H,SAAS,EAAE;UACvC,IACIL,cAAc,IACdI,cAAc,EAAEE,QAAQ,CAACN,cAAc,CAAC,EAC1C;YACEpH,MAAM,CAAC2G,OAAO,CACV,uDAAuD,CAC1D;WACJ,MAAM;YACH3G,MAAM,CAAC2G,OAAO,CACV,sDAAsD,CACzD;;QAET,CAAC,CAAC;;MAGN3G,MAAM,CAAC0B,WAAW,CAAC,YAAY,EAAE,MAAK;QAClC,IAAIlD,iBAAiB,EAAE;UACnBA,iBAAiB,CAACmD,KAAK,EAAE;;QAE7B,MAAMC,UAAU,GAAG,IAAI3B,MAAM,CAACC,IAAI,CAAC2B,UAAU,CAAC;UAC1CC,OAAO,EACH,kDAAkD,GAClD;SACP,CAAC;QAEFF,UAAU,CAACK,IAAI,CAACvE,GAAG,EAAEsC,MAAM,CAAC;QAC5BxB,iBAAiB,GAAGoD,UAAU;QAE9BA,UAAU,CAACF,WAAW,CAAC,UAAU,EAAE,MAAK;UACpC,MAAMiG,YAAY,GAAGvG,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;UACpD,MAAMc,cAAc,GAChBf,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;UAErC,IAAIrB,MAAM,CAAC4H,YAAY,EAAE,EAAE;YACvBD,YAAY,EAAEE,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC;WAChD,MAAM;YACHF,YAAY,EAAEG,eAAe,CAAC,SAAS,CAAC;;UAG5CH,YAAY,EAAEvF,gBAAgB,CAAC,QAAQ,EAAE,MAAK;YAC1C,IAAIpC,MAAM,CAAC4H,YAAY,EAAE,EAAE;cACvBD,YAAY,EAAEG,eAAe,CAAC,SAAS,CAAC;cACxC9H,MAAM,CAAC+H,YAAY,CAAC,IAAI,CAAC;aAC5B,MAAM;cACHJ,YAAY,CAACE,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC;cAC5C7H,MAAM,CAAC+H,YAAY,CAAC,IAAI,CAAC;;UAEjC,CAAC,CAAC;UAEF5F,cAAc,EAAEC,gBAAgB,CAAC,QAAQ,EAAE,MAAK;YAC5CpC,MAAM,CAACsC,MAAM,CAAC,IAAI,CAAC;UACvB,CAAC,CAAC;QACN,CAAC,CAAC;MACN,CAAC,CAAC;MAEFtC,MAAM,CAAC0B,WAAW,CAAC,SAAS,eAAAT,iBAAA,CAAE,aAAW;QACrC,MAAMrD,GAAG,GAAGoC,MAAM,CAAC4G,WAAW,EAAE,EAAEhJ,GAAG,EAAE;QACvC,MAAMC,GAAG,GAAGmC,MAAM,CAAC4G,WAAW,EAAE,EAAE/I,GAAG,EAAE;QACvC,MAAMuJ,cAAc,GAAGpH,MAAM,CAAC4G,WAAW,EAAE;QAE3C,IAAInI,iBAAiB,EAAE;UACnB,MAAMoI,OAAO,SAASpB,WAAW,CAAC7H,GAAG,EAAEC,GAAG,CAAC;UAC3C,IAAIgJ,OAAO,EAAE;YACTC,KAAK,CAAC,iCAAiC,CAAC;YACxC,OAAO9G,MAAM,CAACsC,MAAM,CAAC,IAAI,CAAC;;;QAIlC5D,OAAO,CAAC8C,OAAO,CAAE3B,IAAI,IAAI;UACrB,MAAMmH,YAAY,GAAGnH,IAAI,CAACoH,SAAS,EAAE;UACrC,MAAMC,YAAY,GAAGrH,IAAI,CAACsH,SAAS,EAAE;UAErC,IAAIC,cAAc,IAAIJ,YAAY,EAAE;YAChC,IACI/G,MAAM,CAACC,IAAI,CAACmH,QAAQ,CAACC,SAAS,CAACC,sBAAsB,CACjDP,YAAY,EACZI,cAAc,CACjB,IAAIF,YAAY,EACnB;cACElH,MAAM,CAAC2G,OAAO,CACV,uDAAuD,CAC1D;aACJ,MAAM;cACH3G,MAAM,CAAC2G,OAAO,CACV,sDAAsD,CACzD;;;QAGb,CAAC,CAAC;QAEF/H,UAAU,CAAC4C,OAAO,CAAE3B,IAAI,IAAI;UACxB,MAAM2H,cAAc,GAAG3H,IAAI,CAAC4H,SAAS,EAAE;UACvC,IACIL,cAAc,IACdI,cAAc,EAAEE,QAAQ,CAACN,cAAc,CAAC,EAC1C;YACEpH,MAAM,CAAC2G,OAAO,CACV,uDAAuD,CAC1D;WACJ,MAAM;YACH3G,MAAM,CAAC2G,OAAO,CACV,sDAAsD,CACzD;;QAET,CAAC,CAAC;MACN,CAAC,EAAC;IACN,CAAC;IAAA,iBAAAqB,GAAA;MAAA,OAAAtB,KAAA,CAAAb,KAAA,OAAAC,SAAA;IAAA;EAAA,IACJ;AACL,CAAC;AAEDrB,qBAAqB,GAAGA,CAAA,KAAK;EACzB,IAAI,CAAClC,cAAc,CAACiD,cAAc,CAC9BvF,MAAM,CAACC,IAAI,CAACsC,OAAO,CAACgE,WAAW,CAACyB,MAAM,CACzC;EAEDhI,MAAM,CAACC,IAAI,CAACQ,KAAK,CAACgB,WAAW,CACzB,IAAI,CAACa,cAAc,EACnB,gBAAgB,EAChB,UAAU2F,MAAW;IACjBxJ,OAAO,CAACqB,IAAI,CAACmI,MAAM,CAAC;IAEpBA,MAAM,CAACxG,WAAW,CAAC,gBAAgB,EAAE,MAAK;MACtC,MAAMsF,YAAY,GAAGkB,MAAM,CAACjB,SAAS,EAAE;MACvC,MAAMC,YAAY,GAAGgB,MAAM,CAACf,SAAS,EAAE;MAEvCxI,OAAO,CAAC6C,OAAO,CAAE3B,IAAI,IAAI;QACrB,MAAMuH,cAAc,GAAGvH,IAAI,CAAC+G,WAAW,EAAE;QAEzC,IAAIQ,cAAc,IAAIJ,YAAY,EAAE;UAChC,IACI/G,MAAM,CAACC,IAAI,CAACmH,QAAQ,CAACC,SAAS,CAACC,sBAAsB,CACjDP,YAAY,EACZI,cAAc,CACjB,IAAIF,YAAY,EACnB;YACErH,IAAI,CAAC8G,OAAO,CACR,uDAAuD,CAC1D;WACJ,MAAM;YACH9G,IAAI,CAAC8G,OAAO,CACR,sDAAsD,CACzD;;;MAGb,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,CACJ;AACL,CAAC;AAEDwB,sBAAsB,GAAGA,CAAA,KAAK;EAC1BzJ,OAAO,CAAC8C,OAAO,CAAE0G,MAAM,IAAI;IACvBA,MAAM,CAAC5F,MAAM,CAAC,IAAI,CAAC;EACvB,CAAC,CAAC;EAEF5D,OAAO,CAACqI,MAAM,GAAG,CAAC;AACtB,CAAC;AAEDpC,oBAAoB,GAAGA,CAAA,KAAK;EACxB,IAAI,CAACpC,cAAc,CAACiD,cAAc,CAC9BvF,MAAM,CAACC,IAAI,CAACsC,OAAO,CAACgE,WAAW,CAAC4B,OAAO,CAC1C;EAEDnI,MAAM,CAACC,IAAI,CAACQ,KAAK,CAACgB,WAAW,CACzB,IAAI,CAACa,cAAc,EACnB,iBAAiB,EACjB,UAAU8F,OAAY;IAClBA,OAAO,CAAC3G,WAAW,CAAC,YAAY,EAAE,UAAUhB,KAAU;MAClD,IAAIlC,iBAAiB,EAAE;QACnBA,iBAAiB,CAACmD,KAAK,EAAE;;MAE7B,MAAMC,UAAU,GAAG,IAAI3B,MAAM,CAACC,IAAI,CAAC2B,UAAU,CAAC;QAC1CC,OAAO,EACH,kDAAkD,GAClD;OACP,CAAC;MAEFF,UAAU,CAACG,WAAW,CAACrB,KAAK,CAACsB,MAAM,CAAC;MACpCJ,UAAU,CAACK,IAAI,CAACvE,GAAG,CAAC;MACpBc,iBAAiB,GAAGoD,UAAU;MAE9BA,UAAU,CAACF,WAAW,CAAC,UAAU,EAAE,MAAK;QACpC,MAAMiG,YAAY,GAAGvG,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;QACpD,MAAMc,cAAc,GAChBf,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;QAErC,IAAIgH,OAAO,CAACT,YAAY,EAAE,EAAE;UACxBD,YAAY,EAAEE,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC;SAChD,MAAM;UACHF,YAAY,EAAEG,eAAe,CAAC,SAAS,CAAC;;QAG5CH,YAAY,EAAEvF,gBAAgB,CAAC,QAAQ,EAAE,MAAK;UAC1C,IAAIiG,OAAO,CAACT,YAAY,EAAE,EAAE;YACxBD,YAAY,EAAEG,eAAe,CAAC,SAAS,CAAC;YACxCO,OAAO,CAACN,YAAY,CAAC,IAAI,CAAC;WAC7B,MAAM;YACHJ,YAAY,CAACE,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC;YAC5CQ,OAAO,CAACN,YAAY,CAAC,IAAI,CAAC;;QAElC,CAAC,CAAC;QAEF5F,cAAc,EAAEC,gBAAgB,CAAC,QAAQ,EAAE,MAAK;UAC5CiG,OAAO,CAAC/F,MAAM,CAAC,IAAI,CAAC;UACpBV,UAAU,CAACD,KAAK,EAAE;QACtB,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,CACJ;AACL,CAAC;AACDkD,mBAAmB,GAAGA,CAAA,KAAK;EACvB,IAAI,CAACtC,cAAc,CAACiD,cAAc,CAC9BvF,MAAM,CAACC,IAAI,CAACsC,OAAO,CAACgE,WAAW,CAAC8B,QAAQ,CAC3C;EAEDrI,MAAM,CAACC,IAAI,CAACQ,KAAK,CAACgB,WAAW,CACzB,IAAI,CAACa,cAAc,EACnB,kBAAkB,EAClB,UAAUgG,IAAS;IACfA,IAAI,CAAC7G,WAAW,CAAC,YAAY,EAAE,UAAUhB,KAAU;MAC/C,IAAIlC,iBAAiB,EAAE;QACnBA,iBAAiB,CAACmD,KAAK,EAAE;;MAE7B,MAAMC,UAAU,GAAG,IAAI3B,MAAM,CAACC,IAAI,CAAC2B,UAAU,CAAC;QAC1CC,OAAO,EACH,kDAAkD,GAClD;OACP,CAAC;MAEFF,UAAU,CAACG,WAAW,CAACrB,KAAK,CAACsB,MAAM,CAAC;MACpCJ,UAAU,CAACK,IAAI,CAACvE,GAAG,CAAC;MACpBc,iBAAiB,GAAGoD,UAAU;MAE9BA,UAAU,CAACF,WAAW,CAAC,UAAU,EAAE,MAAK;QACpC,MAAMiG,YAAY,GAAGvG,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;QACpD,MAAMc,cAAc,GAChBf,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;QAErC,IAAIkH,IAAI,CAACX,YAAY,EAAE,EAAE;UACrBD,YAAY,EAAEE,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC;SAChD,MAAM;UACHF,YAAY,EAAEG,eAAe,CAAC,SAAS,CAAC;;QAG5CH,YAAY,EAAEvF,gBAAgB,CAAC,QAAQ,EAAE,MAAK;UAC1C,IAAImG,IAAI,CAACX,YAAY,EAAE,EAAE;YACrBD,YAAY,EAAEG,eAAe,CAAC,SAAS,CAAC;YACxCS,IAAI,CAACR,YAAY,CAAC,IAAI,CAAC;WAC1B,MAAM;YACHJ,YAAY,CAACE,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC;YAC5CU,IAAI,CAACR,YAAY,CAAC,IAAI,CAAC;;QAE/B,CAAC,CAAC;QAEF5F,cAAc,EAAEC,gBAAgB,CAAC,QAAQ,EAAE,MAAK;UAC5CmG,IAAI,CAACjG,MAAM,CAAC,IAAI,CAAC;UACjBV,UAAU,CAACD,KAAK,EAAE;QACtB,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,CACJ;AACL,CAAC;AAEDoD,wBAAwB,GAAGA,CAAA,KAAK;EAC5B,IAAI,CAACxC,cAAc,CAACiD,cAAc,CAC9BvF,MAAM,CAACC,IAAI,CAACsC,OAAO,CAACgE,WAAW,CAACgC,SAAS,CAC5C;EAEDvI,MAAM,CAACC,IAAI,CAACQ,KAAK,CAACgB,WAAW,CACzB,IAAI,CAACa,cAAc,EACnB,mBAAmB,EACnB,UAAUF,SAAc;IACpBzD,UAAU,CAACmB,IAAI,CAACsC,SAAS,CAAC;IAE1BA,SAAS,CAACX,WAAW,CAAC,YAAY,EAAE,UAAUhB,KAAU;MACpD,IAAIlC,iBAAiB,EAAE;QACnBA,iBAAiB,CAACmD,KAAK,EAAE;;MAE7B,MAAMC,UAAU,GAAG,IAAI3B,MAAM,CAACC,IAAI,CAAC2B,UAAU,CAAC;QAC1CC,OAAO,EACH,kDAAkD,GAClD;OACP,CAAC;MAEFF,UAAU,CAACG,WAAW,CAACrB,KAAK,CAACsB,MAAM,CAAC;MACpCJ,UAAU,CAACK,IAAI,CAACvE,GAAG,CAAC;MACpBc,iBAAiB,GAAGoD,UAAU;MAE9BA,UAAU,CAACF,WAAW,CAAC,UAAU,EAAE,MAAK;QACpC,MAAMiG,YAAY,GAAGvG,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;QACpD,MAAMc,cAAc,GAChBf,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;QAErC,IAAIgB,SAAS,CAACuF,YAAY,EAAE,EAAE;UAC1BD,YAAY,EAAEE,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC;SAChD,MAAM;UACHF,YAAY,EAAEG,eAAe,CAAC,SAAS,CAAC;;QAG5CH,YAAY,EAAEvF,gBAAgB,CAAC,QAAQ,EAAE,MAAK;UAC1C,IAAIC,SAAS,CAACuF,YAAY,EAAE,EAAE;YAC1BD,YAAY,EAAEG,eAAe,CAAC,SAAS,CAAC;YACxCzF,SAAS,CAAC0F,YAAY,CAAC,IAAI,CAAC;WAC/B,MAAM;YACHJ,YAAY,CAACE,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC;YAC5CxF,SAAS,CAAC0F,YAAY,CAAC,IAAI,CAAC;;QAEpC,CAAC,CAAC;QAEF5F,cAAc,EAAEC,gBAAgB,CAAC,QAAQ,EAAE,MAAK;UAC5CC,SAAS,CAACC,MAAM,CAAC,IAAI,CAAC;UACtBV,UAAU,CAACD,KAAK,EAAE;QACtB,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,CAAC;IAEFU,SAAS,CAACX,WAAW,CAAC,SAAS,EAAE,MAAK;MAClC,MAAM8F,cAAc,GAAGnF,SAAS,CAACoF,SAAS,EAAE;MAC5C9I,OAAO,CAAC6C,OAAO,CAAE3B,IAAI,IAAI;QACrB,MAAM4I,YAAY,GAAG5I,IAAI,CAAC+G,WAAW,EAAE;QACvC,IACI6B,YAAY,IACZjB,cAAc,EAAEE,QAAQ,CAACe,YAAY,CAAC,EACxC;UACE5I,IAAI,CAAC8G,OAAO,CACR,uDAAuD,CAC1D;SACJ,MAAM;UACH9G,IAAI,CAAC8G,OAAO,CACR,sDAAsD,CACzD;;MAET,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,CACJ;AACL,CAAC;AAED1B,sBAAsB,GAAGA,CAAA,KAAK;EAC1BpG,OAAO,CAAC2C,OAAO,CAAE3B,IAAI,IAAI;IACrBA,IAAI,CAAC8G,OAAO,CACR,wHAAwH,CAC3H;EACL,CAAC,CAAC;AACN,CAAC;AAEDxB,wBAAwB,GAAGA,CAAA,KAAK;EAC5BpG,SAAS,CAACyC,OAAO,CAAE3B,IAAI,IAAI;IACvBA,IAAI,CAAC8G,OAAO,CACR,wHAAwH,CAC3H;EACL,CAAC,CAAC;AACN,CAAC;AAEDtB,oBAAoB,GAAGA,CAAA,KAAK;EACxBvG,KAAK,CAAC0C,OAAO,CAAE3B,IAAI,IAAI;IACnBA,IAAI,CAAC8G,OAAO,CACR,wHAAwH,CAC3H;EACL,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}