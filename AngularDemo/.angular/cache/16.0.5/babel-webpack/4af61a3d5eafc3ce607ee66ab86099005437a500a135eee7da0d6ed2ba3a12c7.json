{"ast":null,"code":"import _asyncToGenerator from \"D:/Workspace/FPT/AngularDemo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from 'src/environments/environment.development';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nlet map;\nlet currentInfoWindow = null;\nlet isOpenDetectWater = false;\nconst circles = [];\nconst markers = [];\nconst rectangles = [];\nconst ganivos = [];\nconst tanks = [];\nconst TilePines = [];\nconst VietNamCor = {\n  lat: 15.9031,\n  lng: 105.8067\n};\nconst Ganivo = [{\n  name: 'HCMU00020.001/G',\n  type: 'G',\n  XCor: 10.789538365455055,\n  YCor: 106.63355331689347\n}, {\n  name: 'HCMU00020.002/G',\n  type: 'G',\n  XCor: 10.790382019066472,\n  YCor: 106.63369793039553\n}, {\n  name: 'HCMU00020.003/G',\n  type: 'G',\n  XCor: 10.792112418503653,\n  YCor: 106.63391626477099\n}, {\n  name: 'HCMU00020.004/G',\n  type: 'G',\n  XCor: 10.792035022157838,\n  YCor: 106.63407283872223\n}, {\n  name: 'HCMU00020.005/G',\n  type: 'G',\n  XCor: 10.792148975919691,\n  YCor: 106.6339239761219\n}, {\n  name: 'HCMU00020.006/G',\n  type: 'G',\n  XCor: 10.79373092802706,\n  YCor: 106.63419528310318\n}, {\n  name: 'HCMU00020.007/G',\n  type: 'G',\n  XCor: 10.793781236239328,\n  YCor: 106.63433276010265\n}, {\n  name: 'HCMU00020.008/G',\n  type: 'G',\n  XCor: 10.793755547384253,\n  YCor: 106.63420290557731\n}, {\n  name: 'HCMU00020.009/G',\n  type: 'G',\n  XCor: 10.795407534485824,\n  YCor: 106.63596623332258\n}, {\n  name: 'HCMU00020.010/G',\n  type: 'G',\n  XCor: 10.79526271276973,\n  YCor: 106.63692184459805\n}];\nconst TilePipe = [{\n  name: 'HCMU00001.001/O',\n  type: 'O',\n  XCor: 10.835144728045616,\n  YCor: 106.66329563558202\n}, {\n  name: 'HCMU00001.002/O',\n  type: 'O',\n  XCor: 10.835263001921522,\n  YCor: 106.66372920705183\n}, {\n  name: 'HCMU00001.003/O',\n  type: 'O',\n  XCor: 10.835814214193284,\n  YCor: 106.66456774457072\n}, {\n  name: 'HCMU00001.005/O',\n  type: 'O',\n  XCor: 10.835068320370773,\n  YCor: 106.6651365423279\n}, {\n  name: 'HCMU00001.006/O',\n  type: 'O',\n  XCor: 10.834705121027808,\n  YCor: 106.6661860568413\n}, {\n  name: 'HCMU00001.007/O',\n  type: 'O',\n  XCor: 10.83466201697298,\n  YCor: 106.66639116728095\n}, {\n  name: 'HCMU00001.008/O',\n  type: 'O',\n  XCor: 10.834504633262823,\n  YCor: 106.66663039321622\n}, {\n  name: 'HCMU00001.009/O',\n  type: 'O',\n  XCor: 10.834502617149694,\n  YCor: 106.66678140625572\n}, {\n  name: 'HCMU00001.010/O',\n  type: 'O',\n  XCor: 10.834358360451468,\n  YCor: 106.66701551947631\n}];\nconst Tank = [{\n  name: 'HCMU00001.002/B',\n  type: 'B',\n  XCor: 10.835000478970937,\n  YCor: 106.66365127116387\n}, {\n  name: 'HCMU00001.003/B',\n  type: 'B',\n  XCor: 10.835297724069841,\n  YCor: 106.66463990032798\n}, {\n  name: 'HCMU00001.004/B',\n  type: 'B',\n  XCor: 10.835541503021876,\n  YCor: 106.66460703802875\n}, {\n  name: 'HCMU00001.005/B',\n  type: 'B',\n  XCor: 10.834649857323233,\n  YCor: 106.66444327116392\n}, {\n  name: 'HCMU00001.006/B',\n  type: 'B',\n  XCor: 10.835220862190862,\n  YCor: 106.66469871997833\n}, {\n  name: 'HCMU00001.007/B',\n  type: 'B',\n  XCor: 10.835387426132323,\n  YCor: 106.66472239355994\n}, {\n  name: 'HCMU00001.008/B',\n  type: 'B',\n  XCor: 10.835227162349868,\n  YCor: 106.66520234416294\n}, {\n  name: 'HCMU00001.009/B',\n  type: 'B',\n  XCor: 10.83503154008743,\n  YCor: 106.66577846073051\n}, {\n  name: 'HCMU00001.010/B',\n  type: 'B',\n  XCor: 10.834861687753373,\n  YCor: 106.66624619113702\n}];\nconst demo = [{\n  type: 'G',\n  Coordinate: [{\n    lat: 10.835297724069841,\n    lng: 106.66463990032798\n  }, {\n    lat: 10.835545322571848,\n    lng: 106.66461049846839\n  }, {\n    lat: 10.834536182154537,\n    lng: 106.66715281147242\n  }, {\n    lat: 10.834450773789985,\n    lng: 106.66744819920406\n  }, {\n    lat: 10.834445834295492,\n    lng: 106.66745289306984\n  }, {\n    lat: 10.834333731292695,\n    lng: 106.66774305027218\n  }, {\n    lat: 10.834333731292695,\n    lng: 106.66774975579472\n  }, {\n    lat: 10.83415985578238,\n    lng: 106.66818651203198\n  }, {\n    lat: 10.834158538582578,\n    lng: 106.66819221172614\n  }, {\n    lat: 10.83397748307103,\n    lng: 106.66865979179431\n  }, {\n    lat: 10.833978141671338,\n    lng: 106.66866649731685\n  }, {\n    lat: 10.833785540843877,\n    lng: 106.66919662831116\n  }, {\n    lat: 10.833785211543518,\n    lng: 106.66920333383369\n  }, {\n    lat: 10.833691025821093,\n    lng: 106.66948119125242\n  }, {\n    lat: 10.833687633775543,\n    lng: 106.66948828011155\n  }, {\n    lat: 10.833438320977871,\n    lng: 106.67018195060302\n  }, {\n    lat: 10.830879288627019,\n    lng: 106.6774290170622\n  }, {\n    lat: 10.830873392507488,\n    lng: 106.67744951179634\n  }, {\n    lat: 10.830517775856759,\n    lng: 106.67770537024649\n  }]\n}];\nlet loader = new Loader({\n  apiKey: environment.apiKey,\n  version: 'weekly'\n});\nclass AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.successMarkers = [];\n    this.coordinate = [{\n      lat: Number,\n      lng: Number\n    }];\n    this.readFile = (fileURL = 'assets/Demo.csv') => {\n      this.http.get(fileURL, {\n        responseType: 'text'\n      }).subscribe(data => {\n        this.result = data.split('\\n');\n        this.result.map((item, index) => {\n          const lat = item.split(',')[2].replace('\"', ' ');\n          console.log(lat);\n          this.coordinate.push({\n            lat: item.split(',')[2],\n            lng: item.split(',')[3]\n          });\n          const marker = new google.maps.Marker({\n            position: {\n              lat: Number(item.split(',')[2]),\n              lng: Number(item.split(',')[3])\n            },\n            map,\n            title: `Item index ${index}`\n          });\n          return marker;\n        });\n      }, error => console.log(error.error));\n    };\n    this.handleWaterCheckBox = event => {\n      if (event.target.checked) {\n        isOpenDetectWater = true;\n      } else {\n        isOpenDetectWater = false;\n      }\n    };\n    this.handleDrawHandClick = () => {\n      this.drawingManager.setDrawingMode(null);\n    };\n    this.handleDrawMarkerClick = () => {\n      function detectWater(_x, _x2) {\n        return _detectWater.apply(this, arguments);\n      }\n      function _detectWater() {\n        _detectWater = _asyncToGenerator(function* (lat, lng) {\n          try {\n            const url = `https://isitwater-com.p.rapidapi.com/?latitude=${lat}&longitude=${lng}`;\n            const options = {\n              method: 'GET',\n              headers: {\n                'X-RapidAPI-Key': '911f81d9e3msh5f705b8931d758cp13855bjsn19b3ba12960e',\n                'X-RapidAPI-Host': 'isitwater-com.p.rapidapi.com'\n              }\n            };\n            const response = yield fetch(url, options);\n            const result = yield response.json();\n            if (result.water) {\n              return true;\n            }\n            return false;\n          } catch (error) {\n            console.error(error);\n            return undefined;\n          }\n        });\n        return _detectWater.apply(this, arguments);\n      }\n      this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.MARKER);\n      google.maps.event.addListener(this.drawingManager, 'markercomplete', /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (marker) {\n          marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n          const lat = marker.getPosition()?.lat();\n          const lng = marker.getPosition()?.lng();\n          //Toggle check water functionality\n          if (isOpenDetectWater) {\n            const isWater = yield detectWater(lat, lng);\n            if (isWater) {\n              alert('You are placing marker on water');\n              return marker.setMap(null);\n            }\n          }\n          markers.push(marker);\n          if (circles.length > 0) {\n            circles.forEach(item => {\n              const circleCenter = item.getCenter();\n              const circleRadius = item.getRadius();\n              const markerPosition = marker.getPosition();\n              if (markerPosition && circleCenter) {\n                if (google.maps.geometry.spherical.computeDistanceBetween(circleCenter, markerPosition) <= circleRadius) {\n                  marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n                } else {\n                  marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n                }\n              }\n            });\n          }\n          if (rectangles.length > 0) {\n            const markerPosition = marker.getPosition();\n            rectangles.forEach(item => {\n              const rectangleBound = item.getBounds();\n              if (markerPosition && rectangleBound?.contains(markerPosition)) {\n                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n              } else {\n                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n              }\n            });\n          }\n          marker.addListener('rightclick', () => {\n            if (currentInfoWindow) {\n              currentInfoWindow.close();\n            }\n            const infowindow = new google.maps.InfoWindow({\n              content: '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' + '<div><input type=\"checkbox\" id=\"remove\">Remove</div>'\n            });\n            infowindow.open(map, marker);\n            currentInfoWindow = infowindow;\n            infowindow.addListener('domready', () => {\n              const editCheckbox = document.getElementById('edit');\n              const removeCheckbox = document.getElementById('remove');\n              if (marker.getDraggable()) {\n                editCheckbox?.setAttribute('checked', 'true');\n              } else {\n                editCheckbox?.removeAttribute('checked');\n              }\n              editCheckbox?.addEventListener('change', () => {\n                if (marker.getDraggable()) {\n                  editCheckbox?.removeAttribute('checked');\n                  marker.setDraggable(null);\n                } else {\n                  editCheckbox.setAttribute('checked', 'true');\n                  marker.setDraggable(true);\n                }\n              });\n              removeCheckbox?.addEventListener('change', () => {\n                marker.setMap(null);\n              });\n            });\n          });\n          marker.addListener('dragend', /*#__PURE__*/_asyncToGenerator(function* () {\n            const lat = marker.getPosition()?.lat();\n            const lng = marker.getPosition()?.lng();\n            const markerPosition = marker.getPosition();\n            if (isOpenDetectWater) {\n              const isWater = yield detectWater(lat, lng);\n              if (isWater) {\n                alert('You are placing marker on water');\n                return marker.setMap(null);\n              }\n            }\n            circles.forEach(item => {\n              const circleCenter = item.getCenter();\n              const circleRadius = item.getRadius();\n              if (markerPosition && circleCenter) {\n                if (google.maps.geometry.spherical.computeDistanceBetween(circleCenter, markerPosition) <= circleRadius) {\n                  marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n                } else {\n                  marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n                }\n              }\n            });\n            rectangles.forEach(item => {\n              const rectangleBound = item.getBounds();\n              if (markerPosition && rectangleBound?.contains(markerPosition)) {\n                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n              } else {\n                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n              }\n            });\n          }));\n        });\n        return function (_x3) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    };\n    this.handleDrawCircleClick = () => {\n      this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.CIRCLE);\n      google.maps.event.addListener(this.drawingManager, 'circlecomplete', function (circle) {\n        circles.push(circle);\n        circle.addListener('bounds_changed', () => {\n          const circleCenter = circle.getCenter();\n          const circleRadius = circle.getRadius();\n          markers.forEach(item => {\n            const markerPosition = item.getPosition();\n            if (markerPosition && circleCenter) {\n              if (google.maps.geometry.spherical.computeDistanceBetween(circleCenter, markerPosition) <= circleRadius) {\n                item.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n              } else {\n                item.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n              }\n            }\n          });\n        });\n      });\n    };\n    this.handleClearCircleClick = () => {\n      circles.forEach(circle => {\n        circle.setMap(null);\n      });\n      circles.length = 0;\n    };\n    this.handleDrawShapeClick = () => {\n      this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYGON);\n      google.maps.event.addListener(this.drawingManager, 'polygoncomplete', function (polygon) {\n        polygon.addListener('rightclick', function (event) {\n          if (currentInfoWindow) {\n            currentInfoWindow.close();\n          }\n          const infowindow = new google.maps.InfoWindow({\n            content: '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' + '<div><input type=\"checkbox\" id=\"remove\">Remove</div>'\n          });\n          infowindow.setPosition(event.latLng);\n          infowindow.open(map);\n          currentInfoWindow = infowindow;\n          infowindow.addListener('domready', () => {\n            const editCheckbox = document.getElementById('edit');\n            const removeCheckbox = document.getElementById('remove');\n            if (polygon.getDraggable()) {\n              editCheckbox?.setAttribute('checked', 'true');\n            } else {\n              editCheckbox?.removeAttribute('checked');\n            }\n            editCheckbox?.addEventListener('change', () => {\n              if (polygon.getDraggable()) {\n                editCheckbox?.removeAttribute('checked');\n                polygon.setDraggable(null);\n              } else {\n                editCheckbox.setAttribute('checked', 'true');\n                polygon.setDraggable(true);\n              }\n            });\n            removeCheckbox?.addEventListener('change', () => {\n              polygon.setMap(null);\n              infowindow.close();\n            });\n          });\n        });\n      });\n    };\n    this.handleDrawLineClick = () => {\n      this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYLINE);\n      google.maps.event.addListener(this.drawingManager, 'polylinecomplete', function (line) {\n        line.addListener('rightclick', function (event) {\n          if (currentInfoWindow) {\n            currentInfoWindow.close();\n          }\n          const infowindow = new google.maps.InfoWindow({\n            content: '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' + '<div><input type=\"checkbox\" id=\"remove\">Remove</div>'\n          });\n          infowindow.setPosition(event.latLng);\n          infowindow.open(map);\n          currentInfoWindow = infowindow;\n          infowindow.addListener('domready', () => {\n            const editCheckbox = document.getElementById('edit');\n            const removeCheckbox = document.getElementById('remove');\n            if (line.getDraggable()) {\n              editCheckbox?.setAttribute('checked', 'true');\n            } else {\n              editCheckbox?.removeAttribute('checked');\n            }\n            editCheckbox?.addEventListener('change', () => {\n              if (line.getDraggable()) {\n                editCheckbox?.removeAttribute('checked');\n                line.setDraggable(null);\n              } else {\n                editCheckbox.setAttribute('checked', 'true');\n                line.setDraggable(true);\n              }\n            });\n            removeCheckbox?.addEventListener('change', () => {\n              line.setMap(null);\n              infowindow.close();\n            });\n          });\n        });\n      });\n    };\n    this.handleDrawRectangleClick = () => {\n      this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.RECTANGLE);\n      google.maps.event.addListener(this.drawingManager, 'rectanglecomplete', function (rectangle) {\n        rectangles.push(rectangle);\n        rectangle.addListener('rightclick', function (event) {\n          if (currentInfoWindow) {\n            currentInfoWindow.close();\n          }\n          const infowindow = new google.maps.InfoWindow({\n            content: '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' + '<div><input type=\"checkbox\" id=\"remove\">Remove</div>'\n          });\n          infowindow.setPosition(event.latLng);\n          infowindow.open(map);\n          currentInfoWindow = infowindow;\n          infowindow.addListener('domready', () => {\n            const editCheckbox = document.getElementById('edit');\n            const removeCheckbox = document.getElementById('remove');\n            if (rectangle.getDraggable()) {\n              editCheckbox?.setAttribute('checked', 'true');\n            } else {\n              editCheckbox?.removeAttribute('checked');\n            }\n            editCheckbox?.addEventListener('change', () => {\n              if (rectangle.getDraggable()) {\n                editCheckbox?.removeAttribute('checked');\n                rectangle.setDraggable(null);\n              } else {\n                editCheckbox.setAttribute('checked', 'true');\n                rectangle.setDraggable(true);\n              }\n            });\n            removeCheckbox?.addEventListener('change', () => {\n              rectangle.setMap(null);\n              infowindow.close();\n            });\n          });\n        });\n        rectangle.addListener('dragend', () => {\n          const rectangleBound = rectangle.getBounds();\n          markers.forEach(item => {\n            const itemPosition = item.getPosition();\n            if (itemPosition && rectangleBound?.contains(itemPosition)) {\n              item.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n            } else {\n              item.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n            }\n          });\n        });\n      });\n    };\n    this.handleChangeGanivoIcon = () => {\n      ganivos.forEach(item => {\n        item.setIcon('https://img.icons8.com/external-others-pike-picture/50/external-building-church-christianity-others-pike-picture-3.png');\n      });\n    };\n    this.handleChangeTilePineIcon = () => {\n      TilePines.forEach(item => {\n        item.setIcon('https://img.icons8.com/external-others-pike-picture/50/external-building-church-christianity-others-pike-picture-3.png');\n      });\n    };\n    this.handleChangeTankIcon = () => {\n      tanks.forEach(item => {\n        item.setIcon('https://img.icons8.com/external-others-pike-picture/50/external-building-church-christianity-others-pike-picture-3.png');\n      });\n    };\n  }\n  ngOnInit() {\n    this.demo();\n    this.readFile('assets/GaniVo_SG.csv');\n  }\n  demo() {\n    var _this = this;\n    loader.load().then( /*#__PURE__*/_asyncToGenerator(function* () {\n      //* initial map element\n      const {\n        Map\n      } = yield google.maps.importLibrary('maps');\n      map = new Map(document.getElementById('map'), {\n        center: VietNamCor,\n        zoom: 8\n      });\n      // Ganivo.forEach((item, index) => {\n      //     const marker = new google.maps.Marker({\n      //         position: { lat: item.XCor, lng: item.YCor },\n      //         icon: 'https://img.icons8.com/color/24/marker--v1.png',\n      //         map,\n      //         title: item.name,\n      //     });\n      //     marker.addListener('rightclick', (event: any) => {\n      //         if (currentInfoWindow) {\n      //             currentInfoWindow.close();\n      //         }\n      //         const infowindow = new google.maps.InfoWindow({\n      //             content:\n      //                 '<div><input type=\"checkbox\" id=\"ICON1\">🤞</div>' +\n      //                 '<div><input type=\"checkbox\" id=\"ICON2\">👌</div>',\n      //         });\n      //         infowindow.setPosition(event.latLng);\n      //         infowindow.open(map);\n      //         currentInfoWindow = infowindow;\n      //         infowindow.addListener('domready', () => {\n      //             const firstIconCheckbox =\n      //                 document.getElementById('ICON1');\n      //             const secondIconCheckbox =\n      //                 document.getElementById('ICON2');\n      //             firstIconCheckbox?.addEventListener('change', () => {\n      //                 marker.setIcon('🤞');\n      //                 infowindow.close();\n      //             });\n      //             secondIconCheckbox?.addEventListener('change', () => {\n      //                 marker.setIcon('👌');\n      //                 infowindow.close();\n      //             });\n      //         });\n      //     });\n      //     ganivos.push(marker);\n      // });\n      // TilePipe.forEach((item, index) => {\n      //     const marker = new google.maps.Marker({\n      //         position: { lat: item.XCor, lng: item.YCor },\n      //         icon: 'https://img.icons8.com/color/24/region-code.png',\n      //         map,\n      //         title: item.name,\n      //     });\n      //     marker.addListener('rightclick', (event: any) => {\n      //         if (currentInfoWindow) {\n      //             currentInfoWindow.close();\n      //         }\n      //         const infowindow = new google.maps.InfoWindow({\n      //             content:\n      //                 '<div><input type=\"checkbox\" id=\"ICON1\">🤞</div>' +\n      //                 '<div><input type=\"checkbox\" id=\"ICON2\">👌</div>',\n      //         });\n      //         infowindow.setPosition(event.latLng);\n      //         infowindow.open(map);\n      //         currentInfoWindow = infowindow;\n      //         infowindow.addListener('domready', () => {\n      //             const firstIconCheckbox =\n      //                 document.getElementById('ICON1');\n      //             const secondIconCheckbox =\n      //                 document.getElementById('ICON2');\n      //             firstIconCheckbox?.addEventListener('change', () => {\n      //                 marker.setIcon('🤞');\n      //                 infowindow.close();\n      //             });\n      //             secondIconCheckbox?.addEventListener('change', () => {\n      //                 marker.setIcon('👌');\n      //                 infowindow.close();\n      //             });\n      //         });\n      //     });\n      //     TilePines.push(marker);\n      // });\n      // Tank.forEach((item, index) => {\n      //     const marker = new google.maps.Marker({\n      //         position: { lat: item.XCor, lng: item.YCor },\n      //         icon: 'https://img.icons8.com/color/24/google-maps-new.png',\n      //         map,\n      //         title: item.name,\n      //     });\n      //     marker.addListener('rightclick', (event: any) => {\n      //         if (currentInfoWindow) {\n      //             currentInfoWindow.close();\n      //         }\n      //         const infowindow = new google.maps.InfoWindow({\n      //             content:\n      //                 '<div><input type=\"checkbox\" id=\"ICON1\">🤞</div>' +\n      //                 '<div><input type=\"checkbox\" id=\"ICON2\">👌</div>',\n      //         });\n      //         infowindow.setPosition(event.latLng);\n      //         infowindow.open(map);\n      //         currentInfoWindow = infowindow;\n      //         infowindow.addListener('domready', () => {\n      //             const firstIconCheckbox =\n      //                 document.getElementById('ICON1');\n      //             const secondIconCheckbox =\n      //                 document.getElementById('ICON2');\n      //             firstIconCheckbox?.addEventListener('change', () => {\n      //                 marker.setIcon('🤞');\n      //                 infowindow.close();\n      //             });\n      //             secondIconCheckbox?.addEventListener('change', () => {\n      //                 marker.setIcon('👌');\n      //                 infowindow.close();\n      //             });\n      //         });\n      //     });\n      //     tanks.push(marker);\n      // });\n      //! Draw Polyline\n      demo.forEach(item => {\n        if (item.type === 'D') {\n          const polylines = [];\n          item.Coordinate.forEach(cor => {\n            polylines.push(cor);\n          });\n          const polyline = new google.maps.Polyline({\n            path: polylines,\n            geodesic: true,\n            strokeColor: '#FF0000',\n            strokeOpacity: 1.0,\n            strokeWeight: 2\n          });\n          polyline.setMap(map);\n        }\n      });\n      _this.drawingManager = new google.maps.drawing.DrawingManager({\n        drawingMode: null,\n        drawingControl: false,\n        circleOptions: {\n          fillColor: '#ffff00',\n          fillOpacity: 1,\n          strokeWeight: 5,\n          clickable: false,\n          editable: true,\n          zIndex: 1\n        }\n      });\n      _this.drawingManager.setMap(map);\n    }));\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 61,\n  vars: 0,\n  consts: [[1, \"ms-4\", \"d-flex\", \"gap-3\"], [1, \"d-flex\", \"flex-column\", \"gap-3\"], [1, \"menu-item\", \"d-flex\", \"align-items-center\", \"gap-2\", \"ms-2\", 3, \"click\"], [1, \"oval-yellow\"], [1, \"dropdown\", \"d-flex\", \"align-items-center\"], [\"width\", \"20\", \"height\", \"20\", \"src\", \"https://img.icons8.com/external-flat-andi-nur-abdillah/20/external-Option-survey-(flat)-flat-andi-nur-abdillah.png\", \"alt\", \"shapes icon\"], [\"data-bs-toggle\", \"dropdown\", \"data-bs-auto-close\", \"outside\", \"aria-expanded\", \"false\", \"role\", \"button\", \"data-bs-toggle\", \"dropdown\", \"aria-expanded\", \"false\", 1, \"dropdown-toggle\", \"text-decoration-none\", \"ms-2\"], [1, \"dropdown-menu\"], [1, \"oval\"], [1, \"oval-lime\"], [1, \"oval-teal\"], [1, \"oval-purple\"], [\"width\", \"20\", \"height\", \"20\", \"src\", \"https://img.icons8.com/external-kmg-design-outline-color-kmg-design/20/external-option-ui-essential-kmg-design-outline-color-kmg-design.png\", \"alt\", \"options icon\"], [1, \"d-flex\", \"align-items-center\", \"gap-2\", \"ms-2\"], [1, \"checkbox-wrapper-3\"], [\"type\", \"checkbox\", \"id\", \"cbx-3\", 1, \"waterCheckbox\", 3, \"change\"], [\"for\", \"cbx-3\", 1, \"toggle\"], [\"id\", \"map\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_div_click_2_listener() {\n        return ctx.handleDrawHandClick();\n      });\n      i0.ɵɵelement(3, \"span\", 3);\n      i0.ɵɵelementStart(4, \"span\");\n      i0.ɵɵtext(5, \"Hand\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 4);\n      i0.ɵɵelement(7, \"img\", 5);\n      i0.ɵɵelementStart(8, \"a\", 6);\n      i0.ɵɵtext(9, \" Shapes \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"ul\", 7)(11, \"div\", 2);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_div_click_11_listener() {\n        return ctx.handleDrawMarkerClick();\n      });\n      i0.ɵɵelement(12, \"span\", 8);\n      i0.ɵɵelementStart(13, \"span\");\n      i0.ɵɵtext(14, \"Markers\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 2);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_div_click_15_listener() {\n        return ctx.handleDrawCircleClick();\n      });\n      i0.ɵɵelement(16, \"span\", 3);\n      i0.ɵɵelementStart(17, \"span\");\n      i0.ɵɵtext(18, \"Circles\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 2);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_div_click_19_listener() {\n        return ctx.handleDrawShapeClick();\n      });\n      i0.ɵɵelement(20, \"span\", 9);\n      i0.ɵɵelementStart(21, \"span\");\n      i0.ɵɵtext(22, \"Polygon\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 2);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_div_click_23_listener() {\n        return ctx.handleDrawLineClick();\n      });\n      i0.ɵɵelement(24, \"span\", 10);\n      i0.ɵɵelementStart(25, \"span\");\n      i0.ɵɵtext(26, \"Polyline\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 2);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_div_click_27_listener() {\n        return ctx.handleDrawRectangleClick();\n      });\n      i0.ɵɵelement(28, \"span\", 11);\n      i0.ɵɵelementStart(29, \"span\");\n      i0.ɵɵtext(30, \"Rectangle\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(31, \"div\", 4);\n      i0.ɵɵelement(32, \"img\", 5);\n      i0.ɵɵelementStart(33, \"a\", 6);\n      i0.ɵɵtext(34, \" Icon \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"ul\", 7)(36, \"div\", 2);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_div_click_36_listener() {\n        return ctx.handleChangeGanivoIcon();\n      });\n      i0.ɵɵelement(37, \"span\", 8);\n      i0.ɵɵelementStart(38, \"span\");\n      i0.ɵɵtext(39, \"Ganivo Icons\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(40, \"div\", 2);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_div_click_40_listener() {\n        return ctx.handleChangeTilePineIcon();\n      });\n      i0.ɵɵelement(41, \"span\", 8);\n      i0.ɵɵelementStart(42, \"span\");\n      i0.ɵɵtext(43, \"TilePine Icons\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(44, \"div\", 2);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_div_click_44_listener() {\n        return ctx.handleChangeTankIcon();\n      });\n      i0.ɵɵelement(45, \"span\", 8);\n      i0.ɵɵelementStart(46, \"span\");\n      i0.ɵɵtext(47, \"Tank Icons\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(48, \"div\", 4);\n      i0.ɵɵelement(49, \"img\", 12);\n      i0.ɵɵelementStart(50, \"a\", 6);\n      i0.ɵɵtext(51, \" Options \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"ul\", 7)(53, \"div\", 13)(54, \"div\", 14)(55, \"input\", 15);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_55_listener($event) {\n        return ctx.handleWaterCheckBox($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"label\", 16);\n      i0.ɵɵelement(57, \"span\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(58, \"span\");\n      i0.ɵɵtext(59, \"Detect Water\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelement(60, \"div\", 17);\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"#map[_ngcontent-%COMP%] {\\r\\n    height: 100vh;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.oval[_ngcontent-%COMP%] {\\r\\n    width: 10px;\\r\\n    height: 10px;\\r\\n    border-radius: 50%;\\r\\n    background: #333;\\r\\n}\\r\\n\\r\\n.oval-yellow[_ngcontent-%COMP%] {\\r\\n    width: 10px;\\r\\n    height: 10px;\\r\\n    border-radius: 50%;\\r\\n    background: #ffd700;\\r\\n}\\r\\n\\r\\n.oval-lime[_ngcontent-%COMP%] {\\r\\n    width: 10px;\\r\\n    height: 10px;\\r\\n    border-radius: 50%;\\r\\n    background: #00ff00;\\r\\n}\\r\\n\\r\\n.oval-teal[_ngcontent-%COMP%] {\\r\\n    width: 10px;\\r\\n    height: 10px;\\r\\n    border-radius: 50%;\\r\\n    background: #7fffd4;\\r\\n}\\r\\n\\r\\n.oval-purple[_ngcontent-%COMP%] {\\r\\n    width: 10px;\\r\\n    height: 10px;\\r\\n    border-radius: 50%;\\r\\n    background: #6a5acd;\\r\\n}\\r\\n\\r\\n.menu-item[_ngcontent-%COMP%]:hover {\\r\\n    color: blue;\\r\\n    transition: all;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   input[type=\\\"checkbox\\\"][_ngcontent-%COMP%] {\\r\\n    visibility: hidden;\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   .toggle[_ngcontent-%COMP%] {\\r\\n    position: relative;\\r\\n    display: block;\\r\\n    width: 40px;\\r\\n    height: 20px;\\r\\n    cursor: pointer;\\r\\n    -webkit-tap-highlight-color: transparent;\\r\\n    transform: translate3d(0, 0, 0);\\r\\n}\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   .toggle[_ngcontent-%COMP%]:before {\\r\\n    content: \\\"\\\";\\r\\n    position: relative;\\r\\n    top: 3px;\\r\\n    left: 3px;\\r\\n    width: 34px;\\r\\n    height: 14px;\\r\\n    display: block;\\r\\n    background: #9a9999;\\r\\n    border-radius: 8px;\\r\\n    transition: background 0.2s ease;\\r\\n}\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   .toggle[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n    display: block;\\r\\n    background: white;\\r\\n    border-radius: 10px;\\r\\n    box-shadow: 0 3px 8px rgba(154, 153, 153, 0.5);\\r\\n    transition: all 0.2s ease;\\r\\n}\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   .toggle[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:before {\\r\\n    content: \\\"\\\";\\r\\n    position: absolute;\\r\\n    display: block;\\r\\n    margin: -18px;\\r\\n    width: 56px;\\r\\n    height: 56px;\\r\\n    background: rgba(79, 46, 220, 0.5);\\r\\n    border-radius: 50%;\\r\\n    transform: scale(0);\\r\\n    opacity: 1;\\r\\n    pointer-events: none;\\r\\n}\\r\\n\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   #cbx-3[_ngcontent-%COMP%]:checked    + .toggle[_ngcontent-%COMP%]:before {\\r\\n    background: #947ada;\\r\\n}\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   #cbx-3[_ngcontent-%COMP%]:checked    + .toggle[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\r\\n    background: #4f2edc;\\r\\n    transform: translateX(20px);\\r\\n    transition: all 0.2s cubic-bezier(0.8, 0.4, 0.3, 1.25),\\r\\n        background 0.15s ease;\\r\\n    box-shadow: 0 3px 8px rgba(79, 46, 220, 0.2);\\r\\n}\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   #cbx-3[_ngcontent-%COMP%]:checked    + .toggle[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:before {\\r\\n    transform: scale(1);\\r\\n    opacity: 0;\\r\\n    transition: all 0.4s ease;\\r\\n}\\r\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsV0FBVztBQUNmOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksV0FBVztJQUNYLGVBQWU7SUFDZixlQUFlO0FBQ25COztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsY0FBYztJQUNkLFdBQVc7SUFDWCxZQUFZO0lBQ1osZUFBZTtJQUNmLHdDQUF3QztJQUN4QywrQkFBK0I7QUFDbkM7QUFDQTtJQUNJLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFNBQVM7SUFDVCxXQUFXO0lBQ1gsWUFBWTtJQUNaLGNBQWM7SUFDZCxtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLGdDQUFnQztBQUNwQztBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLE1BQU07SUFDTixPQUFPO0lBQ1AsV0FBVztJQUNYLFlBQVk7SUFDWixjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLG1CQUFtQjtJQUNuQiw4Q0FBOEM7SUFDOUMseUJBQXlCO0FBQzdCO0FBQ0E7SUFDSSxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxhQUFhO0lBQ2IsV0FBVztJQUNYLFlBQVk7SUFDWixrQ0FBa0M7SUFDbEMsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixVQUFVO0lBQ1Ysb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsMkJBQTJCO0lBQzNCOzZCQUN5QjtJQUN6Qiw0Q0FBNEM7QUFDaEQ7QUFDQTtJQUNJLG1CQUFtQjtJQUNuQixVQUFVO0lBQ1YseUJBQXlCO0FBQzdCIiwic291cmNlc0NvbnRlbnQiOlsiI21hcCB7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5vdmFsIHtcclxuICAgIHdpZHRoOiAxMHB4O1xyXG4gICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYmFja2dyb3VuZDogIzMzMztcclxufVxyXG5cclxuLm92YWwteWVsbG93IHtcclxuICAgIHdpZHRoOiAxMHB4O1xyXG4gICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYmFja2dyb3VuZDogI2ZmZDcwMDtcclxufVxyXG5cclxuLm92YWwtbGltZSB7XHJcbiAgICB3aWR0aDogMTBweDtcclxuICAgIGhlaWdodDogMTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJhY2tncm91bmQ6ICMwMGZmMDA7XHJcbn1cclxuXHJcbi5vdmFsLXRlYWwge1xyXG4gICAgd2lkdGg6IDEwcHg7XHJcbiAgICBoZWlnaHQ6IDEwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBiYWNrZ3JvdW5kOiAjN2ZmZmQ0O1xyXG59XHJcblxyXG4ub3ZhbC1wdXJwbGUge1xyXG4gICAgd2lkdGg6IDEwcHg7XHJcbiAgICBoZWlnaHQ6IDEwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBiYWNrZ3JvdW5kOiAjNmE1YWNkO1xyXG59XHJcblxyXG4ubWVudS1pdGVtOmhvdmVyIHtcclxuICAgIGNvbG9yOiBibHVlO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uY2hlY2tib3gtd3JhcHBlci0zIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XHJcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4uY2hlY2tib3gtd3JhcHBlci0zIC50b2dnbGUge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogNDBweDtcclxuICAgIGhlaWdodDogMjBweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xyXG59XHJcbi5jaGVja2JveC13cmFwcGVyLTMgLnRvZ2dsZTpiZWZvcmUge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogM3B4O1xyXG4gICAgbGVmdDogM3B4O1xyXG4gICAgd2lkdGg6IDM0cHg7XHJcbiAgICBoZWlnaHQ6IDE0cHg7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGJhY2tncm91bmQ6ICM5YTk5OTk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMnMgZWFzZTtcclxufVxyXG4uY2hlY2tib3gtd3JhcHBlci0zIC50b2dnbGUgc3BhbiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgd2lkdGg6IDIwcHg7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIGJveC1zaGFkb3c6IDAgM3B4IDhweCByZ2JhKDE1NCwgMTUzLCAxNTMsIDAuNSk7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xyXG59XHJcbi5jaGVja2JveC13cmFwcGVyLTMgLnRvZ2dsZSBzcGFuOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW46IC0xOHB4O1xyXG4gICAgd2lkdGg6IDU2cHg7XHJcbiAgICBoZWlnaHQ6IDU2cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDc5LCA0NiwgMjIwLCAwLjUpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxufVxyXG5cclxuLmNoZWNrYm94LXdyYXBwZXItMyAjY2J4LTM6Y2hlY2tlZCArIC50b2dnbGU6YmVmb3JlIHtcclxuICAgIGJhY2tncm91bmQ6ICM5NDdhZGE7XHJcbn1cclxuLmNoZWNrYm94LXdyYXBwZXItMyAjY2J4LTM6Y2hlY2tlZCArIC50b2dnbGUgc3BhbiB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjNGYyZWRjO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwcHgpO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuMnMgY3ViaWMtYmV6aWVyKDAuOCwgMC40LCAwLjMsIDEuMjUpLFxyXG4gICAgICAgIGJhY2tncm91bmQgMC4xNXMgZWFzZTtcclxuICAgIGJveC1zaGFkb3c6IDAgM3B4IDhweCByZ2JhKDc5LCA0NiwgMjIwLCAwLjIpO1xyXG59XHJcbi5jaGVja2JveC13cmFwcGVyLTMgI2NieC0zOmNoZWNrZWQgKyAudG9nZ2xlIHNwYW46YmVmb3JlIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { AppComponent };","map":{"version":3,"names":["environment","Loader","map","currentInfoWindow","isOpenDetectWater","circles","markers","rectangles","ganivos","tanks","TilePines","VietNamCor","lat","lng","Ganivo","name","type","XCor","YCor","TilePipe","Tank","demo","Coordinate","loader","apiKey","version","AppComponent","constructor","http","successMarkers","coordinate","Number","readFile","fileURL","get","responseType","subscribe","data","result","split","item","index","replace","console","log","push","marker","google","maps","Marker","position","title","error","handleWaterCheckBox","event","target","checked","handleDrawHandClick","drawingManager","setDrawingMode","handleDrawMarkerClick","detectWater","_x","_x2","_detectWater","apply","arguments","_asyncToGenerator","url","options","method","headers","response","fetch","json","water","undefined","drawing","OverlayType","MARKER","addListener","_ref","setIcon","getPosition","isWater","alert","setMap","length","forEach","circleCenter","getCenter","circleRadius","getRadius","markerPosition","geometry","spherical","computeDistanceBetween","rectangleBound","getBounds","contains","close","infowindow","InfoWindow","content","open","editCheckbox","document","getElementById","removeCheckbox","getDraggable","setAttribute","removeAttribute","addEventListener","setDraggable","_x3","handleDrawCircleClick","CIRCLE","circle","handleClearCircleClick","handleDrawShapeClick","POLYGON","polygon","setPosition","latLng","handleDrawLineClick","POLYLINE","line","handleDrawRectangleClick","RECTANGLE","rectangle","itemPosition","handleChangeGanivoIcon","handleChangeTilePineIcon","handleChangeTankIcon","ngOnInit","_this","load","then","Map","importLibrary","center","zoom","polylines","cor","polyline","Polyline","path","geodesic","strokeColor","strokeOpacity","strokeWeight","DrawingManager","drawingMode","drawingControl","circleOptions","fillColor","fillOpacity","clickable","editable","zIndex","i0","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AppComponent_Template_div_click_2_listener","ɵɵelement","ɵɵtext","ɵɵelementEnd","AppComponent_Template_div_click_11_listener","AppComponent_Template_div_click_15_listener","AppComponent_Template_div_click_19_listener","AppComponent_Template_div_click_23_listener","AppComponent_Template_div_click_27_listener","AppComponent_Template_div_click_36_listener","AppComponent_Template_div_click_40_listener","AppComponent_Template_div_click_44_listener","AppComponent_Template_input_change_55_listener","$event"],"sources":["D:\\Workspace\\FPT\\AngularDemo\\src\\app\\app.component.ts","D:\\Workspace\\FPT\\AngularDemo\\src\\app\\app.component.html"],"sourcesContent":["import { environment } from 'src/environments/environment.development';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Loader } from '@googlemaps/js-api-loader';\r\nimport * as _ from 'lodash';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nlet map: google.maps.Map;\r\nlet currentInfoWindow: any = null;\r\nlet isOpenDetectWater: Boolean = false;\r\nconst circles: Array<any> = [];\r\nconst markers: Array<any> = [];\r\nconst rectangles: Array<any> = [];\r\nconst ganivos: Array<any> = [];\r\nconst tanks: Array<any> = [];\r\nconst TilePines: Array<any> = [];\r\n\r\nconst VietNamCor = { lat: 15.9031, lng: 105.8067 };\r\nconst Ganivo = [\r\n    {\r\n        name: 'HCMU00020.001/G',\r\n        type: 'G',\r\n        XCor: 10.789538365455055,\r\n        YCor: 106.63355331689347,\r\n    },\r\n    {\r\n        name: 'HCMU00020.002/G',\r\n        type: 'G',\r\n        XCor: 10.790382019066472,\r\n        YCor: 106.63369793039553,\r\n    },\r\n    {\r\n        name: 'HCMU00020.003/G',\r\n        type: 'G',\r\n        XCor: 10.792112418503653,\r\n        YCor: 106.63391626477099,\r\n    },\r\n    {\r\n        name: 'HCMU00020.004/G',\r\n        type: 'G',\r\n        XCor: 10.792035022157838,\r\n        YCor: 106.63407283872223,\r\n    },\r\n    {\r\n        name: 'HCMU00020.005/G',\r\n        type: 'G',\r\n        XCor: 10.792148975919691,\r\n        YCor: 106.6339239761219,\r\n    },\r\n    {\r\n        name: 'HCMU00020.006/G',\r\n        type: 'G',\r\n        XCor: 10.79373092802706,\r\n        YCor: 106.63419528310318,\r\n    },\r\n    {\r\n        name: 'HCMU00020.007/G',\r\n        type: 'G',\r\n        XCor: 10.793781236239328,\r\n        YCor: 106.63433276010265,\r\n    },\r\n    {\r\n        name: 'HCMU00020.008/G',\r\n        type: 'G',\r\n        XCor: 10.793755547384253,\r\n        YCor: 106.63420290557731,\r\n    },\r\n    {\r\n        name: 'HCMU00020.009/G',\r\n        type: 'G',\r\n        XCor: 10.795407534485824,\r\n        YCor: 106.63596623332258,\r\n    },\r\n    {\r\n        name: 'HCMU00020.010/G',\r\n        type: 'G',\r\n        XCor: 10.79526271276973,\r\n        YCor: 106.63692184459805,\r\n    },\r\n];\r\nconst TilePipe = [\r\n    {\r\n        name: 'HCMU00001.001/O',\r\n        type: 'O',\r\n        XCor: 10.835144728045616,\r\n        YCor: 106.66329563558202,\r\n    },\r\n    {\r\n        name: 'HCMU00001.002/O',\r\n        type: 'O',\r\n        XCor: 10.835263001921522,\r\n        YCor: 106.66372920705183,\r\n    },\r\n    {\r\n        name: 'HCMU00001.003/O',\r\n        type: 'O',\r\n        XCor: 10.835814214193284,\r\n        YCor: 106.66456774457072,\r\n    },\r\n    {\r\n        name: 'HCMU00001.005/O',\r\n        type: 'O',\r\n        XCor: 10.835068320370773,\r\n        YCor: 106.6651365423279,\r\n    },\r\n    {\r\n        name: 'HCMU00001.006/O',\r\n        type: 'O',\r\n        XCor: 10.834705121027808,\r\n        YCor: 106.6661860568413,\r\n    },\r\n    {\r\n        name: 'HCMU00001.007/O',\r\n        type: 'O',\r\n        XCor: 10.83466201697298,\r\n        YCor: 106.66639116728095,\r\n    },\r\n    {\r\n        name: 'HCMU00001.008/O',\r\n        type: 'O',\r\n        XCor: 10.834504633262823,\r\n        YCor: 106.66663039321622,\r\n    },\r\n    {\r\n        name: 'HCMU00001.009/O',\r\n        type: 'O',\r\n        XCor: 10.834502617149694,\r\n        YCor: 106.66678140625572,\r\n    },\r\n    {\r\n        name: 'HCMU00001.010/O',\r\n        type: 'O',\r\n        XCor: 10.834358360451468,\r\n        YCor: 106.66701551947631,\r\n    },\r\n];\r\nconst Tank = [\r\n    {\r\n        name: 'HCMU00001.002/B',\r\n        type: 'B',\r\n        XCor: 10.835000478970937,\r\n        YCor: 106.66365127116387,\r\n    },\r\n    {\r\n        name: 'HCMU00001.003/B',\r\n        type: 'B',\r\n        XCor: 10.835297724069841,\r\n        YCor: 106.66463990032798,\r\n    },\r\n    {\r\n        name: 'HCMU00001.004/B',\r\n        type: 'B',\r\n        XCor: 10.835541503021876,\r\n        YCor: 106.66460703802875,\r\n    },\r\n    {\r\n        name: 'HCMU00001.005/B',\r\n        type: 'B',\r\n        XCor: 10.834649857323233,\r\n        YCor: 106.66444327116392,\r\n    },\r\n    {\r\n        name: 'HCMU00001.006/B',\r\n        type: 'B',\r\n        XCor: 10.835220862190862,\r\n        YCor: 106.66469871997833,\r\n    },\r\n    {\r\n        name: 'HCMU00001.007/B',\r\n        type: 'B',\r\n        XCor: 10.835387426132323,\r\n        YCor: 106.66472239355994,\r\n    },\r\n    {\r\n        name: 'HCMU00001.008/B',\r\n        type: 'B',\r\n        XCor: 10.835227162349868,\r\n        YCor: 106.66520234416294,\r\n    },\r\n    {\r\n        name: 'HCMU00001.009/B',\r\n        type: 'B',\r\n        XCor: 10.83503154008743,\r\n        YCor: 106.66577846073051,\r\n    },\r\n    {\r\n        name: 'HCMU00001.010/B',\r\n        type: 'B',\r\n        XCor: 10.834861687753373,\r\n        YCor: 106.66624619113702,\r\n    },\r\n];\r\nconst demo = [\r\n    {\r\n        type: 'G',\r\n        Coordinate: [\r\n            {\r\n                lat: 10.835297724069841,\r\n                lng: 106.66463990032798,\r\n            },\r\n            {\r\n                lat: 10.835545322571848,\r\n                lng: 106.66461049846839,\r\n            },\r\n            {\r\n                lat: 10.834536182154537,\r\n                lng: 106.66715281147242,\r\n            },\r\n            {\r\n                lat: 10.834450773789985,\r\n                lng: 106.66744819920406,\r\n            },\r\n            {\r\n                lat: 10.834445834295492,\r\n                lng: 106.66745289306984,\r\n            },\r\n            {\r\n                lat: 10.834333731292695,\r\n                lng: 106.66774305027218,\r\n            },\r\n            {\r\n                lat: 10.834333731292695,\r\n                lng: 106.66774975579472,\r\n            },\r\n            {\r\n                lat: 10.83415985578238,\r\n                lng: 106.66818651203198,\r\n            },\r\n            {\r\n                lat: 10.834158538582578,\r\n                lng: 106.66819221172614,\r\n            },\r\n            {\r\n                lat: 10.83397748307103,\r\n                lng: 106.66865979179431,\r\n            },\r\n            {\r\n                lat: 10.833978141671338,\r\n                lng: 106.66866649731685,\r\n            },\r\n            {\r\n                lat: 10.833785540843877,\r\n                lng: 106.66919662831116,\r\n            },\r\n            {\r\n                lat: 10.833785211543518,\r\n                lng: 106.66920333383369,\r\n            },\r\n            {\r\n                lat: 10.833691025821093,\r\n                lng: 106.66948119125242,\r\n            },\r\n            {\r\n                lat: 10.833687633775543,\r\n                lng: 106.66948828011155,\r\n            },\r\n            {\r\n                lat: 10.833438320977871,\r\n                lng: 106.67018195060302,\r\n            },\r\n            {\r\n                lat: 10.830879288627019,\r\n                lng: 106.6774290170622,\r\n            },\r\n            {\r\n                lat: 10.830873392507488,\r\n                lng: 106.67744951179634,\r\n            },\r\n            {\r\n                lat: 10.830517775856759,\r\n                lng: 106.67770537024649,\r\n            },\r\n        ],\r\n    },\r\n];\r\nlet loader = new Loader({\r\n    apiKey: environment.apiKey,\r\n    version: 'weekly',\r\n});\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    result: any;\r\n    successMarkers: Array<Object> = [];\r\n    coordinate: Array<Object> = [\r\n        {\r\n            lat: Number,\r\n            lng: Number,\r\n        },\r\n    ];\r\n    drawingManager: any;\r\n\r\n    ngOnInit(): void {\r\n        this.demo();\r\n        this.readFile('assets/GaniVo_SG.csv');\r\n    }\r\n\r\n    readFile = (fileURL: any = 'assets/Demo.csv') => {\r\n        this.http.get(fileURL, { responseType: 'text' }).subscribe(\r\n            (data: any) => {\r\n                this.result = data.split('\\n');\r\n\r\n                this.result.map((item: any, index: number) => {\r\n                    const lat = item.split(',')[2].replace('\"', ' ');\r\n                    console.log(lat);\r\n\r\n                    this.coordinate.push({\r\n                        lat: item.split(',')[2],\r\n                        lng: item.split(',')[3],\r\n                    });\r\n\r\n                    const marker = new google.maps.Marker({\r\n                        position: {\r\n                            lat: Number(item.split(',')[2]),\r\n                            lng: Number(item.split(',')[3]),\r\n                        },\r\n                        map,\r\n                        title: `Item index ${index}`,\r\n                    });\r\n\r\n                    return marker;\r\n                });\r\n            },\r\n            (error: any) => console.log(error.error)\r\n        );\r\n    };\r\n\r\n    handleWaterCheckBox = (event: any) => {\r\n        if (event.target.checked) {\r\n            isOpenDetectWater = true;\r\n        } else {\r\n            isOpenDetectWater = false;\r\n        }\r\n    };\r\n\r\n    demo() {\r\n        loader.load().then(async () => {\r\n            //* initial map element\r\n            const { Map } = (await google.maps.importLibrary(\r\n                'maps'\r\n            )) as google.maps.MapsLibrary;\r\n            map = new Map(document.getElementById('map') as HTMLElement, {\r\n                center: VietNamCor,\r\n                zoom: 8,\r\n            });\r\n\r\n            // Ganivo.forEach((item, index) => {\r\n            //     const marker = new google.maps.Marker({\r\n            //         position: { lat: item.XCor, lng: item.YCor },\r\n            //         icon: 'https://img.icons8.com/color/24/marker--v1.png',\r\n            //         map,\r\n            //         title: item.name,\r\n            //     });\r\n\r\n            //     marker.addListener('rightclick', (event: any) => {\r\n            //         if (currentInfoWindow) {\r\n            //             currentInfoWindow.close();\r\n            //         }\r\n            //         const infowindow = new google.maps.InfoWindow({\r\n            //             content:\r\n            //                 '<div><input type=\"checkbox\" id=\"ICON1\">🤞</div>' +\r\n            //                 '<div><input type=\"checkbox\" id=\"ICON2\">👌</div>',\r\n            //         });\r\n\r\n            //         infowindow.setPosition(event.latLng);\r\n            //         infowindow.open(map);\r\n            //         currentInfoWindow = infowindow;\r\n\r\n            //         infowindow.addListener('domready', () => {\r\n            //             const firstIconCheckbox =\r\n            //                 document.getElementById('ICON1');\r\n            //             const secondIconCheckbox =\r\n            //                 document.getElementById('ICON2');\r\n\r\n            //             firstIconCheckbox?.addEventListener('change', () => {\r\n            //                 marker.setIcon('🤞');\r\n            //                 infowindow.close();\r\n            //             });\r\n\r\n            //             secondIconCheckbox?.addEventListener('change', () => {\r\n            //                 marker.setIcon('👌');\r\n            //                 infowindow.close();\r\n            //             });\r\n            //         });\r\n            //     });\r\n\r\n            //     ganivos.push(marker);\r\n            // });\r\n\r\n            // TilePipe.forEach((item, index) => {\r\n            //     const marker = new google.maps.Marker({\r\n            //         position: { lat: item.XCor, lng: item.YCor },\r\n            //         icon: 'https://img.icons8.com/color/24/region-code.png',\r\n            //         map,\r\n            //         title: item.name,\r\n            //     });\r\n\r\n            //     marker.addListener('rightclick', (event: any) => {\r\n            //         if (currentInfoWindow) {\r\n            //             currentInfoWindow.close();\r\n            //         }\r\n            //         const infowindow = new google.maps.InfoWindow({\r\n            //             content:\r\n            //                 '<div><input type=\"checkbox\" id=\"ICON1\">🤞</div>' +\r\n            //                 '<div><input type=\"checkbox\" id=\"ICON2\">👌</div>',\r\n            //         });\r\n\r\n            //         infowindow.setPosition(event.latLng);\r\n            //         infowindow.open(map);\r\n            //         currentInfoWindow = infowindow;\r\n\r\n            //         infowindow.addListener('domready', () => {\r\n            //             const firstIconCheckbox =\r\n            //                 document.getElementById('ICON1');\r\n            //             const secondIconCheckbox =\r\n            //                 document.getElementById('ICON2');\r\n\r\n            //             firstIconCheckbox?.addEventListener('change', () => {\r\n            //                 marker.setIcon('🤞');\r\n            //                 infowindow.close();\r\n            //             });\r\n\r\n            //             secondIconCheckbox?.addEventListener('change', () => {\r\n            //                 marker.setIcon('👌');\r\n            //                 infowindow.close();\r\n            //             });\r\n            //         });\r\n            //     });\r\n\r\n            //     TilePines.push(marker);\r\n            // });\r\n\r\n            // Tank.forEach((item, index) => {\r\n            //     const marker = new google.maps.Marker({\r\n            //         position: { lat: item.XCor, lng: item.YCor },\r\n            //         icon: 'https://img.icons8.com/color/24/google-maps-new.png',\r\n            //         map,\r\n            //         title: item.name,\r\n            //     });\r\n\r\n            //     marker.addListener('rightclick', (event: any) => {\r\n            //         if (currentInfoWindow) {\r\n            //             currentInfoWindow.close();\r\n            //         }\r\n            //         const infowindow = new google.maps.InfoWindow({\r\n            //             content:\r\n            //                 '<div><input type=\"checkbox\" id=\"ICON1\">🤞</div>' +\r\n            //                 '<div><input type=\"checkbox\" id=\"ICON2\">👌</div>',\r\n            //         });\r\n\r\n            //         infowindow.setPosition(event.latLng);\r\n            //         infowindow.open(map);\r\n            //         currentInfoWindow = infowindow;\r\n\r\n            //         infowindow.addListener('domready', () => {\r\n            //             const firstIconCheckbox =\r\n            //                 document.getElementById('ICON1');\r\n            //             const secondIconCheckbox =\r\n            //                 document.getElementById('ICON2');\r\n\r\n            //             firstIconCheckbox?.addEventListener('change', () => {\r\n            //                 marker.setIcon('🤞');\r\n            //                 infowindow.close();\r\n            //             });\r\n\r\n            //             secondIconCheckbox?.addEventListener('change', () => {\r\n            //                 marker.setIcon('👌');\r\n            //                 infowindow.close();\r\n            //             });\r\n            //         });\r\n            //     });\r\n\r\n            //     tanks.push(marker);\r\n            // });\r\n\r\n            //! Draw Polyline\r\n            demo.forEach((item) => {\r\n                if (item.type === 'D') {\r\n                    const polylines: any = [];\r\n                    item.Coordinate.forEach((cor) => {\r\n                        polylines.push(cor);\r\n                    });\r\n\r\n                    const polyline = new google.maps.Polyline({\r\n                        path: polylines,\r\n                        geodesic: true,\r\n                        strokeColor: '#FF0000',\r\n                        strokeOpacity: 1.0,\r\n                        strokeWeight: 2,\r\n                    });\r\n\r\n                    polyline.setMap(map);\r\n                }\r\n            });\r\n\r\n            this.drawingManager = new google.maps.drawing.DrawingManager({\r\n                drawingMode: null,\r\n                drawingControl: false,\r\n                circleOptions: {\r\n                    fillColor: '#ffff00',\r\n                    fillOpacity: 1,\r\n                    strokeWeight: 5,\r\n                    clickable: false,\r\n                    editable: true,\r\n                    zIndex: 1,\r\n                },\r\n            });\r\n            this.drawingManager.setMap(map);\r\n        });\r\n    }\r\n\r\n    handleDrawHandClick = () => {\r\n        this.drawingManager.setDrawingMode(null);\r\n    };\r\n\r\n    handleDrawMarkerClick = () => {\r\n        async function detectWater(lat?: number, lng?: number) {\r\n            try {\r\n                const url = `https://isitwater-com.p.rapidapi.com/?latitude=${lat}&longitude=${lng}`;\r\n                const options = {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'X-RapidAPI-Key':\r\n                            '911f81d9e3msh5f705b8931d758cp13855bjsn19b3ba12960e',\r\n                        'X-RapidAPI-Host': 'isitwater-com.p.rapidapi.com',\r\n                    },\r\n                };\r\n                const response = await fetch(url, options);\r\n                const result = await response.json();\r\n                if (result.water) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            } catch (error) {\r\n                console.error(error);\r\n                return undefined;\r\n            }\r\n        }\r\n\r\n        this.drawingManager.setDrawingMode(\r\n            google.maps.drawing.OverlayType.MARKER\r\n        );\r\n\r\n        google.maps.event.addListener(\r\n            this.drawingManager,\r\n            'markercomplete',\r\n            async function (marker: any) {\r\n                marker.setIcon(\r\n                    'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\r\n                );\r\n\r\n                const lat = marker.getPosition()?.lat();\r\n                const lng = marker.getPosition()?.lng();\r\n\r\n                //Toggle check water functionality\r\n                if (isOpenDetectWater) {\r\n                    const isWater = await detectWater(lat, lng);\r\n\r\n                    if (isWater) {\r\n                        alert('You are placing marker on water');\r\n                        return marker.setMap(null);\r\n                    }\r\n                }\r\n\r\n                markers.push(marker);\r\n\r\n                if (circles.length > 0) {\r\n                    circles.forEach((item) => {\r\n                        const circleCenter = item.getCenter();\r\n                        const circleRadius = item.getRadius();\r\n                        const markerPosition = marker.getPosition();\r\n\r\n                        if (markerPosition && circleCenter) {\r\n                            if (\r\n                                google.maps.geometry.spherical.computeDistanceBetween(\r\n                                    circleCenter,\r\n                                    markerPosition\r\n                                ) <= circleRadius\r\n                            ) {\r\n                                marker.setIcon(\r\n                                    'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\r\n                                );\r\n                            } else {\r\n                                marker.setIcon(\r\n                                    'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                if (rectangles.length > 0) {\r\n                    const markerPosition = marker.getPosition();\r\n                    rectangles.forEach((item) => {\r\n                        const rectangleBound = item.getBounds();\r\n                        if (\r\n                            markerPosition &&\r\n                            rectangleBound?.contains(markerPosition)\r\n                        ) {\r\n                            marker.setIcon(\r\n                                'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\r\n                            );\r\n                        } else {\r\n                            marker.setIcon(\r\n                                'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\r\n                            );\r\n                        }\r\n                    });\r\n                }\r\n\r\n                marker.addListener('rightclick', () => {\r\n                    if (currentInfoWindow) {\r\n                        currentInfoWindow.close();\r\n                    }\r\n                    const infowindow = new google.maps.InfoWindow({\r\n                        content:\r\n                            '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' +\r\n                            '<div><input type=\"checkbox\" id=\"remove\">Remove</div>',\r\n                    });\r\n\r\n                    infowindow.open(map, marker);\r\n                    currentInfoWindow = infowindow;\r\n\r\n                    infowindow.addListener('domready', () => {\r\n                        const editCheckbox = document.getElementById('edit');\r\n                        const removeCheckbox =\r\n                            document.getElementById('remove');\r\n\r\n                        if (marker.getDraggable()) {\r\n                            editCheckbox?.setAttribute('checked', 'true');\r\n                        } else {\r\n                            editCheckbox?.removeAttribute('checked');\r\n                        }\r\n\r\n                        editCheckbox?.addEventListener('change', () => {\r\n                            if (marker.getDraggable()) {\r\n                                editCheckbox?.removeAttribute('checked');\r\n                                marker.setDraggable(null);\r\n                            } else {\r\n                                editCheckbox.setAttribute('checked', 'true');\r\n                                marker.setDraggable(true);\r\n                            }\r\n                        });\r\n\r\n                        removeCheckbox?.addEventListener('change', () => {\r\n                            marker.setMap(null);\r\n                        });\r\n                    });\r\n                });\r\n\r\n                marker.addListener('dragend', async () => {\r\n                    const lat = marker.getPosition()?.lat();\r\n                    const lng = marker.getPosition()?.lng();\r\n                    const markerPosition = marker.getPosition();\r\n\r\n                    if (isOpenDetectWater) {\r\n                        const isWater = await detectWater(lat, lng);\r\n                        if (isWater) {\r\n                            alert('You are placing marker on water');\r\n                            return marker.setMap(null);\r\n                        }\r\n                    }\r\n\r\n                    circles.forEach((item) => {\r\n                        const circleCenter = item.getCenter();\r\n                        const circleRadius = item.getRadius();\r\n\r\n                        if (markerPosition && circleCenter) {\r\n                            if (\r\n                                google.maps.geometry.spherical.computeDistanceBetween(\r\n                                    circleCenter,\r\n                                    markerPosition\r\n                                ) <= circleRadius\r\n                            ) {\r\n                                marker.setIcon(\r\n                                    'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\r\n                                );\r\n                            } else {\r\n                                marker.setIcon(\r\n                                    'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    rectangles.forEach((item) => {\r\n                        const rectangleBound = item.getBounds();\r\n                        if (\r\n                            markerPosition &&\r\n                            rectangleBound?.contains(markerPosition)\r\n                        ) {\r\n                            marker.setIcon(\r\n                                'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\r\n                            );\r\n                        } else {\r\n                            marker.setIcon(\r\n                                'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\r\n                            );\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleDrawCircleClick = () => {\r\n        this.drawingManager.setDrawingMode(\r\n            google.maps.drawing.OverlayType.CIRCLE\r\n        );\r\n\r\n        google.maps.event.addListener(\r\n            this.drawingManager,\r\n            'circlecomplete',\r\n            function (circle: any) {\r\n                circles.push(circle);\r\n\r\n                circle.addListener('bounds_changed', () => {\r\n                    const circleCenter = circle.getCenter();\r\n                    const circleRadius = circle.getRadius();\r\n\r\n                    markers.forEach((item) => {\r\n                        const markerPosition = item.getPosition();\r\n\r\n                        if (markerPosition && circleCenter) {\r\n                            if (\r\n                                google.maps.geometry.spherical.computeDistanceBetween(\r\n                                    circleCenter,\r\n                                    markerPosition\r\n                                ) <= circleRadius\r\n                            ) {\r\n                                item.setIcon(\r\n                                    'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\r\n                                );\r\n                            } else {\r\n                                item.setIcon(\r\n                                    'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\r\n                                );\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleClearCircleClick = () => {\r\n        circles.forEach((circle) => {\r\n            circle.setMap(null);\r\n        });\r\n\r\n        circles.length = 0;\r\n    };\r\n\r\n    handleDrawShapeClick = () => {\r\n        this.drawingManager.setDrawingMode(\r\n            google.maps.drawing.OverlayType.POLYGON\r\n        );\r\n\r\n        google.maps.event.addListener(\r\n            this.drawingManager,\r\n            'polygoncomplete',\r\n            function (polygon: any) {\r\n                polygon.addListener('rightclick', function (event: any) {\r\n                    if (currentInfoWindow) {\r\n                        currentInfoWindow.close();\r\n                    }\r\n                    const infowindow = new google.maps.InfoWindow({\r\n                        content:\r\n                            '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' +\r\n                            '<div><input type=\"checkbox\" id=\"remove\">Remove</div>',\r\n                    });\r\n\r\n                    infowindow.setPosition(event.latLng);\r\n                    infowindow.open(map);\r\n                    currentInfoWindow = infowindow;\r\n\r\n                    infowindow.addListener('domready', () => {\r\n                        const editCheckbox = document.getElementById('edit');\r\n                        const removeCheckbox =\r\n                            document.getElementById('remove');\r\n\r\n                        if (polygon.getDraggable()) {\r\n                            editCheckbox?.setAttribute('checked', 'true');\r\n                        } else {\r\n                            editCheckbox?.removeAttribute('checked');\r\n                        }\r\n\r\n                        editCheckbox?.addEventListener('change', () => {\r\n                            if (polygon.getDraggable()) {\r\n                                editCheckbox?.removeAttribute('checked');\r\n                                polygon.setDraggable(null);\r\n                            } else {\r\n                                editCheckbox.setAttribute('checked', 'true');\r\n                                polygon.setDraggable(true);\r\n                            }\r\n                        });\r\n\r\n                        removeCheckbox?.addEventListener('change', () => {\r\n                            polygon.setMap(null);\r\n                            infowindow.close();\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n        );\r\n    };\r\n    handleDrawLineClick = () => {\r\n        this.drawingManager.setDrawingMode(\r\n            google.maps.drawing.OverlayType.POLYLINE\r\n        );\r\n\r\n        google.maps.event.addListener(\r\n            this.drawingManager,\r\n            'polylinecomplete',\r\n            function (line: any) {\r\n                line.addListener('rightclick', function (event: any) {\r\n                    if (currentInfoWindow) {\r\n                        currentInfoWindow.close();\r\n                    }\r\n                    const infowindow = new google.maps.InfoWindow({\r\n                        content:\r\n                            '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' +\r\n                            '<div><input type=\"checkbox\" id=\"remove\">Remove</div>',\r\n                    });\r\n\r\n                    infowindow.setPosition(event.latLng);\r\n                    infowindow.open(map);\r\n                    currentInfoWindow = infowindow;\r\n\r\n                    infowindow.addListener('domready', () => {\r\n                        const editCheckbox = document.getElementById('edit');\r\n                        const removeCheckbox =\r\n                            document.getElementById('remove');\r\n\r\n                        if (line.getDraggable()) {\r\n                            editCheckbox?.setAttribute('checked', 'true');\r\n                        } else {\r\n                            editCheckbox?.removeAttribute('checked');\r\n                        }\r\n\r\n                        editCheckbox?.addEventListener('change', () => {\r\n                            if (line.getDraggable()) {\r\n                                editCheckbox?.removeAttribute('checked');\r\n                                line.setDraggable(null);\r\n                            } else {\r\n                                editCheckbox.setAttribute('checked', 'true');\r\n                                line.setDraggable(true);\r\n                            }\r\n                        });\r\n\r\n                        removeCheckbox?.addEventListener('change', () => {\r\n                            line.setMap(null);\r\n                            infowindow.close();\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleDrawRectangleClick = () => {\r\n        this.drawingManager.setDrawingMode(\r\n            google.maps.drawing.OverlayType.RECTANGLE\r\n        );\r\n\r\n        google.maps.event.addListener(\r\n            this.drawingManager,\r\n            'rectanglecomplete',\r\n            function (rectangle: any) {\r\n                rectangles.push(rectangle);\r\n\r\n                rectangle.addListener('rightclick', function (event: any) {\r\n                    if (currentInfoWindow) {\r\n                        currentInfoWindow.close();\r\n                    }\r\n                    const infowindow = new google.maps.InfoWindow({\r\n                        content:\r\n                            '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' +\r\n                            '<div><input type=\"checkbox\" id=\"remove\">Remove</div>',\r\n                    });\r\n\r\n                    infowindow.setPosition(event.latLng);\r\n                    infowindow.open(map);\r\n                    currentInfoWindow = infowindow;\r\n\r\n                    infowindow.addListener('domready', () => {\r\n                        const editCheckbox = document.getElementById('edit');\r\n                        const removeCheckbox =\r\n                            document.getElementById('remove');\r\n\r\n                        if (rectangle.getDraggable()) {\r\n                            editCheckbox?.setAttribute('checked', 'true');\r\n                        } else {\r\n                            editCheckbox?.removeAttribute('checked');\r\n                        }\r\n\r\n                        editCheckbox?.addEventListener('change', () => {\r\n                            if (rectangle.getDraggable()) {\r\n                                editCheckbox?.removeAttribute('checked');\r\n                                rectangle.setDraggable(null);\r\n                            } else {\r\n                                editCheckbox.setAttribute('checked', 'true');\r\n                                rectangle.setDraggable(true);\r\n                            }\r\n                        });\r\n\r\n                        removeCheckbox?.addEventListener('change', () => {\r\n                            rectangle.setMap(null);\r\n                            infowindow.close();\r\n                        });\r\n                    });\r\n                });\r\n\r\n                rectangle.addListener('dragend', () => {\r\n                    const rectangleBound = rectangle.getBounds();\r\n                    markers.forEach((item) => {\r\n                        const itemPosition = item.getPosition();\r\n                        if (\r\n                            itemPosition &&\r\n                            rectangleBound?.contains(itemPosition)\r\n                        ) {\r\n                            item.setIcon(\r\n                                'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\r\n                            );\r\n                        } else {\r\n                            item.setIcon(\r\n                                'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\r\n                            );\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleChangeGanivoIcon = () => {\r\n        ganivos.forEach((item) => {\r\n            item.setIcon(\r\n                'https://img.icons8.com/external-others-pike-picture/50/external-building-church-christianity-others-pike-picture-3.png'\r\n            );\r\n        });\r\n    };\r\n\r\n    handleChangeTilePineIcon = () => {\r\n        TilePines.forEach((item) => {\r\n            item.setIcon(\r\n                'https://img.icons8.com/external-others-pike-picture/50/external-building-church-christianity-others-pike-picture-3.png'\r\n            );\r\n        });\r\n    };\r\n\r\n    handleChangeTankIcon = () => {\r\n        tanks.forEach((item) => {\r\n            item.setIcon(\r\n                'https://img.icons8.com/external-others-pike-picture/50/external-building-church-christianity-others-pike-picture-3.png'\r\n            );\r\n        });\r\n    };\r\n}\r\n","<div class=\"ms-4 d-flex gap-3\">\r\n    <div class=\"d-flex flex-column gap-3\">\r\n        <div\r\n            class=\"menu-item d-flex align-items-center gap-2 ms-2\"\r\n            (click)=\"handleDrawHandClick()\"\r\n        >\r\n            <span class=\"oval-yellow\"></span>\r\n            <span>Hand</span>\r\n        </div>\r\n        <!--* Shapes Menu  -->\r\n        <div class=\"dropdown d-flex align-items-center\">\r\n            <img\r\n                width=\"20\"\r\n                height=\"20\"\r\n                src=\"https://img.icons8.com/external-flat-andi-nur-abdillah/20/external-Option-survey-(flat)-flat-andi-nur-abdillah.png\"\r\n                alt=\"shapes icon\"\r\n            />\r\n            <a\r\n                class=\"dropdown-toggle text-decoration-none ms-2\"\r\n                data-bs-toggle=\"dropdown\"\r\n                data-bs-auto-close=\"outside\"\r\n                aria-expanded=\"false\"\r\n                role=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n            >\r\n                Shapes\r\n            </a>\r\n\r\n            <ul class=\"dropdown-menu\">\r\n                <div\r\n                    class=\"menu-item d-flex align-items-center gap-2 ms-2\"\r\n                    (click)=\"handleDrawMarkerClick()\"\r\n                >\r\n                    <span class=\"oval\"></span>\r\n                    <span>Markers</span>\r\n                </div>\r\n                <div\r\n                    class=\"menu-item d-flex align-items-center gap-2 ms-2\"\r\n                    (click)=\"handleDrawCircleClick()\"\r\n                >\r\n                    <span class=\"oval-yellow\"></span>\r\n                    <span>Circles</span>\r\n                </div>\r\n                <div\r\n                    class=\"menu-item d-flex align-items-center gap-2 ms-2\"\r\n                    (click)=\"handleDrawShapeClick()\"\r\n                >\r\n                    <span class=\"oval-lime\"></span>\r\n                    <span>Polygon</span>\r\n                </div>\r\n                <div\r\n                    class=\"menu-item d-flex align-items-center gap-2 ms-2\"\r\n                    (click)=\"handleDrawLineClick()\"\r\n                >\r\n                    <span class=\"oval-teal\"></span>\r\n                    <span>Polyline</span>\r\n                </div>\r\n                <div\r\n                    class=\"menu-item d-flex align-items-center gap-2 ms-2\"\r\n                    (click)=\"handleDrawRectangleClick()\"\r\n                >\r\n                    <span class=\"oval-purple\"></span>\r\n                    <span>Rectangle</span>\r\n                </div>\r\n            </ul>\r\n        </div>\r\n\r\n        <div class=\"dropdown d-flex align-items-center\">\r\n            <img\r\n                width=\"20\"\r\n                height=\"20\"\r\n                src=\"https://img.icons8.com/external-flat-andi-nur-abdillah/20/external-Option-survey-(flat)-flat-andi-nur-abdillah.png\"\r\n                alt=\"shapes icon\"\r\n            />\r\n            <a\r\n                class=\"dropdown-toggle text-decoration-none ms-2\"\r\n                data-bs-toggle=\"dropdown\"\r\n                data-bs-auto-close=\"outside\"\r\n                aria-expanded=\"false\"\r\n                role=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n            >\r\n                Icon\r\n            </a>\r\n\r\n            <ul class=\"dropdown-menu\">\r\n                <div\r\n                    class=\"menu-item d-flex align-items-center gap-2 ms-2\"\r\n                    (click)=\"handleChangeGanivoIcon()\"\r\n                >\r\n                    <span class=\"oval\"></span>\r\n                    <span>Ganivo Icons</span>\r\n                </div>\r\n                <div\r\n                    class=\"menu-item d-flex align-items-center gap-2 ms-2\"\r\n                    (click)=\"handleChangeTilePineIcon()\"\r\n                >\r\n                    <span class=\"oval\"></span>\r\n                    <span>TilePine Icons</span>\r\n                </div>\r\n                <div\r\n                    class=\"menu-item d-flex align-items-center gap-2 ms-2\"\r\n                    (click)=\"handleChangeTankIcon()\"\r\n                >\r\n                    <span class=\"oval\"></span>\r\n                    <span>Tank Icons</span>\r\n                </div>\r\n            </ul>\r\n        </div>\r\n\r\n        <!--* Option Menu  -->\r\n        <div class=\"dropdown d-flex align-items-center\">\r\n            <img\r\n                width=\"20\"\r\n                height=\"20\"\r\n                src=\"https://img.icons8.com/external-kmg-design-outline-color-kmg-design/20/external-option-ui-essential-kmg-design-outline-color-kmg-design.png\"\r\n                alt=\"options icon\"\r\n            />\r\n            <a\r\n                class=\"dropdown-toggle text-decoration-none ms-2\"\r\n                data-bs-toggle=\"dropdown\"\r\n                data-bs-auto-close=\"outside\"\r\n                aria-expanded=\"false\"\r\n                role=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n            >\r\n                Options\r\n            </a>\r\n\r\n            <ul class=\"dropdown-menu\">\r\n                <div class=\"d-flex align-items-center gap-2 ms-2\">\r\n                    <div class=\"checkbox-wrapper-3\">\r\n                        <input\r\n                            (change)=\"handleWaterCheckBox($event)\"\r\n                            type=\"checkbox\"\r\n                            id=\"cbx-3\"\r\n                            class=\"waterCheckbox\"\r\n                        />\r\n                        <label for=\"cbx-3\" class=\"toggle\"><span></span></label>\r\n                    </div>\r\n                    <span>Detect Water</span>\r\n                </div>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div id=\"map\"></div>\r\n</div>\r\n"],"mappings":"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OAAO,CACR,wHAAwH,CAC3H;MACL,CAAC,CAAC;IACN,CAAC;EArqBsC;EAYvCoD,QAAQA,CAAA;IACJ,IAAI,CAACjH,IAAI,EAAE;IACX,IAAI,CAACW,QAAQ,CAAC,sBAAsB,CAAC;EACzC;EAwCAX,IAAIA,CAAA;IAAA,IAAAkH,KAAA;IACAhH,MAAM,CAACiH,IAAI,EAAE,CAACC,IAAI,eAAAtE,iBAAA,CAAC,aAAW;MAC1B;MACA,MAAM;QAAEuE;MAAG,CAAE,SAAU3F,MAAM,CAACC,IAAI,CAAC2F,aAAa,CAC5C,MAAM,CACmB;MAC7BzI,GAAG,GAAG,IAAIwI,GAAG,CAAChC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAgB,EAAE;QACzDiC,MAAM,EAAEjI,UAAU;QAClBkI,IAAI,EAAE;OACT,CAAC;MAEF;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MAEA;MACAxH,IAAI,CAACmE,OAAO,CAAEhD,IAAI,IAAI;QAClB,IAAIA,IAAI,CAACxB,IAAI,KAAK,GAAG,EAAE;UACnB,MAAM8H,SAAS,GAAQ,EAAE;UACzBtG,IAAI,CAAClB,UAAU,CAACkE,OAAO,CAAEuD,GAAG,IAAI;YAC5BD,SAAS,CAACjG,IAAI,CAACkG,G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"},"metadata":{},"sourceType":"module","externalDependencies":[]}