{"ast":null,"code":"import _asyncToGenerator from \"/home/Workspace/FPT/AngularDemo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { environment } from 'src/environments/environment.development';\nimport { Component } from '@angular/core';\nimport { Loader } from '@googlemaps/js-api-loader';\nlet map;\nconst VietNamCor = {\n  lat: 15.9031,\n  lng: 105.8067\n};\nconst flightPlanCoordinates = [{\n  lat: 37.772,\n  lng: -122.214\n}, {\n  lat: 21.291,\n  lng: -157.821\n}, {\n  lat: -18.142,\n  lng: 178.431\n}, {\n  lat: -27.467,\n  lng: 153.027\n}];\nconst triangleCoords = [{\n  lat: 23.393396,\n  lng: 102.14682\n}, {\n  lat: 22.719568,\n  lng: 105.776716\n}, {\n  lat: 8.383496,\n  lng: 104.938748\n}, {\n  lat: 8.383496,\n  lng: 102.14682\n}];\nconst VNlocations = [{\n  lat: 21.0278,\n  lng: 105.8342\n}, {\n  lat: 16.0544,\n  lng: 108.2022\n}, {\n  lat: 10.8231,\n  lng: 106.6297\n}, {\n  lat: 12.2388,\n  lng: 109.1967\n}, {\n  lat: 20.8449,\n  lng: 106.6881\n}, {\n  lat: 21.0283,\n  lng: 105.8537\n}, {\n  lat: 10.9656,\n  lng: 108.107\n}, {\n  lat: 21.4049,\n  lng: 103.2055\n}, {\n  lat: 10.0333,\n  lng: 105.7833\n}, {\n  lat: 16.4692,\n  lng: 107.5787\n}, {\n  lat: 13.9833,\n  lng: 108\n}, {\n  lat: 14.0583,\n  lng: 108.2772\n}, {\n  lat: 13.7665,\n  lng: 109.2237\n}, {\n  lat: 11.9325,\n  lng: 109.1967\n}, {\n  lat: 10.3833,\n  lng: 105.4167\n}, {\n  lat: 21.5942,\n  lng: 105.8481\n}, {\n  lat: 20.8172,\n  lng: 106.7244\n}, {\n  lat: 20.9544,\n  lng: 107.0806\n}, {\n  lat: 21.3281,\n  lng: 103.8733\n} // Yen Bai\n];\n\nlet loader = new Loader({\n  apiKey: 'AIzaSyB7HYSRAc7_Tyo5kOt4xtkbjcYmHKTs0no',\n  version: 'weekly'\n});\nlet AppComponent = class AppComponent {\n  constructor() {\n    this.title = environment.title;\n  }\n  ngOnInit() {\n    this.demo();\n  }\n  demo() {\n    loader.load().then( /*#__PURE__*/_asyncToGenerator(function* () {\n      //* initial map element\n      const {\n        Map\n      } = yield google.maps.importLibrary('maps');\n      map = new Map(document.getElementById('map'), {\n        center: VietNamCor,\n        zoom: 8\n      });\n      //* Create marker instance\n      const marker = new google.maps.Marker({\n        position: VietNamCor,\n        map,\n        title: 'Hello World!'\n      });\n      //* Create polyline instance\n      const poly = new google.maps.Polyline({\n        path: flightPlanCoordinates,\n        geodesic: true,\n        strokeColor: '#FF0000',\n        strokeOpacity: 1.0,\n        strokeWeight: 2\n      });\n      //* Create the polygon instance\n      const polygon = new google.maps.Polygon({\n        paths: triangleCoords,\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35\n      });\n      //* create circle instance.\n      const circle = new google.maps.Circle({\n        editable: true,\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n        map,\n        center: {\n          lat: 40.714,\n          lng: -74.005\n        },\n        radius: Math.sqrt(8405837) * 100\n      });\n      map.addListener('click', e => {\n        const lat = e.latLng.lat();\n        const lng = e.latLng.lng();\n        //! check if on water\n        detectWater(lat, lng);\n      });\n      //! Add click event listener to marker instance\n      marker.addListener('click', () => {\n        console.log('click event fired');\n      });\n      poly.setMap(map);\n      polygon.setMap(map);\n      const detectWater = /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (lat, lng) {\n          try {\n            const url = `https://isitwater-com.p.rapidapi.com/?latitude=${lat}&longitude=${lng}`;\n            const options = {\n              method: 'GET',\n              headers: {\n                'X-RapidAPI-Key': '911f81d9e3msh5f705b8931d758cp13855bjsn19b3ba12960e',\n                'X-RapidAPI-Host': 'isitwater-com.p.rapidapi.com'\n              }\n            };\n            const response = yield fetch(url, options);\n            const result = yield response.json();\n            console.log(result);\n            if (result.water) {\n              return alert('You clicked outside the land!');\n            }\n            return alert('You clicked inside the land!');\n          } catch (error) {\n            console.error(error);\n          }\n        });\n        return function detectWater(_x, _x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n    }));\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["environment","Component","Loader","map","VietNamCor","lat","lng","flightPlanCoordinates","triangleCoords","VNlocations","loader","apiKey","version","AppComponent","constructor","title","ngOnInit","demo","load","then","_asyncToGenerator","Map","google","maps","importLibrary","document","getElementById","center","zoom","marker","Marker","position","poly","Polyline","path","geodesic","strokeColor","strokeOpacity","strokeWeight","polygon","Polygon","paths","fillColor","fillOpacity","circle","Circle","editable","radius","Math","sqrt","addListener","e","latLng","detectWater","console","log","setMap","_ref2","url","options","method","headers","response","fetch","result","json","water","alert","error","_x","_x2","apply","arguments","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/Workspace/FPT/AngularDemo/src/app/app.component.ts"],"sourcesContent":["import { environment } from 'src/environments/environment.development';\nimport { Component, OnInit } from '@angular/core';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport * as _ from 'lodash';\nlet map: google.maps.Map;\nconst VietNamCor = { lat: 15.9031, lng: 105.8067 };\nconst flightPlanCoordinates = [\n    { lat: 37.772, lng: -122.214 },\n    { lat: 21.291, lng: -157.821 },\n    { lat: -18.142, lng: 178.431 },\n    { lat: -27.467, lng: 153.027 },\n];\n\nconst triangleCoords = [\n    { lat: 23.393396, lng: 102.14682 },\n    { lat: 22.719568, lng: 105.776716 },\n    { lat: 8.383496, lng: 104.938748 },\n    { lat: 8.383496, lng: 102.14682 },\n];\n\nconst VNlocations = [\n    { lat: 21.0278, lng: 105.8342 }, // Hanoi\n    { lat: 16.0544, lng: 108.2022 }, // Da Nang\n    { lat: 10.8231, lng: 106.6297 }, // Ho Chi Minh City\n    { lat: 12.2388, lng: 109.1967 }, // Nha Trang\n    { lat: 20.8449, lng: 106.6881 }, // Hai Phong\n    { lat: 21.0283, lng: 105.8537 }, // Bac Ninh\n    { lat: 10.9656, lng: 108.107 }, // Vung Tau\n    { lat: 21.4049, lng: 103.2055 }, // Lao Cai\n    { lat: 10.0333, lng: 105.7833 }, // Can Tho\n    { lat: 16.4692, lng: 107.5787 }, // Hue\n    { lat: 13.9833, lng: 108 }, // Quy Nhon\n    { lat: 14.0583, lng: 108.2772 }, // Tuy Hoa\n    { lat: 13.7665, lng: 109.2237 }, // Phan Rang-Thap Cham\n    { lat: 11.9325, lng: 109.1967 }, // Phan Thiet\n    { lat: 10.3833, lng: 105.4167 }, // Rach Gia\n    { lat: 21.5942, lng: 105.8481 }, // Vinh Yen\n    { lat: 20.8172, lng: 106.7244 }, // Ha Long\n    { lat: 20.9544, lng: 107.0806 }, // Thai Nguyen\n    { lat: 21.3281, lng: 103.8733 }, // Yen Bai\n];\n\nlet loader = new Loader({\n    apiKey: 'AIzaSyB7HYSRAc7_Tyo5kOt4xtkbjcYmHKTs0no',\n    version: 'weekly',\n});\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n    title = environment.title;\n\n    ngOnInit(): void {\n        this.demo();\n    }\n\n    demo() {\n        loader.load().then(async () => {\n            //* initial map element\n            const { Map } = (await google.maps.importLibrary(\n                'maps'\n            )) as google.maps.MapsLibrary;\n            map = new Map(document.getElementById('map') as HTMLElement, {\n                center: VietNamCor,\n                zoom: 8,\n            });\n\n            //* Create marker instance\n            const marker = new google.maps.Marker({\n                position: VietNamCor,\n                map,\n                title: 'Hello World!',\n            });\n\n            //* Create polyline instance\n            const poly = new google.maps.Polyline({\n                path: flightPlanCoordinates,\n                geodesic: true,\n                strokeColor: '#FF0000',\n                strokeOpacity: 1.0,\n                strokeWeight: 2,\n            });\n\n            //* Create the polygon instance\n            const polygon = new google.maps.Polygon({\n                paths: triangleCoords,\n                strokeColor: '#FF0000',\n                strokeOpacity: 0.8,\n                strokeWeight: 2,\n                fillColor: '#FF0000',\n                fillOpacity: 0.35,\n            });\n\n            //* create circle instance.\n            const circle = new google.maps.Circle({\n                editable: true,\n                strokeColor: '#FF0000',\n                strokeOpacity: 0.8,\n                strokeWeight: 2,\n                fillColor: '#FF0000',\n                fillOpacity: 0.35,\n                map,\n                center: { lat: 40.714, lng: -74.005 },\n                radius: Math.sqrt(8405837) * 100,\n            });\n\n            map.addListener('click', (e: any) => {\n                const lat = e.latLng.lat();\n                const lng = e.latLng.lng();\n\n                //! check if on water\n                detectWater(lat, lng);\n            });\n\n            //! Add click event listener to marker instance\n            marker.addListener('click', () => {\n                console.log('click event fired');\n            });\n\n            poly.setMap(map);\n            polygon.setMap(map);\n\n            const detectWater = async (lat: number, lng: number) => {\n                try {\n                    const url = `https://isitwater-com.p.rapidapi.com/?latitude=${lat}&longitude=${lng}`;\n                    const options = {\n                        method: 'GET',\n                        headers: {\n                            'X-RapidAPI-Key':\n                                '911f81d9e3msh5f705b8931d758cp13855bjsn19b3ba12960e',\n                            'X-RapidAPI-Host': 'isitwater-com.p.rapidapi.com',\n                        },\n                    };\n                    const response = await fetch(url, options);\n                    const result = await response.json();\n                    console.log(result);\n                    if (result.water) {\n                        return alert('You clicked outside the land!');\n                    }\n                    return alert('You clicked inside the land!');\n                } catch (error) {\n                    console.error(error);\n                }\n            };\n        });\n    }\n}\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,0CAA0C;AACtE,SAASC,SAAS,QAAgB,eAAe;AACjD,SAASC,MAAM,QAAQ,2BAA2B;AAElD,IAAIC,GAAoB;AACxB,MAAMC,UAAU,GAAG;EAAEC,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE;AAClD,MAAMC,qBAAqB,GAAG,CAC1B;EAAEF,GAAG,EAAE,MAAM;EAAEC,GAAG,EAAE,CAAC;AAAO,CAAE,EAC9B;EAAED,GAAG,EAAE,MAAM;EAAEC,GAAG,EAAE,CAAC;AAAO,CAAE,EAC9B;EAAED,GAAG,EAAE,CAAC,MAAM;EAAEC,GAAG,EAAE;AAAO,CAAE,EAC9B;EAAED,GAAG,EAAE,CAAC,MAAM;EAAEC,GAAG,EAAE;AAAO,CAAE,CACjC;AAED,MAAME,cAAc,GAAG,CACnB;EAAEH,GAAG,EAAE,SAAS;EAAEC,GAAG,EAAE;AAAS,CAAE,EAClC;EAAED,GAAG,EAAE,SAAS;EAAEC,GAAG,EAAE;AAAU,CAAE,EACnC;EAAED,GAAG,EAAE,QAAQ;EAAEC,GAAG,EAAE;AAAU,CAAE,EAClC;EAAED,GAAG,EAAE,QAAQ;EAAEC,GAAG,EAAE;AAAS,CAAE,CACpC;AAED,MAAMG,WAAW,GAAG,CAChB;EAAEJ,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAO,CAAE,EAC9B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAG,CAAE,EAC1B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,CAAE;AAAA,CACpC;;AAED,IAAII,MAAM,GAAG,IAAIR,MAAM,CAAC;EACpBS,MAAM,EAAE,yCAAyC;EACjDC,OAAO,EAAE;CACZ,CAAC;AAMF,IAAaC,YAAY,GAAzB,MAAaA,YAAY;EAAzBC,YAAA;IACI,KAAAC,KAAK,GAAGf,WAAW,CAACe,KAAK;EAgG7B;EA9FIC,QAAQA,CAAA;IACJ,IAAI,CAACC,IAAI,EAAE;EACf;EAEAA,IAAIA,CAAA;IACAP,MAAM,CAACQ,IAAI,EAAE,CAACC,IAAI,eAAAC,iBAAA,CAAC,aAAW;MAC1B;MACA,MAAM;QAAEC;MAAG,CAAE,SAAUC,MAAM,CAACC,IAAI,CAACC,aAAa,CAC5C,MAAM,CACmB;MAC7BrB,GAAG,GAAG,IAAIkB,GAAG,CAACI,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAgB,EAAE;QACzDC,MAAM,EAAEvB,UAAU;QAClBwB,IAAI,EAAE;OACT,CAAC;MAEF;MACA,MAAMC,MAAM,GAAG,IAAIP,MAAM,CAACC,IAAI,CAACO,MAAM,CAAC;QAClCC,QAAQ,EAAE3B,UAAU;QACpBD,GAAG;QACHY,KAAK,EAAE;OACV,CAAC;MAEF;MACA,MAAMiB,IAAI,GAAG,IAAIV,MAAM,CAACC,IAAI,CAACU,QAAQ,CAAC;QAClCC,IAAI,EAAE3B,qBAAqB;QAC3B4B,QAAQ,EAAE,IAAI;QACdC,WAAW,EAAE,SAAS;QACtBC,aAAa,EAAE,GAAG;QAClBC,YAAY,EAAE;OACjB,CAAC;MAEF;MACA,MAAMC,OAAO,GAAG,IAAIjB,MAAM,CAACC,IAAI,CAACiB,OAAO,CAAC;QACpCC,KAAK,EAAEjC,cAAc;QACrB4B,WAAW,EAAE,SAAS;QACtBC,aAAa,EAAE,GAAG;QAClBC,YAAY,EAAE,CAAC;QACfI,SAAS,EAAE,SAAS;QACpBC,WAAW,EAAE;OAChB,CAAC;MAEF;MACA,MAAMC,MAAM,GAAG,IAAItB,MAAM,CAACC,IAAI,CAACsB,MAAM,CAAC;QAClCC,QAAQ,EAAE,IAAI;QACdV,WAAW,EAAE,SAAS;QACtBC,aAAa,EAAE,GAAG;QAClBC,YAAY,EAAE,CAAC;QACfI,SAAS,EAAE,SAAS;QACpBC,WAAW,EAAE,IAAI;QACjBxC,GAAG;QACHwB,MAAM,EAAE;UAAEtB,GAAG,EAAE,MAAM;UAAEC,GAAG,EAAE,CAAC;QAAM,CAAE;QACrCyC,MAAM,EAAEC,IAAI,CAACC,IAAI,CAAC,OAAO,CAAC,GAAG;OAChC,CAAC;MAEF9C,GAAG,CAAC+C,WAAW,CAAC,OAAO,EAAGC,CAAM,IAAI;QAChC,MAAM9C,GAAG,GAAG8C,CAAC,CAACC,MAAM,CAAC/C,GAAG,EAAE;QAC1B,MAAMC,GAAG,GAAG6C,CAAC,CAACC,MAAM,CAAC9C,GAAG,EAAE;QAE1B;QACA+C,WAAW,CAAChD,GAAG,EAAEC,GAAG,CAAC;MACzB,CAAC,CAAC;MAEF;MACAuB,MAAM,CAACqB,WAAW,CAAC,OAAO,EAAE,MAAK;QAC7BI,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MACpC,CAAC,CAAC;MAEFvB,IAAI,CAACwB,MAAM,CAACrD,GAAG,CAAC;MAChBoC,OAAO,CAACiB,MAAM,CAACrD,GAAG,CAAC;MAEnB,MAAMkD,WAAW;QAAA,IAAAI,KAAA,GAAArC,iBAAA,CAAG,WAAOf,GAAW,EAAEC,GAAW,EAAI;UACnD,IAAI;YACA,MAAMoD,GAAG,GAAG,kDAAkDrD,GAAG,cAAcC,GAAG,EAAE;YACpF,MAAMqD,OAAO,GAAG;cACZC,MAAM,EAAE,KAAK;cACbC,OAAO,EAAE;gBACL,gBAAgB,EACZ,oDAAoD;gBACxD,iBAAiB,EAAE;;aAE1B;YACD,MAAMC,QAAQ,SAASC,KAAK,CAACL,GAAG,EAAEC,OAAO,CAAC;YAC1C,MAAMK,MAAM,SAASF,QAAQ,CAACG,IAAI,EAAE;YACpCX,OAAO,CAACC,GAAG,CAACS,MAAM,CAAC;YACnB,IAAIA,MAAM,CAACE,KAAK,EAAE;cACd,OAAOC,KAAK,CAAC,+BAA+B,CAAC;;YAEjD,OAAOA,KAAK,CAAC,8BAA8B,CAAC;WAC/C,CAAC,OAAOC,KAAK,EAAE;YACZd,OAAO,CAACc,KAAK,CAACA,KAAK,CAAC;;QAE5B,CAAC;QAAA,gBArBKf,WAAWA,CAAAgB,EAAA,EAAAC,GAAA;UAAA,OAAAb,KAAA,CAAAc,KAAA,OAAAC,SAAA;QAAA;MAAA,GAqBhB;IACL,CAAC,EAAC;EACN;CACH;AAjGY3D,YAAY,GAAA4D,UAAA,EALxBxE,SAAS,CAAC;EACPyE,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CACpC,CAAC,C,EACW/D,YAAY,CAiGxB;SAjGYA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}