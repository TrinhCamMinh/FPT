{"ast":null,"code":"import _asyncToGenerator from \"/home/Workspace/FPT/AngularDemo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from 'src/environments/environment.development';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nlet map;\nconst VietNamCor = {\n  lat: 15.9031,\n  lng: 105.8067\n};\nconst flightPlanCoordinates = [{\n  lat: 37.772,\n  lng: -122.214\n}, {\n  lat: 21.291,\n  lng: -157.821\n}, {\n  lat: -18.142,\n  lng: 178.431\n}, {\n  lat: -27.467,\n  lng: 153.027\n}];\nconst triangleCoords = [{\n  lat: 23.393396,\n  lng: 102.14682\n}, {\n  lat: 22.719568,\n  lng: 105.776716\n}, {\n  lat: 8.383496,\n  lng: 104.938748\n}, {\n  lat: 8.383496,\n  lng: 102.14682\n}];\nconst VNlocations = [{\n  lat: 21.0278,\n  lng: 105.8342\n}, {\n  lat: 16.0544,\n  lng: 108.2022\n}, {\n  lat: 10.8231,\n  lng: 106.6297\n}, {\n  lat: 12.2388,\n  lng: 109.1967\n}, {\n  lat: 20.8449,\n  lng: 106.6881\n}, {\n  lat: 21.0283,\n  lng: 105.8537\n}, {\n  lat: 10.9656,\n  lng: 108.107\n}, {\n  lat: 21.4049,\n  lng: 103.2055\n}, {\n  lat: 10.0333,\n  lng: 105.7833\n}, {\n  lat: 16.4692,\n  lng: 107.5787\n}, {\n  lat: 13.9833,\n  lng: 108\n}, {\n  lat: 14.0583,\n  lng: 108.2772\n}, {\n  lat: 13.7665,\n  lng: 109.2237\n}, {\n  lat: 11.9325,\n  lng: 109.1967\n}, {\n  lat: 10.3833,\n  lng: 105.4167\n}, {\n  lat: 21.5942,\n  lng: 105.8481\n}, {\n  lat: 20.8172,\n  lng: 106.7244\n}, {\n  lat: 20.9544,\n  lng: 107.0806\n}, {\n  lat: 21.3281,\n  lng: 103.8733\n} // Yen Bai\n];\n\nlet loader = new Loader({\n  apiKey: environment.apiKey,\n  version: 'weekly'\n});\nclass AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.result = [];\n  }\n  ngOnInit() {\n    this.readFile();\n  }\n  readFile() {\n    this.http.get('assets/Book1.csv', {\n      responseType: 'text'\n    }).subscribe(data => {\n      console.log(data);\n      console.log();\n    }, error => console.log(error.error));\n  }\n  demo() {\n    loader.load().then( /*#__PURE__*/_asyncToGenerator(function* () {\n      //* initial map element\n      const {\n        Map\n      } = yield google.maps.importLibrary('maps');\n      map = new Map(document.getElementById('map'), {\n        center: VietNamCor,\n        zoom: 8\n      });\n      //* create circle instance.\n      const circle = new google.maps.Circle({\n        editable: true,\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n        map,\n        center: {\n          lat: 16.463713,\n          lng: 107.590866\n        },\n        radius: Math.sqrt(2) * 100000\n      });\n      //* Create the polygon instance\n      const polygon = new google.maps.Polygon({\n        paths: triangleCoords,\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35\n      });\n      //* Create marker instance\n      const markers = VNlocations.map((item, index) => {\n        const marker = new google.maps.Marker({\n          position: item,\n          map,\n          title: `Item index ${index}`\n        });\n        const demo1 = circle.getCenter();\n        const demo2 = marker.getPosition();\n        if (demo2 && demo1) {\n          if (google.maps.geometry.spherical.computeDistanceBetween(demo1, demo2) <= circle.getRadius()) {\n            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n          } else {\n            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n          }\n        } else {\n          console.log(`Error before`);\n        }\n      });\n      //* Create polyline instance\n      const poly = new google.maps.Polyline({\n        path: flightPlanCoordinates,\n        geodesic: true,\n        strokeColor: '#FF0000',\n        strokeOpacity: 1.0,\n        strokeWeight: 2\n      });\n      //! Add click event listener to map instance\n      // map.addListener('click', (e: any) => {\n      //     const lat = e.latLng.lat();\n      //     const lng = e.latLng.lng();\n      //     //! check if on water\n      //     detectWater(lat, lng);\n      // });\n      //! Add click event listener to marker instance\n      // marker.addListener('click', () => {\n      //     console.log('click event fired');\n      // });\n      poly.setMap(map);\n      polygon.setMap(map);\n      // const detectWater = async (lat: number, lng: number) => {\n      //     try {\n      //         const url = `https://isitwater-com.p.rapidapi.com/?latitude=${lat}&longitude=${lng}`;\n      //         const options = {\n      //             method: 'GET',\n      //             headers: {\n      //                 'X-RapidAPI-Key':\n      //                     '911f81d9e3msh5f705b8931d758cp13855bjsn19b3ba12960e',\n      //                 'X-RapidAPI-Host': 'isitwater-com.p.rapidapi.com',\n      //             },\n      //         };\n      //         const response = await fetch(url, options);\n      //         const result = await response.json();\n      //         console.log(result);\n      //         if (result.water) {\n      //             return alert('You clicked outside the land!');\n      //         }\n      //         return alert('You clicked inside the land!');\n      //     } catch (error) {\n      //         console.error(error);\n      //     }\n      // };\n    }));\n  }\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 1,\n  vars: 0,\n  consts: [[\"id\", \"map\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n  },\n  styles: [\"#map[_ngcontent-%COMP%] {\\r\\n    height: 100dvh;\\r\\n    width: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsV0FBVztBQUNmIiwic291cmNlc0NvbnRlbnQiOlsiI21hcCB7XHJcbiAgICBoZWlnaHQ6IDEwMGR2aDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AppComponent };","map":{"version":3,"names":["environment","Loader","map","VietNamCor","lat","lng","flightPlanCoordinates","triangleCoords","VNlocations","loader","apiKey","version","AppComponent","constructor","http","result","ngOnInit","readFile","get","responseType","subscribe","data","console","log","error","demo","load","then","_asyncToGenerator","Map","google","maps","importLibrary","document","getElementById","center","zoom","circle","Circle","editable","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","radius","Math","sqrt","polygon","Polygon","paths","markers","item","index","marker","Marker","position","title","demo1","getCenter","demo2","getPosition","geometry","spherical","computeDistanceBetween","getRadius","setIcon","poly","Polyline","path","geodesic","setMap","i0","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement"],"sources":["/home/Workspace/FPT/AngularDemo/src/app/app.component.ts","/home/Workspace/FPT/AngularDemo/src/app/app.component.html"],"sourcesContent":["import { environment } from 'src/environments/environment.development';\nimport { Component, OnInit } from '@angular/core';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport * as _ from 'lodash';\nimport { HttpClient } from '@angular/common/http';\n\nlet map: google.maps.Map;\nconst VietNamCor = { lat: 15.9031, lng: 105.8067 };\nconst flightPlanCoordinates = [\n    { lat: 37.772, lng: -122.214 },\n    { lat: 21.291, lng: -157.821 },\n    { lat: -18.142, lng: 178.431 },\n    { lat: -27.467, lng: 153.027 },\n];\n\nconst triangleCoords = [\n    { lat: 23.393396, lng: 102.14682 },\n    { lat: 22.719568, lng: 105.776716 },\n    { lat: 8.383496, lng: 104.938748 },\n    { lat: 8.383496, lng: 102.14682 },\n];\n\nconst VNlocations = [\n    { lat: 21.0278, lng: 105.8342 }, // Hanoi\n    { lat: 16.0544, lng: 108.2022 }, // Da Nang\n    { lat: 10.8231, lng: 106.6297 }, // Ho Chi Minh City\n    { lat: 12.2388, lng: 109.1967 }, // Nha Trang\n    { lat: 20.8449, lng: 106.6881 }, // Hai Phong\n    { lat: 21.0283, lng: 105.8537 }, // Bac Ninh\n    { lat: 10.9656, lng: 108.107 }, // Vung Tau\n    { lat: 21.4049, lng: 103.2055 }, // Lao Cai\n    { lat: 10.0333, lng: 105.7833 }, // Can Tho\n    { lat: 16.4692, lng: 107.5787 }, // Hue\n    { lat: 13.9833, lng: 108 }, // Quy Nhon\n    { lat: 14.0583, lng: 108.2772 }, // Tuy Hoa\n    { lat: 13.7665, lng: 109.2237 }, // Phan Rang-Thap Cham\n    { lat: 11.9325, lng: 109.1967 }, // Phan Thiet\n    { lat: 10.3833, lng: 105.4167 }, // Rach Gia\n    { lat: 21.5942, lng: 105.8481 }, // Vinh Yen\n    { lat: 20.8172, lng: 106.7244 }, // Ha Long\n    { lat: 20.9544, lng: 107.0806 }, // Thai Nguyen\n    { lat: 21.3281, lng: 103.8733 }, // Yen Bai\n];\n\nlet loader = new Loader({\n    apiKey: environment.apiKey,\n    version: 'weekly',\n});\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n    constructor(private http: HttpClient) {}\n\n    result: string[] = [];\n\n    ngOnInit(): void {\n        this.readFile();\n    }\n\n    readFile() {\n        this.http.get('assets/Book1.csv', { responseType: 'text' }).subscribe(\n            (data: any) => {\n                console.log(data);\n                console.log();\n            },\n            (error: any) => console.log(error.error)\n        );\n    }\n\n    demo() {\n        loader.load().then(async () => {\n            //* initial map element\n            const { Map } = (await google.maps.importLibrary(\n                'maps'\n            )) as google.maps.MapsLibrary;\n            map = new Map(document.getElementById('map') as HTMLElement, {\n                center: VietNamCor,\n                zoom: 8,\n            });\n\n            //* create circle instance.\n            const circle = new google.maps.Circle({\n                editable: true,\n                strokeColor: '#FF0000',\n                strokeOpacity: 0.8,\n                strokeWeight: 2,\n                fillColor: '#FF0000',\n                fillOpacity: 0.35,\n                map,\n                center: { lat: 16.463713, lng: 107.590866 },\n                radius: Math.sqrt(2) * 100000,\n            });\n\n            //* Create the polygon instance\n            const polygon = new google.maps.Polygon({\n                paths: triangleCoords,\n                strokeColor: '#FF0000',\n                strokeOpacity: 0.8,\n                strokeWeight: 2,\n                fillColor: '#FF0000',\n                fillOpacity: 0.35,\n            });\n\n            //* Create marker instance\n            const markers = VNlocations.map(\n                (item: { lat: number; lng: number }, index: number) => {\n                    const marker = new google.maps.Marker({\n                        position: item,\n                        map,\n                        title: `Item index ${index}`,\n                    });\n                    const demo1 = circle.getCenter();\n                    const demo2 = marker.getPosition();\n\n                    if (demo2 && demo1) {\n                        if (\n                            google.maps.geometry.spherical.computeDistanceBetween(\n                                demo1,\n                                demo2\n                            ) <= circle.getRadius()\n                        ) {\n                            marker.setIcon(\n                                'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\n                            );\n                        } else {\n                            marker.setIcon(\n                                'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\n                            );\n                        }\n                    } else {\n                        console.log(`Error before`);\n                    }\n                }\n            );\n\n            //* Create polyline instance\n            const poly = new google.maps.Polyline({\n                path: flightPlanCoordinates,\n                geodesic: true,\n                strokeColor: '#FF0000',\n                strokeOpacity: 1.0,\n                strokeWeight: 2,\n            });\n\n            //! Add click event listener to map instance\n            // map.addListener('click', (e: any) => {\n            //     const lat = e.latLng.lat();\n            //     const lng = e.latLng.lng();\n\n            //     //! check if on water\n            //     detectWater(lat, lng);\n            // });\n\n            //! Add click event listener to marker instance\n            // marker.addListener('click', () => {\n            //     console.log('click event fired');\n            // });\n\n            poly.setMap(map);\n            polygon.setMap(map);\n\n            // const detectWater = async (lat: number, lng: number) => {\n            //     try {\n            //         const url = `https://isitwater-com.p.rapidapi.com/?latitude=${lat}&longitude=${lng}`;\n            //         const options = {\n            //             method: 'GET',\n            //             headers: {\n            //                 'X-RapidAPI-Key':\n            //                     '911f81d9e3msh5f705b8931d758cp13855bjsn19b3ba12960e',\n            //                 'X-RapidAPI-Host': 'isitwater-com.p.rapidapi.com',\n            //             },\n            //         };\n            //         const response = await fetch(url, options);\n            //         const result = await response.json();\n            //         console.log(result);\n            //         if (result.water) {\n            //             return alert('You clicked outside the land!');\n            //         }\n            //         return alert('You clicked inside the land!');\n            //     } catch (error) {\n            //         console.error(error);\n            //     }\n            // };\n        });\n    }\n}\n","<div id=\"map\"></div>\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,0CAA0C;AAEtE,SAASC,MAAM,QAAQ,2BAA2B;;;AAIlD,IAAIC,GAAoB;AACxB,MAAMC,UAAU,GAAG;EAAEC,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE;AAClD,MAAMC,qBAAqB,GAAG,CAC1B;EAAEF,GAAG,EAAE,MAAM;EAAEC,GAAG,EAAE,CAAC;AAAO,CAAE,EAC9B;EAAED,GAAG,EAAE,MAAM;EAAEC,GAAG,EAAE,CAAC;AAAO,CAAE,EAC9B;EAAED,GAAG,EAAE,CAAC,MAAM;EAAEC,GAAG,EAAE;AAAO,CAAE,EAC9B;EAAED,GAAG,EAAE,CAAC,MAAM;EAAEC,GAAG,EAAE;AAAO,CAAE,CACjC;AAED,MAAME,cAAc,GAAG,CACnB;EAAEH,GAAG,EAAE,SAAS;EAAEC,GAAG,EAAE;AAAS,CAAE,EAClC;EAAED,GAAG,EAAE,SAAS;EAAEC,GAAG,EAAE;AAAU,CAAE,EACnC;EAAED,GAAG,EAAE,QAAQ;EAAEC,GAAG,EAAE;AAAU,CAAE,EAClC;EAAED,GAAG,EAAE,QAAQ;EAAEC,GAAG,EAAE;AAAS,CAAE,CACpC;AAED,MAAMG,WAAW,GAAG,CAChB;EAAEJ,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAO,CAAE,EAC9B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAG,CAAE,EAC1B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,EAC/B;EAAED,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAQ,CAAE,CAAE;AAAA,CACpC;;AAED,IAAII,MAAM,GAAG,IAAIR,MAAM,CAAC;EACpBS,MAAM,EAAEV,WAAW,CAACU,MAAM;EAC1BC,OAAO,EAAE;CACZ,CAAC;AACF,MAKaC,YAAY;EACrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,MAAM,GAAa,EAAE;EAFkB;EAIvCC,QAAQA,CAAA;IACJ,IAAI,CAACC,QAAQ,EAAE;EACnB;EAEAA,QAAQA,CAAA;IACJ,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,kBAAkB,EAAE;MAAEC,YAAY,EAAE;IAAM,CAAE,CAAC,CAACC,SAAS,CAChEC,IAAS,IAAI;MACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBC,OAAO,CAACC,GAAG,EAAE;IACjB,CAAC,EACAC,KAAU,IAAKF,OAAO,CAACC,GAAG,CAACC,KAAK,CAACA,KAAK,CAAC,CAC3C;EACL;EAEAC,IAAIA,CAAA;IACAhB,MAAM,CAACiB,IAAI,EAAE,CAACC,IAAI,eAAAC,iBAAA,CAAC,aAAW;MAC1B;MACA,MAAM;QAAEC;MAAG,CAAE,SAAUC,MAAM,CAACC,IAAI,CAACC,aAAa,CAC5C,MAAM,CACmB;MAC7B9B,GAAG,GAAG,IAAI2B,GAAG,CAACI,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAgB,EAAE;QACzDC,MAAM,EAAEhC,UAAU;QAClBiC,IAAI,EAAE;OACT,CAAC;MAEF;MACA,MAAMC,MAAM,GAAG,IAAIP,MAAM,CAACC,IAAI,CAACO,MAAM,CAAC;QAClCC,QAAQ,EAAE,IAAI;QACdC,WAAW,EAAE,SAAS;QACtBC,aAAa,EAAE,GAAG;QAClBC,YAAY,EAAE,CAAC;QACfC,SAAS,EAAE,SAAS;QACpBC,WAAW,EAAE,IAAI;QACjB1C,GAAG;QACHiC,MAAM,EAAE;UAAE/B,GAAG,EAAE,SAAS;UAAEC,GAAG,EAAE;QAAU,CAAE;QAC3CwC,MAAM,EAAEC,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,GAAG;OAC1B,CAAC;MAEF;MACA,MAAMC,OAAO,GAAG,IAAIlB,MAAM,CAACC,IAAI,CAACkB,OAAO,CAAC;QACpCC,KAAK,EAAE3C,cAAc;QACrBiC,WAAW,EAAE,SAAS;QACtBC,aAAa,EAAE,GAAG;QAClBC,YAAY,EAAE,CAAC;QACfC,SAAS,EAAE,SAAS;QACpBC,WAAW,EAAE;OAChB,CAAC;MAEF;MACA,MAAMO,OAAO,GAAG3C,WAAW,CAACN,GAAG,CAC3B,CAACkD,IAAkC,EAAEC,KAAa,KAAI;QAClD,MAAMC,MAAM,GAAG,IAAIxB,MAAM,CAACC,IAAI,CAACwB,MAAM,CAAC;UAClCC,QAAQ,EAAEJ,IAAI;UACdlD,GAAG;UACHuD,KAAK,EAAE,cAAcJ,KAAK;SAC7B,CAAC;QACF,MAAMK,KAAK,GAAGrB,MAAM,CAACsB,SAAS,EAAE;QAChC,MAAMC,KAAK,GAAGN,MAAM,CAACO,WAAW,EAAE;QAElC,IAAID,KAAK,IAAIF,KAAK,EAAE;UAChB,IACI5B,MAAM,CAACC,IAAI,CAAC+B,QAAQ,CAACC,SAAS,CAACC,sBAAsB,CACjDN,KAAK,EACLE,KAAK,CACR,IAAIvB,MAAM,CAAC4B,SAAS,EAAE,EACzB;YACEX,MAAM,CAACY,OAAO,CACV,uDAAuD,CAC1D;WACJ,MAAM;YACHZ,MAAM,CAACY,OAAO,CACV,sDAAsD,CACzD;;SAER,MAAM;UACH5C,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;;MAEnC,CAAC,CACJ;MAED;MACA,MAAM4C,IAAI,GAAG,IAAIrC,MAAM,CAACC,IAAI,CAACqC,QAAQ,CAAC;QAClCC,IAAI,EAAE/D,qBAAqB;QAC3BgE,QAAQ,EAAE,IAAI;QACd9B,WAAW,EAAE,SAAS;QACtBC,aAAa,EAAE,GAAG;QAClBC,YAAY,EAAE;OACjB,CAAC;MAEF;MACA;MACA;MACA;MAEA;MACA;MACA;MAEA;MACA;MACA;MACA;MAEAyB,IAAI,CAACI,MAAM,CAACrE,GAAG,CAAC;MAChB8C,OAAO,CAACuB,MAAM,CAACrE,GAAG,CAAC;MAEnB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC,EAAC;EACN;;;AAtISU,YAAY,C;mBAAZA,YAAY,EAAA4D,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZ/D,YAAY,C;QAAZA,YAAY;EAAAgE,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCrDzBV,EAAA,CAAAY,SAAA,aAAoB;;;;;SDqDPxE,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}