{"ast":null,"code":"import _asyncToGenerator from \"/home/Workspace/FPT/AngularDemo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from 'src/environments/environment.development';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nlet map;\nconst VietNamCor = {\n  lat: 15.9031,\n  lng: 105.8067\n};\nconst flightPlanCoordinates = [{\n  lat: 37.772,\n  lng: -122.214\n}, {\n  lat: 21.291,\n  lng: -157.821\n}, {\n  lat: -18.142,\n  lng: 178.431\n}, {\n  lat: -27.467,\n  lng: 153.027\n}];\nconst triangleCoords = [{\n  lat: 23.393396,\n  lng: 102.14682\n}, {\n  lat: 22.719568,\n  lng: 105.776716\n}, {\n  lat: 8.383496,\n  lng: 104.938748\n}, {\n  lat: 8.383496,\n  lng: 102.14682\n}];\nconst VNlocations = [{\n  lat: 21.0278,\n  lng: 105.8342\n}, {\n  lat: 16.0544,\n  lng: 108.2022\n}, {\n  lat: 10.8231,\n  lng: 106.6297\n}, {\n  lat: 12.2388,\n  lng: 109.1967\n}, {\n  lat: 20.8449,\n  lng: 106.6881\n}, {\n  lat: 21.0283,\n  lng: 105.8537\n}, {\n  lat: 10.9656,\n  lng: 108.107\n}, {\n  lat: 21.4049,\n  lng: 103.2055\n}, {\n  lat: 10.0333,\n  lng: 105.7833\n}, {\n  lat: 16.4692,\n  lng: 107.5787\n}, {\n  lat: 13.9833,\n  lng: 108\n}, {\n  lat: 14.0583,\n  lng: 108.2772\n}, {\n  lat: 13.7665,\n  lng: 109.2237\n}, {\n  lat: 11.9325,\n  lng: 109.1967\n}, {\n  lat: 10.3833,\n  lng: 105.4167\n}, {\n  lat: 21.5942,\n  lng: 105.8481\n}, {\n  lat: 20.8172,\n  lng: 106.7244\n}, {\n  lat: 20.9544,\n  lng: 107.0806\n}, {\n  lat: 21.3281,\n  lng: 103.8733\n} // Yen Bai\n];\n\nlet loader = new Loader({\n  apiKey: environment.apiKey,\n  version: 'weekly'\n});\nconst circles = [];\nconst blueMarkers = [];\nlet currentInfoWindow = null;\nlet demo = [];\nclass AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.successMarkers = [];\n    this.coordinate = [{\n      lat: Number,\n      lng: Number\n    }];\n    this.handleDrawHandClick = () => {\n      this.drawingManager.setDrawingMode(null);\n    };\n    this.handleDrawMarkerClick = () => {\n      this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.MARKER);\n      google.maps.event.addListener(this.drawingManager, 'markercomplete', function (marker) {\n        marker.addListener('rightclick', () => {\n          if (currentInfoWindow) {\n            currentInfoWindow.close();\n          }\n          const infowindow = new google.maps.InfoWindow({\n            content: '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' + '<div><input type=\"checkbox\" id=\"remove\">Remove</div>'\n          });\n          infowindow.open(map, marker);\n          currentInfoWindow = infowindow;\n          infowindow.addListener('domready', () => {\n            const editCheckbox = document.getElementById('edit');\n            const removeCheckbox = document.getElementById('remove');\n            if (marker.getDraggable()) {\n              editCheckbox?.setAttribute('checked', 'true');\n            } else {\n              editCheckbox?.removeAttribute('checked');\n            }\n            editCheckbox?.addEventListener('change', () => {\n              if (marker.getDraggable()) {\n                editCheckbox?.removeAttribute('checked');\n                marker.setDraggable(null);\n              } else {\n                editCheckbox.setAttribute('checked', 'true');\n                marker.setDraggable(true);\n              }\n            });\n            removeCheckbox?.addEventListener('change', () => {\n              marker.setMap(null);\n            });\n          });\n        });\n      });\n    };\n    this.handleDrawCircleClick = () => {\n      this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.CIRCLE);\n      google.maps.event.addListener(this.drawingManager, 'circlecomplete', function (circle) {\n        circles.push(circle);\n        circle.addListener('rightclick', function () {\n          console.log('Right click triggered');\n        });\n        circle.addListener('bounds_changed', () => {\n          const circleCenter = circle.getCenter();\n          const circleRadius = circle.getRadius();\n          VNlocations.map((item, index) => {\n            const marker = new google.maps.Marker({\n              position: item,\n              map,\n              title: `Item index ${index}`\n            });\n            const markerPosition = marker.getPosition();\n            if (markerPosition && circleCenter) {\n              if (google.maps.geometry.spherical.computeDistanceBetween(circleCenter, markerPosition) <= circleRadius) {\n                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n                blueMarkers.push(marker);\n              } else {\n                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n              }\n            } else {\n              console.log(`Error before`);\n            }\n          });\n        });\n      });\n    };\n    this.handleClearCircleClick = () => {\n      circles.forEach(circle => {\n        circle.setMap(null);\n      });\n      circles.length = 0;\n    };\n    this.handleDrawShapeClick = () => {\n      this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYGON);\n      google.maps.event.addListener(this.drawingManager, 'polygoncomplete', function (polygon) {\n        polygon.addListener('rightclick', function (event) {\n          if (currentInfoWindow) {\n            currentInfoWindow.close();\n          }\n          const infowindow = new google.maps.InfoWindow({\n            content: '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' + '<div><input type=\"checkbox\" id=\"remove\">Remove</div>'\n          });\n          infowindow.setPosition(event.latLng);\n          infowindow.open(map);\n          currentInfoWindow = infowindow;\n          infowindow.addListener('domready', () => {\n            const editCheckbox = document.getElementById('edit');\n            const removeCheckbox = document.getElementById('remove');\n            if (polygon.getDraggable()) {\n              editCheckbox?.setAttribute('checked', 'true');\n            } else {\n              editCheckbox?.removeAttribute('checked');\n            }\n            editCheckbox?.addEventListener('change', () => {\n              if (polygon.getDraggable()) {\n                editCheckbox?.removeAttribute('checked');\n                polygon.setDraggable(null);\n              } else {\n                editCheckbox.setAttribute('checked', 'true');\n                polygon.setDraggable(true);\n              }\n            });\n            removeCheckbox?.addEventListener('change', () => {\n              polygon.setMap(null);\n              infowindow.close();\n            });\n          });\n        });\n      });\n    };\n    this.handleDrawLineClick = () => {\n      this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYLINE);\n      google.maps.event.addListener(this.drawingManager, 'polylinecomplete', function (line) {\n        line.addListener('rightclick', function (event) {\n          if (currentInfoWindow) {\n            currentInfoWindow.close();\n          }\n          const infowindow = new google.maps.InfoWindow({\n            content: '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' + '<div><input type=\"checkbox\" id=\"remove\">Remove</div>'\n          });\n          infowindow.setPosition(event.latLng);\n          infowindow.open(map);\n          currentInfoWindow = infowindow;\n          infowindow.addListener('domready', () => {\n            const editCheckbox = document.getElementById('edit');\n            const removeCheckbox = document.getElementById('remove');\n            if (line.getDraggable()) {\n              editCheckbox?.setAttribute('checked', 'true');\n            } else {\n              editCheckbox?.removeAttribute('checked');\n            }\n            editCheckbox?.addEventListener('change', () => {\n              if (line.getDraggable()) {\n                editCheckbox?.removeAttribute('checked');\n                line.setDraggable(null);\n              } else {\n                editCheckbox.setAttribute('checked', 'true');\n                line.setDraggable(true);\n              }\n            });\n            removeCheckbox?.addEventListener('change', () => {\n              line.setMap(null);\n              infowindow.close();\n            });\n          });\n        });\n      });\n    };\n    this.handleDrawRectangleClick = () => {\n      this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.RECTANGLE);\n      google.maps.event.addListener(this.drawingManager, 'rectanglecomplete', function (rectangle) {\n        rectangle.addListener('rightclick', function (event) {\n          if (currentInfoWindow) {\n            currentInfoWindow.close();\n          }\n          const infowindow = new google.maps.InfoWindow({\n            content: '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' + '<div><input type=\"checkbox\" id=\"remove\">Remove</div>'\n          });\n          infowindow.setPosition(event.latLng);\n          infowindow.open(map);\n          currentInfoWindow = infowindow;\n          infowindow.addListener('domready', () => {\n            const editCheckbox = document.getElementById('edit');\n            const removeCheckbox = document.getElementById('remove');\n            if (rectangle.getDraggable()) {\n              editCheckbox?.setAttribute('checked', 'true');\n            } else {\n              editCheckbox?.removeAttribute('checked');\n            }\n            editCheckbox?.addEventListener('change', () => {\n              if (rectangle.getDraggable()) {\n                editCheckbox?.removeAttribute('checked');\n                rectangle.setDraggable(null);\n              } else {\n                editCheckbox.setAttribute('checked', 'true');\n                rectangle.setDraggable(true);\n              }\n            });\n            removeCheckbox?.addEventListener('change', () => {\n              rectangle.setMap(null);\n              infowindow.close();\n            });\n          });\n        });\n      });\n    };\n    this.handleShowBlueMarkers = () => {\n      blueMarkers.forEach((item, index) => console.log(`item at index ${index}`));\n    };\n  }\n  ngOnInit() {\n    this.demo();\n  }\n  demo() {\n    var _this = this;\n    const detectWater = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (lat, lng) {\n        try {\n          const url = `https://isitwater-com.p.rapidapi.com/?latitude=${lat}&longitude=${lng}`;\n          const options = {\n            method: 'GET',\n            headers: {\n              'X-RapidAPI-Key': '911f81d9e3msh5f705b8931d758cp13855bjsn19b3ba12960e',\n              'X-RapidAPI-Host': 'isitwater-com.p.rapidapi.com'\n            }\n          };\n          const response = yield fetch(url, options);\n          const result = yield response.json();\n          if (result.water) {\n            return true;\n          }\n          return false;\n        } catch (error) {\n          console.error(error);\n          return undefined;\n        }\n      });\n      return function detectWater(_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    const readFile = () => {\n      this.http.get('assets/Book1.csv', {\n        responseType: 'text'\n      }).subscribe(data => {\n        this.result = data.split('\\n');\n        const markers = this.result.map((item, index) => {\n          this.coordinate.push({\n            lat: item.split(',')[0],\n            lng: item.split(',')[1]\n          });\n          const marker = new google.maps.Marker({\n            position: {\n              lat: Number(item.split(',')[0]),\n              lng: Number(item.split(',')[1])\n            },\n            map,\n            title: `Item index ${index}`\n          });\n          return marker;\n        });\n      }, error => console.log(error.error));\n    };\n    loader.load().then( /*#__PURE__*/_asyncToGenerator(function* () {\n      //* initial map element\n      const {\n        Map\n      } = yield google.maps.importLibrary('maps');\n      map = new Map(document.getElementById('map'), {\n        center: VietNamCor,\n        zoom: 8\n      });\n      _this.drawingManager = new google.maps.drawing.DrawingManager({\n        drawingMode: null,\n        drawingControl: false,\n        circleOptions: {\n          fillColor: '#ffff00',\n          fillOpacity: 1,\n          strokeWeight: 5,\n          clickable: false,\n          editable: true,\n          zIndex: 1\n        }\n      });\n      _this.drawingManager.setMap(map);\n    }));\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 24,\n  vars: 0,\n  consts: [[1, \"ms-4\", \"d-flex\", \"gap-3\"], [1, \"d-flex\", \"flex-column\", \"gap-3\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"dropdown\"], [\"type\", \"button\", \"data-bs-toggle\", \"dropdown\", \"aria-expanded\", \"false\", 1, \"btn\", \"btn-secondary\", \"dropdown-toggle\"], [1, \"dropdown-menu\"], [1, \"dropdown-item\", 3, \"click\"], [\"id\", \"map\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_2_listener() {\n        return ctx.handleDrawMarkerClick();\n      });\n      i0.ɵɵtext(3, \"Markers\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"button\", 4);\n      i0.ɵɵtext(6, \" Shapes \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"ul\", 5)(8, \"li\")(9, \"a\", 6);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_a_click_9_listener() {\n        return ctx.handleDrawHandClick();\n      });\n      i0.ɵɵtext(10, \"Hand\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"li\")(12, \"a\", 6);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_a_click_12_listener() {\n        return ctx.handleDrawCircleClick();\n      });\n      i0.ɵɵtext(13, \"Circle\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"li\")(15, \"a\", 6);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_a_click_15_listener() {\n        return ctx.handleDrawRectangleClick();\n      });\n      i0.ɵɵtext(16, \"Rectangle\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"li\")(18, \"a\", 6);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_a_click_18_listener() {\n        return ctx.handleDrawLineClick();\n      });\n      i0.ɵɵtext(19, \"Polyline\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"li\")(21, \"a\", 6);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_a_click_21_listener() {\n        return ctx.handleDrawShapeClick();\n      });\n      i0.ɵɵtext(22, \"Polygon\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelement(23, \"div\", 7);\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"#map[_ngcontent-%COMP%] {\\r\\n    height: 100dvh;\\r\\n    width: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsV0FBVztBQUNmIiwic291cmNlc0NvbnRlbnQiOlsiI21hcCB7XHJcbiAgICBoZWlnaHQ6IDEwMGR2aDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AppComponent };","map":{"version":3,"names":["environment","Loader","map","VietNamCor","lat","lng","flightPlanCoordinates","triangleCoords","VNlocations","loader","apiKey","version","circles","blueMarkers","currentInfoWindow","demo","AppComponent","constructor","http","successMarkers","coordinate","Number","handleDrawHandClick","drawingManager","setDrawingMode","handleDrawMarkerClick","google","maps","drawing","OverlayType","MARKER","event","addListener","marker","close","infowindow","InfoWindow","content","open","editCheckbox","document","getElementById","removeCheckbox","getDraggable","setAttribute","removeAttribute","addEventListener","setDraggable","setMap","handleDrawCircleClick","CIRCLE","circle","push","console","log","circleCenter","getCenter","circleRadius","getRadius","item","index","Marker","position","title","markerPosition","getPosition","geometry","spherical","computeDistanceBetween","setIcon","handleClearCircleClick","forEach","length","handleDrawShapeClick","POLYGON","polygon","setPosition","latLng","handleDrawLineClick","POLYLINE","line","handleDrawRectangleClick","RECTANGLE","rectangle","handleShowBlueMarkers","ngOnInit","_this","detectWater","_ref","_asyncToGenerator","url","options","method","headers","response","fetch","result","json","water","error","undefined","_x","_x2","apply","arguments","readFile","get","responseType","subscribe","data","split","markers","load","then","Map","importLibrary","center","zoom","DrawingManager","drawingMode","drawingControl","circleOptions","fillColor","fillOpacity","strokeWeight","clickable","editable","zIndex","i0","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AppComponent_Template_button_click_2_listener","ɵɵtext","ɵɵelementEnd","AppComponent_Template_a_click_9_listener","AppComponent_Template_a_click_12_listener","AppComponent_Template_a_click_15_listener","AppComponent_Template_a_click_18_listener","AppComponent_Template_a_click_21_listener","ɵɵelement"],"sources":["/home/Workspace/FPT/AngularDemo/src/app/app.component.ts","/home/Workspace/FPT/AngularDemo/src/app/app.component.html"],"sourcesContent":["import { environment } from 'src/environments/environment.development';\nimport { Component, OnInit } from '@angular/core';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport * as _ from 'lodash';\nimport { HttpClient } from '@angular/common/http';\n\nlet map: google.maps.Map;\nconst VietNamCor = { lat: 15.9031, lng: 105.8067 };\nconst flightPlanCoordinates = [\n    { lat: 37.772, lng: -122.214 },\n    { lat: 21.291, lng: -157.821 },\n    { lat: -18.142, lng: 178.431 },\n    { lat: -27.467, lng: 153.027 },\n];\n\nconst triangleCoords = [\n    { lat: 23.393396, lng: 102.14682 },\n    { lat: 22.719568, lng: 105.776716 },\n    { lat: 8.383496, lng: 104.938748 },\n    { lat: 8.383496, lng: 102.14682 },\n];\n\nconst VNlocations = [\n    { lat: 21.0278, lng: 105.8342 }, // Hanoi\n    { lat: 16.0544, lng: 108.2022 }, // Da Nang\n    { lat: 10.8231, lng: 106.6297 }, // Ho Chi Minh City\n    { lat: 12.2388, lng: 109.1967 }, // Nha Trang\n    { lat: 20.8449, lng: 106.6881 }, // Hai Phong\n    { lat: 21.0283, lng: 105.8537 }, // Bac Ninh\n    { lat: 10.9656, lng: 108.107 }, // Vung Tau\n    { lat: 21.4049, lng: 103.2055 }, // Lao Cai\n    { lat: 10.0333, lng: 105.7833 }, // Can Tho\n    { lat: 16.4692, lng: 107.5787 }, // Hue\n    { lat: 13.9833, lng: 108 }, // Quy Nhon\n    { lat: 14.0583, lng: 108.2772 }, // Tuy Hoa\n    { lat: 13.7665, lng: 109.2237 }, // Phan Rang-Thap Cham\n    { lat: 11.9325, lng: 109.1967 }, // Phan Thiet\n    { lat: 10.3833, lng: 105.4167 }, // Rach Gia\n    { lat: 21.5942, lng: 105.8481 }, // Vinh Yen\n    { lat: 20.8172, lng: 106.7244 }, // Ha Long\n    { lat: 20.9544, lng: 107.0806 }, // Thai Nguyen\n    { lat: 21.3281, lng: 103.8733 }, // Yen Bai\n];\n\nlet loader = new Loader({\n    apiKey: environment.apiKey,\n    version: 'weekly',\n});\n\nconst circles: Array<any> = [];\nconst blueMarkers: Array<any> = [];\nlet currentInfoWindow: any = null;\nlet demo: any = [];\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n    constructor(private http: HttpClient) {}\n\n    result: any;\n    successMarkers: Array<Object> = [];\n    coordinate: Array<Object> = [\n        {\n            lat: Number,\n            lng: Number,\n        },\n    ];\n    drawingManager: any;\n\n    ngOnInit(): void {\n        this.demo();\n    }\n\n    demo() {\n        const detectWater = async (lat?: number, lng?: number) => {\n            try {\n                const url = `https://isitwater-com.p.rapidapi.com/?latitude=${lat}&longitude=${lng}`;\n                const options = {\n                    method: 'GET',\n                    headers: {\n                        'X-RapidAPI-Key':\n                            '911f81d9e3msh5f705b8931d758cp13855bjsn19b3ba12960e',\n                        'X-RapidAPI-Host': 'isitwater-com.p.rapidapi.com',\n                    },\n                };\n                const response = await fetch(url, options);\n                const result = await response.json();\n                if (result.water) {\n                    return true;\n                }\n                return false;\n            } catch (error) {\n                console.error(error);\n                return undefined;\n            }\n        };\n\n        const readFile = () => {\n            this.http\n                .get('assets/Book1.csv', { responseType: 'text' })\n                .subscribe(\n                    (data: any) => {\n                        this.result = data.split('\\n');\n\n                        const markers = this.result.map(\n                            (item: any, index: number) => {\n                                this.coordinate.push({\n                                    lat: item.split(',')[0],\n                                    lng: item.split(',')[1],\n                                });\n\n                                const marker = new google.maps.Marker({\n                                    position: {\n                                        lat: Number(item.split(',')[0]),\n                                        lng: Number(item.split(',')[1]),\n                                    },\n                                    map,\n                                    title: `Item index ${index}`,\n                                });\n\n                                return marker;\n                            }\n                        );\n                    },\n                    (error: any) => console.log(error.error)\n                );\n        };\n\n        loader.load().then(async () => {\n            //* initial map element\n            const { Map } = (await google.maps.importLibrary(\n                'maps'\n            )) as google.maps.MapsLibrary;\n            map = new Map(document.getElementById('map') as HTMLElement, {\n                center: VietNamCor,\n                zoom: 8,\n            });\n\n            this.drawingManager = new google.maps.drawing.DrawingManager({\n                drawingMode: null,\n                drawingControl: false,\n                circleOptions: {\n                    fillColor: '#ffff00',\n                    fillOpacity: 1,\n                    strokeWeight: 5,\n                    clickable: false,\n                    editable: true,\n                    zIndex: 1,\n                },\n            });\n            this.drawingManager.setMap(map);\n        });\n    }\n\n    handleDrawHandClick = () => {\n        this.drawingManager.setDrawingMode(null);\n    };\n\n    handleDrawMarkerClick = () => {\n        this.drawingManager.setDrawingMode(\n            google.maps.drawing.OverlayType.MARKER\n        );\n\n        google.maps.event.addListener(\n            this.drawingManager,\n            'markercomplete',\n            function (marker: any) {\n                marker.addListener('rightclick', () => {\n                    if (currentInfoWindow) {\n                        currentInfoWindow.close();\n                    }\n                    const infowindow = new google.maps.InfoWindow({\n                        content:\n                            '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' +\n                            '<div><input type=\"checkbox\" id=\"remove\">Remove</div>',\n                    });\n\n                    infowindow.open(map, marker);\n                    currentInfoWindow = infowindow;\n\n                    infowindow.addListener('domready', () => {\n                        const editCheckbox = document.getElementById('edit');\n                        const removeCheckbox =\n                            document.getElementById('remove');\n\n                        if (marker.getDraggable()) {\n                            editCheckbox?.setAttribute('checked', 'true');\n                        } else {\n                            editCheckbox?.removeAttribute('checked');\n                        }\n\n                        editCheckbox?.addEventListener('change', () => {\n                            if (marker.getDraggable()) {\n                                editCheckbox?.removeAttribute('checked');\n                                marker.setDraggable(null);\n                            } else {\n                                editCheckbox.setAttribute('checked', 'true');\n                                marker.setDraggable(true);\n                            }\n                        });\n\n                        removeCheckbox?.addEventListener('change', () => {\n                            marker.setMap(null);\n                        });\n                    });\n                });\n            }\n        );\n    };\n\n    handleDrawCircleClick = () => {\n        this.drawingManager.setDrawingMode(\n            google.maps.drawing.OverlayType.CIRCLE\n        );\n\n        google.maps.event.addListener(\n            this.drawingManager,\n            'circlecomplete',\n            function (circle: any) {\n                circles.push(circle);\n\n                circle.addListener('rightclick', function () {\n                    console.log('Right click triggered');\n                });\n\n                circle.addListener('bounds_changed', () => {\n                    const circleCenter = circle.getCenter();\n                    const circleRadius = circle.getRadius();\n                    VNlocations.map(\n                        (item: { lat: number; lng: number }, index: number) => {\n                            const marker = new google.maps.Marker({\n                                position: item,\n                                map,\n                                title: `Item index ${index}`,\n                            });\n                            const markerPosition = marker.getPosition();\n\n                            if (markerPosition && circleCenter) {\n                                if (\n                                    google.maps.geometry.spherical.computeDistanceBetween(\n                                        circleCenter,\n                                        markerPosition\n                                    ) <= circleRadius\n                                ) {\n                                    marker.setIcon(\n                                        'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\n                                    );\n                                    blueMarkers.push(marker);\n                                } else {\n                                    marker.setIcon(\n                                        'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\n                                    );\n                                }\n                            } else {\n                                console.log(`Error before`);\n                            }\n                        }\n                    );\n                });\n            }\n        );\n    };\n\n    handleClearCircleClick = () => {\n        circles.forEach((circle) => {\n            circle.setMap(null);\n        });\n\n        circles.length = 0;\n    };\n\n    handleDrawShapeClick = () => {\n        this.drawingManager.setDrawingMode(\n            google.maps.drawing.OverlayType.POLYGON\n        );\n\n        google.maps.event.addListener(\n            this.drawingManager,\n            'polygoncomplete',\n            function (polygon: any) {\n                polygon.addListener('rightclick', function (event: any) {\n                    if (currentInfoWindow) {\n                        currentInfoWindow.close();\n                    }\n                    const infowindow = new google.maps.InfoWindow({\n                        content:\n                            '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' +\n                            '<div><input type=\"checkbox\" id=\"remove\">Remove</div>',\n                    });\n\n                    infowindow.setPosition(event.latLng);\n                    infowindow.open(map);\n                    currentInfoWindow = infowindow;\n\n                    infowindow.addListener('domready', () => {\n                        const editCheckbox = document.getElementById('edit');\n                        const removeCheckbox =\n                            document.getElementById('remove');\n\n                        if (polygon.getDraggable()) {\n                            editCheckbox?.setAttribute('checked', 'true');\n                        } else {\n                            editCheckbox?.removeAttribute('checked');\n                        }\n\n                        editCheckbox?.addEventListener('change', () => {\n                            if (polygon.getDraggable()) {\n                                editCheckbox?.removeAttribute('checked');\n                                polygon.setDraggable(null);\n                            } else {\n                                editCheckbox.setAttribute('checked', 'true');\n                                polygon.setDraggable(true);\n                            }\n                        });\n\n                        removeCheckbox?.addEventListener('change', () => {\n                            polygon.setMap(null);\n                            infowindow.close();\n                        });\n                    });\n                });\n            }\n        );\n    };\n    handleDrawLineClick = () => {\n        this.drawingManager.setDrawingMode(\n            google.maps.drawing.OverlayType.POLYLINE\n        );\n\n        google.maps.event.addListener(\n            this.drawingManager,\n            'polylinecomplete',\n            function (line: any) {\n                line.addListener('rightclick', function (event: any) {\n                    if (currentInfoWindow) {\n                        currentInfoWindow.close();\n                    }\n                    const infowindow = new google.maps.InfoWindow({\n                        content:\n                            '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' +\n                            '<div><input type=\"checkbox\" id=\"remove\">Remove</div>',\n                    });\n\n                    infowindow.setPosition(event.latLng);\n                    infowindow.open(map);\n                    currentInfoWindow = infowindow;\n\n                    infowindow.addListener('domready', () => {\n                        const editCheckbox = document.getElementById('edit');\n                        const removeCheckbox =\n                            document.getElementById('remove');\n\n                        if (line.getDraggable()) {\n                            editCheckbox?.setAttribute('checked', 'true');\n                        } else {\n                            editCheckbox?.removeAttribute('checked');\n                        }\n\n                        editCheckbox?.addEventListener('change', () => {\n                            if (line.getDraggable()) {\n                                editCheckbox?.removeAttribute('checked');\n                                line.setDraggable(null);\n                            } else {\n                                editCheckbox.setAttribute('checked', 'true');\n                                line.setDraggable(true);\n                            }\n                        });\n\n                        removeCheckbox?.addEventListener('change', () => {\n                            line.setMap(null);\n                            infowindow.close();\n                        });\n                    });\n                });\n            }\n        );\n    };\n    handleDrawRectangleClick = () => {\n        this.drawingManager.setDrawingMode(\n            google.maps.drawing.OverlayType.RECTANGLE\n        );\n\n        google.maps.event.addListener(\n            this.drawingManager,\n            'rectanglecomplete',\n            function (rectangle: any) {\n                rectangle.addListener('rightclick', function (event: any) {\n                    if (currentInfoWindow) {\n                        currentInfoWindow.close();\n                    }\n                    const infowindow = new google.maps.InfoWindow({\n                        content:\n                            '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' +\n                            '<div><input type=\"checkbox\" id=\"remove\">Remove</div>',\n                    });\n\n                    infowindow.setPosition(event.latLng);\n                    infowindow.open(map);\n                    currentInfoWindow = infowindow;\n\n                    infowindow.addListener('domready', () => {\n                        const editCheckbox = document.getElementById('edit');\n                        const removeCheckbox =\n                            document.getElementById('remove');\n\n                        if (rectangle.getDraggable()) {\n                            editCheckbox?.setAttribute('checked', 'true');\n                        } else {\n                            editCheckbox?.removeAttribute('checked');\n                        }\n\n                        editCheckbox?.addEventListener('change', () => {\n                            if (rectangle.getDraggable()) {\n                                editCheckbox?.removeAttribute('checked');\n                                rectangle.setDraggable(null);\n                            } else {\n                                editCheckbox.setAttribute('checked', 'true');\n                                rectangle.setDraggable(true);\n                            }\n                        });\n\n                        removeCheckbox?.addEventListener('change', () => {\n                            rectangle.setMap(null);\n                            infowindow.close();\n                        });\n                    });\n                });\n            }\n        );\n    };\n\n    handleShowBlueMarkers = () => {\n        blueMarkers.forEach((item, index) =>\n            console.log(`item at index ${index}`)\n        );\n    };\n}\n","<div class=\"ms-4 d-flex gap-3\">\n    <div class=\"d-flex flex-column gap-3\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"handleDrawMarkerClick()\">Markers</button>\n        <div class=\"dropdown\">\n            <button\n                class=\"btn btn-secondary dropdown-toggle\"\n                type=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n            >\n                Shapes\n            </button>\n            <ul class=\"dropdown-menu\">\n                <li>\n                    <a\n                        class=\"dropdown-item\"\n                        (click)=\"handleDrawHandClick()\"\n                        >Hand</a\n                    >\n                </li>\n                <li>\n                    <a\n                        class=\"dropdown-item\"\n                        (click)=\"handleDrawCircleClick()\"\n                        >Circle</a\n                    >\n                </li>\n                <li>\n                    <a\n                        class=\"dropdown-item\"\n                        (click)=\"handleDrawRectangleClick()\"\n                        >Rectangle</a\n                    >\n                </li>\n                <li>\n                    <a\n                        class=\"dropdown-item\"\n                        (click)=\"handleDrawLineClick()\"\n                        >Polyline</a\n                    >\n                </li>\n                <li>\n                    <a\n                        class=\"dropdown-item\"\n                        (click)=\"handleDrawShapeClick()\"\n                        >Polygon</a\n                    >\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div id=\"map\"></div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}