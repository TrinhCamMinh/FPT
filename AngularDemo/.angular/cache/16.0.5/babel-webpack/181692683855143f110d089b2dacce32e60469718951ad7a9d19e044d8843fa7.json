{"ast":null,"code":"import _asyncToGenerator from \"/home/Workspace/FPT/AngularDemo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from 'src/environments/environment.development';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nlet map;\nconst VietNamCor = {\n  lat: 15.9031,\n  lng: 105.8067\n};\nlet loader = new Loader({\n  apiKey: environment.apiKey,\n  version: 'weekly'\n});\nlet currentInfoWindow = null;\nconst circles = [];\nconst markers = [];\nconst rectangles = [];\nclass AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.successMarkers = [];\n    this.coordinate = [{\n      lat: Number,\n      lng: Number\n    }];\n    this.readFile = () => {\n      this.http.get('assets/Book1.csv', {\n        responseType: 'text'\n      }).subscribe(data => {\n        this.result = data.split('\\n');\n        this.result.map((item, index) => {\n          this.coordinate.push({\n            lat: item.split(',')[0],\n            lng: item.split(',')[1]\n          });\n          const marker = new google.maps.Marker({\n            position: {\n              lat: Number(item.split(',')[0]),\n              lng: Number(item.split(',')[1])\n            },\n            map,\n            title: `Item index ${index}`\n          });\n          return marker;\n        });\n      }, error => console.log(error.error));\n    };\n    this.handleDrawHandClick = () => {\n      this.drawingManager.setDrawingMode(null);\n    };\n    this.handleDrawMarkerClick = () => {\n      const detectWater = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (lat, lng) {\n          try {\n            const url = `https://isitwater-com.p.rapidapi.com/?latitude=${lat}&longitude=${lng}`;\n            const options = {\n              method: 'GET',\n              headers: {\n                'X-RapidAPI-Key': '911f81d9e3msh5f705b8931d758cp13855bjsn19b3ba12960e',\n                'X-RapidAPI-Host': 'isitwater-com.p.rapidapi.com'\n              }\n            };\n            const response = yield fetch(url, options);\n            const result = yield response.json();\n            if (result.water) {\n              return true;\n            }\n            return false;\n          } catch (error) {\n            console.error(error);\n            return undefined;\n          }\n        });\n        return function detectWater(_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n      this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.MARKER);\n      google.maps.event.addListener(this.drawingManager, 'markercomplete', /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (marker) {\n          marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n          const lat = marker.getPosition()?.lat();\n          const lng = marker.getPosition()?.lng();\n          const isWater = yield detectWater(lat, lng);\n          if (isWater) {\n            alert('You are placing marker on water');\n            return marker.setMap(null);\n          }\n          markers.push(marker);\n          if (circles.length > 0) {\n            circles.forEach(item => {\n              const circleCenter = item.getCenter();\n              const circleRadius = item.getRadius();\n              const markerPosition = marker.getPosition();\n              if (markerPosition && circleCenter) {\n                if (google.maps.geometry.spherical.computeDistanceBetween(circleCenter, markerPosition) <= circleRadius) {\n                  marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n                } else {\n                  marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n                }\n              }\n            });\n          }\n          if (rectangles.length > 0) {\n            const markerPosition = marker.getPosition();\n            rectangles.forEach(item => {\n              const rectangleBound = item.getBounds();\n              if (markerPosition && rectangleBound?.contains(markerPosition)) {\n                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n              } else {\n                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n              }\n            });\n          }\n          marker.addListener('rightclick', () => {\n            if (currentInfoWindow) {\n              currentInfoWindow.close();\n            }\n            const infowindow = new google.maps.InfoWindow({\n              content: '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' + '<div><input type=\"checkbox\" id=\"remove\">Remove</div>'\n            });\n            infowindow.open(map, marker);\n            currentInfoWindow = infowindow;\n            infowindow.addListener('domready', () => {\n              const editCheckbox = document.getElementById('edit');\n              const removeCheckbox = document.getElementById('remove');\n              if (marker.getDraggable()) {\n                editCheckbox?.setAttribute('checked', 'true');\n              } else {\n                editCheckbox?.removeAttribute('checked');\n              }\n              editCheckbox?.addEventListener('change', () => {\n                if (marker.getDraggable()) {\n                  editCheckbox?.removeAttribute('checked');\n                  marker.setDraggable(null);\n                } else {\n                  editCheckbox.setAttribute('checked', 'true');\n                  marker.setDraggable(true);\n                }\n              });\n              removeCheckbox?.addEventListener('change', () => {\n                marker.setMap(null);\n              });\n            });\n          });\n          marker.addListener('dragend', /*#__PURE__*/_asyncToGenerator(function* () {\n            const lat = marker.getPosition()?.lat();\n            const lng = marker.getPosition()?.lng();\n            const isWater = yield detectWater(lat, lng);\n            const markerPosition = marker.getPosition();\n            if (isWater) {\n              alert('You are placing marker on water');\n              return marker.setMap(null);\n            }\n            circles.forEach(item => {\n              const circleCenter = item.getCenter();\n              const circleRadius = item.getRadius();\n              if (markerPosition && circleCenter) {\n                if (google.maps.geometry.spherical.computeDistanceBetween(circleCenter, markerPosition) <= circleRadius) {\n                  marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n                }\n              }\n            });\n            rectangles.forEach(item => {\n              const rectangleBound = item.getBounds();\n              if (markerPosition && rectangleBound?.contains(markerPosition)) {\n                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n              }\n            });\n          }));\n        });\n        return function (_x3) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    };\n    this.handleDrawCircleClick = () => {\n      this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.CIRCLE);\n      google.maps.event.addListener(this.drawingManager, 'circlecomplete', function (circle) {\n        circles.push(circle);\n        circle.addListener('bounds_changed', () => {\n          const circleCenter = circle.getCenter();\n          const circleRadius = circle.getRadius();\n          markers.forEach(item => {\n            const markerPosition = item.getPosition();\n            if (markerPosition && circleCenter) {\n              if (google.maps.geometry.spherical.computeDistanceBetween(circleCenter, markerPosition) <= circleRadius) {\n                item.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n              } else {\n                item.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');\n              }\n            }\n          });\n        });\n      });\n    };\n    this.handleClearCircleClick = () => {\n      circles.forEach(circle => {\n        circle.setMap(null);\n      });\n      circles.length = 0;\n    };\n    this.handleDrawShapeClick = () => {\n      this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYGON);\n      google.maps.event.addListener(this.drawingManager, 'polygoncomplete', function (polygon) {\n        polygon.addListener('rightclick', function (event) {\n          if (currentInfoWindow) {\n            currentInfoWindow.close();\n          }\n          const infowindow = new google.maps.InfoWindow({\n            content: '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' + '<div><input type=\"checkbox\" id=\"remove\">Remove</div>'\n          });\n          infowindow.setPosition(event.latLng);\n          infowindow.open(map);\n          currentInfoWindow = infowindow;\n          infowindow.addListener('domready', () => {\n            const editCheckbox = document.getElementById('edit');\n            const removeCheckbox = document.getElementById('remove');\n            if (polygon.getDraggable()) {\n              editCheckbox?.setAttribute('checked', 'true');\n            } else {\n              editCheckbox?.removeAttribute('checked');\n            }\n            editCheckbox?.addEventListener('change', () => {\n              if (polygon.getDraggable()) {\n                editCheckbox?.removeAttribute('checked');\n                polygon.setDraggable(null);\n              } else {\n                editCheckbox.setAttribute('checked', 'true');\n                polygon.setDraggable(true);\n              }\n            });\n            removeCheckbox?.addEventListener('change', () => {\n              polygon.setMap(null);\n              infowindow.close();\n            });\n          });\n        });\n      });\n    };\n    this.handleDrawLineClick = () => {\n      this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYLINE);\n      google.maps.event.addListener(this.drawingManager, 'polylinecomplete', function (line) {\n        line.addListener('rightclick', function (event) {\n          if (currentInfoWindow) {\n            currentInfoWindow.close();\n          }\n          const infowindow = new google.maps.InfoWindow({\n            content: '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' + '<div><input type=\"checkbox\" id=\"remove\">Remove</div>'\n          });\n          infowindow.setPosition(event.latLng);\n          infowindow.open(map);\n          currentInfoWindow = infowindow;\n          infowindow.addListener('domready', () => {\n            const editCheckbox = document.getElementById('edit');\n            const removeCheckbox = document.getElementById('remove');\n            if (line.getDraggable()) {\n              editCheckbox?.setAttribute('checked', 'true');\n            } else {\n              editCheckbox?.removeAttribute('checked');\n            }\n            editCheckbox?.addEventListener('change', () => {\n              if (line.getDraggable()) {\n                editCheckbox?.removeAttribute('checked');\n                line.setDraggable(null);\n              } else {\n                editCheckbox.setAttribute('checked', 'true');\n                line.setDraggable(true);\n              }\n            });\n            removeCheckbox?.addEventListener('change', () => {\n              line.setMap(null);\n              infowindow.close();\n            });\n          });\n        });\n      });\n    };\n    this.handleDrawRectangleClick = () => {\n      this.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.RECTANGLE);\n      google.maps.event.addListener(this.drawingManager, 'rectanglecomplete', function (rectangle) {\n        rectangles.push(rectangle);\n        rectangle.addListener('rightclick', function (event) {\n          if (currentInfoWindow) {\n            currentInfoWindow.close();\n          }\n          const infowindow = new google.maps.InfoWindow({\n            content: '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' + '<div><input type=\"checkbox\" id=\"remove\">Remove</div>'\n          });\n          infowindow.setPosition(event.latLng);\n          infowindow.open(map);\n          currentInfoWindow = infowindow;\n          infowindow.addListener('domready', () => {\n            const editCheckbox = document.getElementById('edit');\n            const removeCheckbox = document.getElementById('remove');\n            if (rectangle.getDraggable()) {\n              editCheckbox?.setAttribute('checked', 'true');\n            } else {\n              editCheckbox?.removeAttribute('checked');\n            }\n            editCheckbox?.addEventListener('change', () => {\n              if (rectangle.getDraggable()) {\n                editCheckbox?.removeAttribute('checked');\n                rectangle.setDraggable(null);\n              } else {\n                editCheckbox.setAttribute('checked', 'true');\n                rectangle.setDraggable(true);\n              }\n            });\n            removeCheckbox?.addEventListener('change', () => {\n              rectangle.setMap(null);\n              infowindow.close();\n            });\n          });\n        });\n      });\n    };\n  }\n  ngOnInit() {\n    const waterCheckbox = document.querySelector('#detect-water-checkbox');\n    water;\n    this.demo();\n  }\n  demo() {\n    var _this = this;\n    loader.load().then( /*#__PURE__*/_asyncToGenerator(function* () {\n      //* initial map element\n      const {\n        Map\n      } = yield google.maps.importLibrary('maps');\n      map = new Map(document.getElementById('map'), {\n        center: VietNamCor,\n        zoom: 8\n      });\n      _this.drawingManager = new google.maps.drawing.DrawingManager({\n        drawingMode: null,\n        drawingControl: false,\n        circleOptions: {\n          fillColor: '#ffff00',\n          fillOpacity: 1,\n          strokeWeight: 5,\n          clickable: false,\n          editable: true,\n          zIndex: 1\n        }\n      });\n      _this.drawingManager.setMap(map);\n    }));\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 42,\n  vars: 0,\n  consts: [[1, \"ms-4\", \"d-flex\", \"gap-3\"], [1, \"d-flex\", \"flex-column\", \"gap-3\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"dropdown\", \"d-flex\", \"align-items-center\"], [\"width\", \"20\", \"height\", \"20\", \"src\", \"https://img.icons8.com/external-flat-andi-nur-abdillah/20/external-Option-survey-(flat)-flat-andi-nur-abdillah.png\", \"alt\", \"shapes icon\"], [\"data-bs-toggle\", \"dropdown\", \"data-bs-auto-close\", \"outside\", \"aria-expanded\", \"false\", \"role\", \"button\", \"data-bs-toggle\", \"dropdown\", \"aria-expanded\", \"false\", 1, \"dropdown-toggle\", \"text-decoration-none\"], [1, \"dropdown-menu\"], [1, \"menu-item\", \"d-flex\", \"align-items-center\", \"gap-2\", \"ms-2\"], [1, \"oval\"], [1, \"oval-yellow\"], [1, \"oval-lime\"], [1, \"oval-teal\"], [1, \"oval-purple\"], [\"width\", \"20\", \"height\", \"20\", \"src\", \"https://img.icons8.com/external-kmg-design-outline-color-kmg-design/20/external-option-ui-essential-kmg-design-outline-color-kmg-design.png\", \"alt\", \"options icon\"], [1, \"checkbox-wrapper-3\"], [\"type\", \"checkbox\", \"id\", \"detect-water-checkbox\"], [\"for\", \"cbx-3\", 1, \"toggle\"], [\"id\", \"map\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_2_listener() {\n        return ctx.handleDrawMarkerClick();\n      });\n      i0.ɵɵtext(3, \" Markers \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵelement(5, \"img\", 4);\n      i0.ɵɵelementStart(6, \"a\", 5);\n      i0.ɵɵtext(7, \" Shapes \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"ul\", 6)(9, \"div\", 7);\n      i0.ɵɵelement(10, \"span\", 8);\n      i0.ɵɵelementStart(11, \"span\");\n      i0.ɵɵtext(12, \"First option\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 7);\n      i0.ɵɵelement(14, \"span\", 9);\n      i0.ɵɵelementStart(15, \"span\");\n      i0.ɵɵtext(16, \"First option\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 7);\n      i0.ɵɵelement(18, \"span\", 10);\n      i0.ɵɵelementStart(19, \"span\");\n      i0.ɵɵtext(20, \"First option\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 7);\n      i0.ɵɵelement(22, \"span\", 11);\n      i0.ɵɵelementStart(23, \"span\");\n      i0.ɵɵtext(24, \"First option\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 7);\n      i0.ɵɵelement(26, \"span\", 12);\n      i0.ɵɵelementStart(27, \"span\");\n      i0.ɵɵtext(28, \"First option\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(29, \"div\", 3);\n      i0.ɵɵelement(30, \"img\", 13);\n      i0.ɵɵelementStart(31, \"a\", 5);\n      i0.ɵɵtext(32, \" Options \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"ul\", 6)(34, \"div\", 7)(35, \"div\", 14);\n      i0.ɵɵelement(36, \"input\", 15);\n      i0.ɵɵelementStart(37, \"label\", 16);\n      i0.ɵɵelement(38, \"span\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"span\");\n      i0.ɵɵtext(40, \"Detect Water\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelement(41, \"div\", 17);\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"#map[_ngcontent-%COMP%] {\\r\\n    height: 100dvh;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.oval[_ngcontent-%COMP%] {\\r\\n    width: 10px;\\r\\n    height: 10px;\\r\\n    border-radius: 50%;\\r\\n    background: #333;\\r\\n}\\r\\n\\r\\n.oval-yellow[_ngcontent-%COMP%] {\\r\\n    width: 10px;\\r\\n    height: 10px;\\r\\n    border-radius: 50%;\\r\\n    background: #ffd700;\\r\\n}\\r\\n\\r\\n.oval-lime[_ngcontent-%COMP%] {\\r\\n    width: 10px;\\r\\n    height: 10px;\\r\\n    border-radius: 50%;\\r\\n    background: #00ff00;\\r\\n}\\r\\n\\r\\n.oval-teal[_ngcontent-%COMP%] {\\r\\n    width: 10px;\\r\\n    height: 10px;\\r\\n    border-radius: 50%;\\r\\n    background: #7fffd4;\\r\\n}\\r\\n\\r\\n.oval-purple[_ngcontent-%COMP%] {\\r\\n    width: 10px;\\r\\n    height: 10px;\\r\\n    border-radius: 50%;\\r\\n    background: #6a5acd;\\r\\n}\\r\\n\\r\\n.menu-item[_ngcontent-%COMP%]:hover {\\r\\n    color: blue;\\r\\n    transition: all;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   input[type=\\\"checkbox\\\"][_ngcontent-%COMP%] {\\r\\n    visibility: hidden;\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   .toggle[_ngcontent-%COMP%] {\\r\\n    position: relative;\\r\\n    display: block;\\r\\n    width: 40px;\\r\\n    height: 20px;\\r\\n    cursor: pointer;\\r\\n    -webkit-tap-highlight-color: transparent;\\r\\n    transform: translate3d(0, 0, 0);\\r\\n}\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   .toggle[_ngcontent-%COMP%]:before {\\r\\n    content: \\\"\\\";\\r\\n    position: relative;\\r\\n    top: 3px;\\r\\n    left: 3px;\\r\\n    width: 34px;\\r\\n    height: 14px;\\r\\n    display: block;\\r\\n    background: #9a9999;\\r\\n    border-radius: 8px;\\r\\n    transition: background 0.2s ease;\\r\\n}\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   .toggle[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n    display: block;\\r\\n    background: white;\\r\\n    border-radius: 10px;\\r\\n    box-shadow: 0 3px 8px rgba(154, 153, 153, 0.5);\\r\\n    transition: all 0.2s ease;\\r\\n}\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   .toggle[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:before {\\r\\n    content: \\\"\\\";\\r\\n    position: absolute;\\r\\n    display: block;\\r\\n    margin: -18px;\\r\\n    width: 56px;\\r\\n    height: 56px;\\r\\n    background: rgba(79, 46, 220, 0.5);\\r\\n    border-radius: 50%;\\r\\n    transform: scale(0);\\r\\n    opacity: 1;\\r\\n    pointer-events: none;\\r\\n}\\r\\n\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   #cbx-3[_ngcontent-%COMP%]:checked    + .toggle[_ngcontent-%COMP%]:before {\\r\\n    background: #947ada;\\r\\n}\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   #cbx-3[_ngcontent-%COMP%]:checked    + .toggle[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\r\\n    background: #4f2edc;\\r\\n    transform: translateX(20px);\\r\\n    transition: all 0.2s cubic-bezier(0.8, 0.4, 0.3, 1.25),\\r\\n        background 0.15s ease;\\r\\n    box-shadow: 0 3px 8px rgba(79, 46, 220, 0.2);\\r\\n}\\r\\n.checkbox-wrapper-3[_ngcontent-%COMP%]   #cbx-3[_ngcontent-%COMP%]:checked    + .toggle[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:before {\\r\\n    transform: scale(1);\\r\\n    opacity: 0;\\r\\n    transition: all 0.4s ease;\\r\\n}\\r\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsV0FBVztBQUNmOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksV0FBVztJQUNYLGVBQWU7SUFDZixlQUFlO0FBQ25COztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsY0FBYztJQUNkLFdBQVc7SUFDWCxZQUFZO0lBQ1osZUFBZTtJQUNmLHdDQUF3QztJQUN4QywrQkFBK0I7QUFDbkM7QUFDQTtJQUNJLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFNBQVM7SUFDVCxXQUFXO0lBQ1gsWUFBWTtJQUNaLGNBQWM7SUFDZCxtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLGdDQUFnQztBQUNwQztBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLE1BQU07SUFDTixPQUFPO0lBQ1AsV0FBVztJQUNYLFlBQVk7SUFDWixjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLG1CQUFtQjtJQUNuQiw4Q0FBOEM7SUFDOUMseUJBQXlCO0FBQzdCO0FBQ0E7SUFDSSxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxhQUFhO0lBQ2IsV0FBVztJQUNYLFlBQVk7SUFDWixrQ0FBa0M7SUFDbEMsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixVQUFVO0lBQ1Ysb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsMkJBQTJCO0lBQzNCOzZCQUN5QjtJQUN6Qiw0Q0FBNEM7QUFDaEQ7QUFDQTtJQUNJLG1CQUFtQjtJQUNuQixVQUFVO0lBQ1YseUJBQXlCO0FBQzdCIiwic291cmNlc0NvbnRlbnQiOlsiI21hcCB7XHJcbiAgICBoZWlnaHQ6IDEwMGR2aDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ub3ZhbCB7XHJcbiAgICB3aWR0aDogMTBweDtcclxuICAgIGhlaWdodDogMTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJhY2tncm91bmQ6ICMzMzM7XHJcbn1cclxuXHJcbi5vdmFsLXllbGxvdyB7XHJcbiAgICB3aWR0aDogMTBweDtcclxuICAgIGhlaWdodDogMTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJhY2tncm91bmQ6ICNmZmQ3MDA7XHJcbn1cclxuXHJcbi5vdmFsLWxpbWUge1xyXG4gICAgd2lkdGg6IDEwcHg7XHJcbiAgICBoZWlnaHQ6IDEwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMDBmZjAwO1xyXG59XHJcblxyXG4ub3ZhbC10ZWFsIHtcclxuICAgIHdpZHRoOiAxMHB4O1xyXG4gICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYmFja2dyb3VuZDogIzdmZmZkNDtcclxufVxyXG5cclxuLm92YWwtcHVycGxlIHtcclxuICAgIHdpZHRoOiAxMHB4O1xyXG4gICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYmFja2dyb3VuZDogIzZhNWFjZDtcclxufVxyXG5cclxuLm1lbnUtaXRlbTpob3ZlciB7XHJcbiAgICBjb2xvcjogYmx1ZTtcclxuICAgIHRyYW5zaXRpb246IGFsbDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmNoZWNrYm94LXdyYXBwZXItMyBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0ge1xyXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLmNoZWNrYm94LXdyYXBwZXItMyAudG9nZ2xlIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDQwcHg7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcclxufVxyXG4uY2hlY2tib3gtd3JhcHBlci0zIC50b2dnbGU6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0b3A6IDNweDtcclxuICAgIGxlZnQ6IDNweDtcclxuICAgIHdpZHRoOiAzNHB4O1xyXG4gICAgaGVpZ2h0OiAxNHB4O1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBiYWNrZ3JvdW5kOiAjOWE5OTk5O1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjJzIGVhc2U7XHJcbn1cclxuLmNoZWNrYm94LXdyYXBwZXItMyAudG9nZ2xlIHNwYW4ge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHdpZHRoOiAyMHB4O1xyXG4gICAgaGVpZ2h0OiAyMHB4O1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDNweCA4cHggcmdiYSgxNTQsIDE1MywgMTUzLCAwLjUpO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcclxufVxyXG4uY2hlY2tib3gtd3JhcHBlci0zIC50b2dnbGUgc3BhbjpiZWZvcmUge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luOiAtMThweDtcclxuICAgIHdpZHRoOiA1NnB4O1xyXG4gICAgaGVpZ2h0OiA1NnB4O1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSg3OSwgNDYsIDIyMCwgMC41KTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbn1cclxuXHJcbi5jaGVja2JveC13cmFwcGVyLTMgI2NieC0zOmNoZWNrZWQgKyAudG9nZ2xlOmJlZm9yZSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjOTQ3YWRhO1xyXG59XHJcbi5jaGVja2JveC13cmFwcGVyLTMgI2NieC0zOmNoZWNrZWQgKyAudG9nZ2xlIHNwYW4ge1xyXG4gICAgYmFja2dyb3VuZDogIzRmMmVkYztcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHB4KTtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjJzIGN1YmljLWJlemllcigwLjgsIDAuNCwgMC4zLCAxLjI1KSxcclxuICAgICAgICBiYWNrZ3JvdW5kIDAuMTVzIGVhc2U7XHJcbiAgICBib3gtc2hhZG93OiAwIDNweCA4cHggcmdiYSg3OSwgNDYsIDIyMCwgMC4yKTtcclxufVxyXG4uY2hlY2tib3gtd3JhcHBlci0zICNjYngtMzpjaGVja2VkICsgLnRvZ2dsZSBzcGFuOmJlZm9yZSB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjRzIGVhc2U7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AppComponent };","map":{"version":3,"names":["environment","Loader","map","VietNamCor","lat","lng","loader","apiKey","version","currentInfoWindow","circles","markers","rectangles","AppComponent","constructor","http","successMarkers","coordinate","Number","readFile","get","responseType","subscribe","data","result","split","item","index","push","marker","google","maps","Marker","position","title","error","console","log","handleDrawHandClick","drawingManager","setDrawingMode","handleDrawMarkerClick","detectWater","_ref","_asyncToGenerator","url","options","method","headers","response","fetch","json","water","undefined","_x","_x2","apply","arguments","drawing","OverlayType","MARKER","event","addListener","_ref2","setIcon","getPosition","isWater","alert","setMap","length","forEach","circleCenter","getCenter","circleRadius","getRadius","markerPosition","geometry","spherical","computeDistanceBetween","rectangleBound","getBounds","contains","close","infowindow","InfoWindow","content","open","editCheckbox","document","getElementById","removeCheckbox","getDraggable","setAttribute","removeAttribute","addEventListener","setDraggable","_x3","handleDrawCircleClick","CIRCLE","circle","handleClearCircleClick","handleDrawShapeClick","POLYGON","polygon","setPosition","latLng","handleDrawLineClick","POLYLINE","line","handleDrawRectangleClick","RECTANGLE","rectangle","ngOnInit","waterCheckbox","querySelector","demo","_this","load","then","Map","importLibrary","center","zoom","DrawingManager","drawingMode","drawingControl","circleOptions","fillColor","fillOpacity","strokeWeight","clickable","editable","zIndex","i0","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AppComponent_Template_button_click_2_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["/home/Workspace/FPT/AngularDemo/src/app/app.component.ts","/home/Workspace/FPT/AngularDemo/src/app/app.component.html"],"sourcesContent":["import { environment } from 'src/environments/environment.development';\nimport { Component, OnInit } from '@angular/core';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport * as _ from 'lodash';\nimport { HttpClient } from '@angular/common/http';\n\nlet map: google.maps.Map;\nconst VietNamCor = { lat: 15.9031, lng: 105.8067 };\n\nlet loader = new Loader({\n    apiKey: environment.apiKey,\n    version: 'weekly',\n});\n\nlet currentInfoWindow: any = null;\nconst circles: Array<any> = [];\nconst markers: Array<any> = [];\nconst rectangles: Array<any> = [];\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n    constructor(private http: HttpClient) {}\n\n    result: any;\n    successMarkers: Array<Object> = [];\n    coordinate: Array<Object> = [\n        {\n            lat: Number,\n            lng: Number,\n        },\n    ];\n    drawingManager: any;\n\n    ngOnInit(): void {\n        const waterCheckbox = document.querySelector('#detect-water-checkbox')\n        water\n        this.demo();\n    }\n\n    readFile = () => {\n        this.http.get('assets/Book1.csv', { responseType: 'text' }).subscribe(\n            (data: any) => {\n                this.result = data.split('\\n');\n\n                this.result.map((item: any, index: number) => {\n                    this.coordinate.push({\n                        lat: item.split(',')[0],\n                        lng: item.split(',')[1],\n                    });\n\n                    const marker = new google.maps.Marker({\n                        position: {\n                            lat: Number(item.split(',')[0]),\n                            lng: Number(item.split(',')[1]),\n                        },\n                        map,\n                        title: `Item index ${index}`,\n                    });\n\n                    return marker;\n                });\n            },\n            (error: any) => console.log(error.error)\n        );\n    };\n    \n    demo() {\n        loader.load().then(async () => {\n            //* initial map element\n            const { Map } = (await google.maps.importLibrary(\n                'maps'\n            )) as google.maps.MapsLibrary;\n            map = new Map(document.getElementById('map') as HTMLElement, {\n                center: VietNamCor,\n                zoom: 8,\n            });\n\n            this.drawingManager = new google.maps.drawing.DrawingManager({\n                drawingMode: null,\n                drawingControl: false,\n                circleOptions: {\n                    fillColor: '#ffff00',\n                    fillOpacity: 1,\n                    strokeWeight: 5,\n                    clickable: false,\n                    editable: true,\n                    zIndex: 1,\n                },\n            });\n            this.drawingManager.setMap(map);\n        });\n    }\n\n    handleDrawHandClick = () => {\n        this.drawingManager.setDrawingMode(null);\n    };\n\n    handleDrawMarkerClick = () => {\n        const detectWater = async (lat?: number, lng?: number) => {\n            try {\n                const url = `https://isitwater-com.p.rapidapi.com/?latitude=${lat}&longitude=${lng}`;\n                const options = {\n                    method: 'GET',\n                    headers: {\n                        'X-RapidAPI-Key':\n                            '911f81d9e3msh5f705b8931d758cp13855bjsn19b3ba12960e',\n                        'X-RapidAPI-Host': 'isitwater-com.p.rapidapi.com',\n                    },\n                };\n                const response = await fetch(url, options);\n                const result = await response.json();\n                if (result.water) {\n                    return true;\n                }\n                return false;\n            } catch (error) {\n                console.error(error);\n                return undefined;\n            }\n        };\n\n        this.drawingManager.setDrawingMode(\n            google.maps.drawing.OverlayType.MARKER\n        );\n\n        google.maps.event.addListener(\n            this.drawingManager,\n            'markercomplete',\n            async function (marker: any) {\n                marker.setIcon(\n                    'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\n                );\n\n                const lat = marker.getPosition()?.lat();\n                const lng = marker.getPosition()?.lng();\n\n                const isWater = await detectWater(lat, lng);\n\n                if (isWater) {\n                    alert('You are placing marker on water');\n                    return marker.setMap(null);\n                }\n\n                markers.push(marker);\n\n                if (circles.length > 0) {\n                    circles.forEach((item) => {\n                        const circleCenter = item.getCenter();\n                        const circleRadius = item.getRadius();\n                        const markerPosition = marker.getPosition();\n                        \n                        if (markerPosition && circleCenter) {\n                            if (\n                                google.maps.geometry.spherical.computeDistanceBetween(\n                                    circleCenter,\n                                    markerPosition\n                                ) <= circleRadius\n                            ) {\n                                marker.setIcon(\n                                    'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\n                                );\n                            } else {\n                                marker.setIcon(\n                                    'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\n                                );\n                            }\n                        }\n                    });\n                }\n\n                if (rectangles.length > 0) {\n                    const markerPosition = marker.getPosition();\n                    rectangles.forEach((item) => {\n                        const rectangleBound = item.getBounds();\n                        if (\n                            markerPosition &&\n                            rectangleBound?.contains(markerPosition)\n                        ) {\n                            marker.setIcon(\n                                'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\n                            );\n                        } else {\n                            marker.setIcon(\n                                'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\n                            );\n                        }\n                    });\n                }\n\n                marker.addListener('rightclick', () => {\n                    if (currentInfoWindow) {\n                        currentInfoWindow.close();\n                    }\n                    const infowindow = new google.maps.InfoWindow({\n                        content:\n                            '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' +\n                            '<div><input type=\"checkbox\" id=\"remove\">Remove</div>',\n                    });\n\n                    infowindow.open(map, marker);\n                    currentInfoWindow = infowindow;\n\n                    infowindow.addListener('domready', () => {\n                        const editCheckbox = document.getElementById('edit');\n                        const removeCheckbox =\n                            document.getElementById('remove');\n\n                        if (marker.getDraggable()) {\n                            editCheckbox?.setAttribute('checked', 'true');\n                        } else {\n                            editCheckbox?.removeAttribute('checked');\n                        }\n\n                        editCheckbox?.addEventListener('change', () => {\n                            if (marker.getDraggable()) {\n                                editCheckbox?.removeAttribute('checked');\n                                marker.setDraggable(null);\n                            } else {\n                                editCheckbox.setAttribute('checked', 'true');\n                                marker.setDraggable(true);\n                            }\n                        });\n\n                        removeCheckbox?.addEventListener('change', () => {\n                            marker.setMap(null);\n                        });\n                    });\n                });\n\n                marker.addListener('dragend', async () => {\n                    const lat = marker.getPosition()?.lat();\n                    const lng = marker.getPosition()?.lng();\n                    const isWater = await detectWater(lat, lng);\n                    const markerPosition = marker.getPosition();\n\n                    if (isWater) {\n                        alert('You are placing marker on water');\n                        return marker.setMap(null);\n                    }\n\n                    circles.forEach((item) => {\n                        const circleCenter = item.getCenter();\n                        const circleRadius = item.getRadius();\n\n                        if (markerPosition && circleCenter) {\n                            if (\n                                google.maps.geometry.spherical.computeDistanceBetween(\n                                    circleCenter,\n                                    markerPosition\n                                ) <= circleRadius\n                            ) {\n                                marker.setIcon(\n                                    'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\n                                );\n                            }\n                        }\n                    });\n\n                    rectangles.forEach((item) => {\n                        const rectangleBound = item.getBounds();\n                        if (\n                            markerPosition &&\n                            rectangleBound?.contains(markerPosition)\n                        ) {\n                            marker.setIcon(\n                                'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\n                            );\n                        }\n                    });\n                });\n            }\n        );\n    };\n\n    handleDrawCircleClick = () => {\n        this.drawingManager.setDrawingMode(\n            google.maps.drawing.OverlayType.CIRCLE\n        );\n\n        google.maps.event.addListener(\n            this.drawingManager,\n            'circlecomplete',\n            function (circle: any) {\n                circles.push(circle);\n\n                circle.addListener('bounds_changed', () => {\n                    const circleCenter = circle.getCenter();\n                    const circleRadius = circle.getRadius();\n\n                    markers.forEach((item) => {\n                        const markerPosition = item.getPosition();\n\n                        if (markerPosition && circleCenter) {\n                            if (\n                                google.maps.geometry.spherical.computeDistanceBetween(\n                                    circleCenter,\n                                    markerPosition\n                                ) <= circleRadius\n                            ) {\n                                item.setIcon(\n                                    'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\n                                );\n                            } else {\n                                item.setIcon(\n                                    'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\n                                );\n                            }\n                        }\n                    });\n                });\n            }\n        );\n    };\n\n    handleClearCircleClick = () => {\n        circles.forEach((circle) => {\n            circle.setMap(null);\n        });\n\n        circles.length = 0;\n    };\n\n    handleDrawShapeClick = () => {\n        this.drawingManager.setDrawingMode(\n            google.maps.drawing.OverlayType.POLYGON\n        );\n\n        google.maps.event.addListener(\n            this.drawingManager,\n            'polygoncomplete',\n            function (polygon: any) {\n                polygon.addListener('rightclick', function (event: any) {\n                    if (currentInfoWindow) {\n                        currentInfoWindow.close();\n                    }\n                    const infowindow = new google.maps.InfoWindow({\n                        content:\n                            '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' +\n                            '<div><input type=\"checkbox\" id=\"remove\">Remove</div>',\n                    });\n\n                    infowindow.setPosition(event.latLng);\n                    infowindow.open(map);\n                    currentInfoWindow = infowindow;\n\n                    infowindow.addListener('domready', () => {\n                        const editCheckbox = document.getElementById('edit');\n                        const removeCheckbox =\n                            document.getElementById('remove');\n\n                        if (polygon.getDraggable()) {\n                            editCheckbox?.setAttribute('checked', 'true');\n                        } else {\n                            editCheckbox?.removeAttribute('checked');\n                        }\n\n                        editCheckbox?.addEventListener('change', () => {\n                            if (polygon.getDraggable()) {\n                                editCheckbox?.removeAttribute('checked');\n                                polygon.setDraggable(null);\n                            } else {\n                                editCheckbox.setAttribute('checked', 'true');\n                                polygon.setDraggable(true);\n                            }\n                        });\n\n                        removeCheckbox?.addEventListener('change', () => {\n                            polygon.setMap(null);\n                            infowindow.close();\n                        });\n                    });\n                });\n            }\n        );\n    };\n    handleDrawLineClick = () => {\n        this.drawingManager.setDrawingMode(\n            google.maps.drawing.OverlayType.POLYLINE\n        );\n\n        google.maps.event.addListener(\n            this.drawingManager,\n            'polylinecomplete',\n            function (line: any) {\n                line.addListener('rightclick', function (event: any) {\n                    if (currentInfoWindow) {\n                        currentInfoWindow.close();\n                    }\n                    const infowindow = new google.maps.InfoWindow({\n                        content:\n                            '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' +\n                            '<div><input type=\"checkbox\" id=\"remove\">Remove</div>',\n                    });\n\n                    infowindow.setPosition(event.latLng);\n                    infowindow.open(map);\n                    currentInfoWindow = infowindow;\n\n                    infowindow.addListener('domready', () => {\n                        const editCheckbox = document.getElementById('edit');\n                        const removeCheckbox =\n                            document.getElementById('remove');\n\n                        if (line.getDraggable()) {\n                            editCheckbox?.setAttribute('checked', 'true');\n                        } else {\n                            editCheckbox?.removeAttribute('checked');\n                        }\n\n                        editCheckbox?.addEventListener('change', () => {\n                            if (line.getDraggable()) {\n                                editCheckbox?.removeAttribute('checked');\n                                line.setDraggable(null);\n                            } else {\n                                editCheckbox.setAttribute('checked', 'true');\n                                line.setDraggable(true);\n                            }\n                        });\n\n                        removeCheckbox?.addEventListener('change', () => {\n                            line.setMap(null);\n                            infowindow.close();\n                        });\n                    });\n                });\n            }\n        );\n    };\n\n    handleDrawRectangleClick = () => {\n        this.drawingManager.setDrawingMode(\n            google.maps.drawing.OverlayType.RECTANGLE\n        );\n\n        google.maps.event.addListener(\n            this.drawingManager,\n            'rectanglecomplete',\n            function (rectangle: any) {\n                rectangles.push(rectangle);\n\n                rectangle.addListener('rightclick', function (event: any) {\n                    if (currentInfoWindow) {\n                        currentInfoWindow.close();\n                    }\n                    const infowindow = new google.maps.InfoWindow({\n                        content:\n                            '<div><input type=\"checkbox\" id=\"edit\">Edit</div>' +\n                            '<div><input type=\"checkbox\" id=\"remove\">Remove</div>',\n                    });\n\n                    infowindow.setPosition(event.latLng);\n                    infowindow.open(map);\n                    currentInfoWindow = infowindow;\n\n                    infowindow.addListener('domready', () => {\n                        const editCheckbox = document.getElementById('edit');\n                        const removeCheckbox =\n                            document.getElementById('remove');\n\n                        if (rectangle.getDraggable()) {\n                            editCheckbox?.setAttribute('checked', 'true');\n                        } else {\n                            editCheckbox?.removeAttribute('checked');\n                        }\n\n                        editCheckbox?.addEventListener('change', () => {\n                            if (rectangle.getDraggable()) {\n                                editCheckbox?.removeAttribute('checked');\n                                rectangle.setDraggable(null);\n                            } else {\n                                editCheckbox.setAttribute('checked', 'true');\n                                rectangle.setDraggable(true);\n                            }\n                        });\n\n                        removeCheckbox?.addEventListener('change', () => {\n                            rectangle.setMap(null);\n                            infowindow.close();\n                        });\n                    });\n                });\n            }\n        );\n    };\n}\n","<div class=\"ms-4 d-flex gap-3\">\n    <div class=\"d-flex flex-column gap-3\">\n        <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            (click)=\"handleDrawMarkerClick()\"\n        >\n            Markers\n        </button>\n        <div class=\"dropdown d-flex align-items-center\">\n            <img\n                width=\"20\"\n                height=\"20\"\n                src=\"https://img.icons8.com/external-flat-andi-nur-abdillah/20/external-Option-survey-(flat)-flat-andi-nur-abdillah.png\"\n                alt=\"shapes icon\"\n            />\n            <a\n                class=\"dropdown-toggle text-decoration-none\"\n                data-bs-toggle=\"dropdown\"\n                data-bs-auto-close=\"outside\"\n                aria-expanded=\"false\"\n                role=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n            >\n                Shapes\n            </a>\n\n            <ul class=\"dropdown-menu\">\n                <div class=\"menu-item d-flex align-items-center gap-2 ms-2\">\n                    <span class=\"oval\"></span>\n                    <span>First option</span>\n                </div>\n                <div class=\"menu-item d-flex align-items-center gap-2 ms-2\">\n                    <span class=\"oval-yellow\"></span>\n                    <span>First option</span>\n                </div>\n                <div class=\"menu-item d-flex align-items-center gap-2 ms-2\">\n                    <span class=\"oval-lime\"></span>\n                    <span>First option</span>\n                </div>\n                <div class=\"menu-item d-flex align-items-center gap-2 ms-2\">\n                    <span class=\"oval-teal\"></span>\n                    <span>First option</span>\n                </div>\n                <div class=\"menu-item d-flex align-items-center gap-2 ms-2\">\n                    <span class=\"oval-purple\"></span>\n                    <span>First option</span>\n                </div>\n            </ul>\n        </div>\n        <div class=\"dropdown d-flex align-items-center\">\n            <img\n                width=\"20\"\n                height=\"20\"\n                src=\"https://img.icons8.com/external-kmg-design-outline-color-kmg-design/20/external-option-ui-essential-kmg-design-outline-color-kmg-design.png\"\n                alt=\"options icon\"\n            />\n            <a\n                class=\"dropdown-toggle text-decoration-none\"\n                data-bs-toggle=\"dropdown\"\n                data-bs-auto-close=\"outside\"\n                aria-expanded=\"false\"\n                role=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n            >\n                Options\n            </a>\n\n            <ul class=\"dropdown-menu\">\n                <div class=\"menu-item d-flex align-items-center gap-2 ms-2\">\n                    <div class=\"checkbox-wrapper-3\">\n                        <input type=\"checkbox\" id=\"detect-water-checkbox\" />\n                        <label for=\"cbx-3\" class=\"toggle\"><span></span></label>\n                    </div>\n                    <span>Detect Water</span>\n                </div>\n            </ul>\n        </div>\n    </div>\n    <div id=\"map\"></div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}